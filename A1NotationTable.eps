%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: EIDP.pdf
%%Creator: Adobe Acrobat 20.6.0
%%For: centimeter
%%CreationDate: 2024-05-27, 15:03:46
%%BoundingBox: 0 0 257 427
%%HiResBoundingBox: 0 0 256.6103 426.7891
%%CropBox: 0 0 256.6103 426.7891
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 11473 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c016 91.163616, 2018/10/29-16:58:49        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdfaExtension="http://www.aiim.org/pdfa/ns/extension/"
    xmlns:pdfaSchema="http://www.aiim.org/pdfa/ns/schema#"
    xmlns:pdfaProperty="http://www.aiim.org/pdfa/ns/property#"
    xmlns:pdfaType="http://www.aiim.org/pdfa/ns/type#"
    xmlns:pdfaField="http://www.aiim.org/pdfa/ns/field#"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:Iptc4xmpCore="http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/"
    xmlns:prism="http://prismstandard.org/namespaces/basic/3.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
   pdf:Producer="XeTeX version 0.999993"
   pdf:Keywords="Behavior Set, Sequential Recommendation"
   dc:format="application/pdf"
   dc:source="EIDP.tex"
   dc:identifier="info:doi/XXXXXXX.XXXXXXX"
   xmp:CreateDate="2024-05-27T15:01:32+08:00"
   xmp:ModifyDate="2024-05-27T15:02:32+08:00"
   xmp:MetadataDate="2024-05-27T15:02:32+08:00"
   xmp:CreatorTool="LaTeX with acmart 2023/11/05 v2.00 Typesetting articles for the Association for Computing Machinery and hyperref 2021-02-27 v7.00k Hypertext links for LaTeX"
   xmpMM:DocumentID="uuid:aeaeaeae-4675-4f75-867f-d13ea3390059"
   xmpMM:InstanceID="uuid:15662bec-f24a-48cc-93db-d272405d597b"
   xmpMM:VersionID="1"
   xmpMM:RenditionClass="default"
   prism:complianceProfile="three"
   prism:aggregationType="book"
   prism:volume="1"
   prism:number="1"
   prism:doi="XXXXXXX.XXXXXXX"
   prism:pageCount="4"
   xmpTPg:NPages="4">
   <pdfaExtension:schemas>
    <rdf:Bag>
     <rdf:li>
      <rdf:Description
       pdfaSchema:schema="Adobe PDF Schema"
       pdfaSchema:prefix="pdf"
       pdfaSchema:namespaceURI="http://ns.adobe.com/pdf/1.3/">
      <pdfaSchema:property>
       <rdf:Seq>
        <rdf:li
         pdfaProperty:name="Trapped"
         pdfaProperty:valueType="Text"
         pdfaProperty:category="internal"
         pdfaProperty:description="Indication if the document has been modified to include trapping information"/>
       </rdf:Seq>
      </pdfaSchema:property>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       pdfaSchema:schema="XMP Media Management Schema"
       pdfaSchema:prefix="xmpMM"
       pdfaSchema:namespaceURI="http://ns.adobe.com/xap/1.0/mm/">
      <pdfaSchema:property>
       <rdf:Seq>
        <rdf:li
         pdfaProperty:name="DocumentID"
         pdfaProperty:valueType="URI"
         pdfaProperty:category="internal"
         pdfaProperty:description="UUID based identifier for all versions and renditions of a document"/>
        <rdf:li
         pdfaProperty:name="InstanceID"
         pdfaProperty:valueType="URI"
         pdfaProperty:category="internal"
         pdfaProperty:description="UUID based identifier for specific incarnation of a document"/>
        <rdf:li
         pdfaProperty:name="VersionID"
         pdfaProperty:valueType="Text"
         pdfaProperty:category="internal"
         pdfaProperty:description="Document version identifier"/>
        <rdf:li
         pdfaProperty:name="RenditionClass"
         pdfaProperty:valueType="RenditionClass"
         pdfaProperty:category="internal"
         pdfaProperty:description="The manner in which a document is rendered"/>
       </rdf:Seq>
      </pdfaSchema:property>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       pdfaSchema:schema="IPTC Core Schema"
       pdfaSchema:prefix="Iptc4xmpCore"
       pdfaSchema:namespaceURI="http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/">
      <pdfaSchema:property>
       <rdf:Seq>
        <rdf:li
         pdfaProperty:name="CreatorContactInfo"
         pdfaProperty:valueType="ContactInfo"
         pdfaProperty:category="external"
         pdfaProperty:description="Document creator's contact information"/>
       </rdf:Seq>
      </pdfaSchema:property>
      <pdfaSchema:valueType>
       <rdf:Seq>
        <rdf:li>
         <rdf:Description
          pdfaType:type="ContactInfo"
          pdfaType:namespaceURI="http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/"
          pdfaType:prefix="Iptc4xmpCore"
          pdfaType:description="Basic set of information to get in contact with a person">
         <pdfaType:field>
          <rdf:Seq>
           <rdf:li
            pdfaField:name="CiAdrCity"
            pdfaField:valueType="Text"
            pdfaField:description="Contact information city"/>
           <rdf:li
            pdfaField:name="CiAdrCtry"
            pdfaField:valueType="Text"
            pdfaField:description="Contact information country"/>
           <rdf:li
            pdfaField:name="CiAdrExtadr"
            pdfaField:valueType="Text"
            pdfaField:description="Contact information address"/>
           <rdf:li
            pdfaField:name="CiAdrPcode"
            pdfaField:valueType="Text"
            pdfaField:description="Contact information local postal code"/>
           <rdf:li
            pdfaField:name="CiAdrRegion"
            pdfaField:valueType="Text"
            pdfaField:description="Contact information regional information such as state or province"/>
           <rdf:li
            pdfaField:name="CiEmailWork"
            pdfaField:valueType="Text"
            pdfaField:description="Contact information email address(es)"/>
           <rdf:li
            pdfaField:name="CiTelWork"
            pdfaField:valueType="Text"
            pdfaField:description="Contact information telephone number(s)"/>
           <rdf:li
            pdfaField:name="CiUrlWork"
            pdfaField:valueType="Text"
            pdfaField:description="Contact information Web URL(s)"/>
          </rdf:Seq>
         </pdfaType:field>
         </rdf:Description>
        </rdf:li>
       </rdf:Seq>
      </pdfaSchema:valueType>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       pdfaSchema:schema="PRISM Basic Metadata"
       pdfaSchema:prefix="prism"
       pdfaSchema:namespaceURI="http://prismstandard.org/namespaces/basic/3.0/">
      <pdfaSchema:property>
       <rdf:Seq>
        <rdf:li
         pdfaProperty:name="complianceProfile"
         pdfaProperty:valueType="Text"
         pdfaProperty:category="internal"
         pdfaProperty:description="PRISM specification compliance profile to which this document adheres"/>
        <rdf:li
         pdfaProperty:name="publicationName"
         pdfaProperty:valueType="Text"
         pdfaProperty:category="external"
         pdfaProperty:description="Publication name"/>
        <rdf:li
         pdfaProperty:name="aggregationType"
         pdfaProperty:valueType="Text"
         pdfaProperty:category="external"
         pdfaProperty:description="Publication type"/>
        <rdf:li
         pdfaProperty:name="bookEdition"
         pdfaProperty:valueType="Text"
         pdfaProperty:category="external"
         pdfaProperty:description="Edition of the book in which the document was published"/>
        <rdf:li
         pdfaProperty:name="volume"
         pdfaProperty:valueType="Text"
         pdfaProperty:category="external"
         pdfaProperty:description="Publication volume number"/>
        <rdf:li
         pdfaProperty:name="number"
         pdfaProperty:valueType="Text"
         pdfaProperty:category="external"
         pdfaProperty:description="Publication issue number within a volume"/>
        <rdf:li
         pdfaProperty:name="pageRange"
         pdfaProperty:valueType="Text"
         pdfaProperty:category="external"
         pdfaProperty:description="Page range for the document within the print version of its publication"/>
        <rdf:li
         pdfaProperty:name="issn"
         pdfaProperty:valueType="Text"
         pdfaProperty:category="external"
         pdfaProperty:description="ISSN for the printed publication in which the document was published"/>
        <rdf:li
         pdfaProperty:name="eIssn"
         pdfaProperty:valueType="Text"
         pdfaProperty:category="external"
         pdfaProperty:description="ISSN for the electronic publication in which the document was published"/>
        <rdf:li
         pdfaProperty:name="isbn"
         pdfaProperty:valueType="Text"
         pdfaProperty:category="external"
         pdfaProperty:description="ISBN for the publication in which the document was published"/>
        <rdf:li
         pdfaProperty:name="doi"
         pdfaProperty:valueType="Text"
         pdfaProperty:category="external"
         pdfaProperty:description="Digital Object Identifier for the document"/>
        <rdf:li
         pdfaProperty:name="url"
         pdfaProperty:valueType="URL"
         pdfaProperty:category="external"
         pdfaProperty:description="URL at which the document can be found"/>
        <rdf:li
         pdfaProperty:name="byteCount"
         pdfaProperty:valueType="Integer"
         pdfaProperty:category="internal"
         pdfaProperty:description="Approximate file size in octets"/>
        <rdf:li
         pdfaProperty:name="pageCount"
         pdfaProperty:valueType="Integer"
         pdfaProperty:category="internal"
         pdfaProperty:description="Number of pages in the print version of the document"/>
        <rdf:li
         pdfaProperty:name="subtitle"
         pdfaProperty:valueType="Text"
         pdfaProperty:category="external"
         pdfaProperty:description="Document's subtitle"/>
       </rdf:Seq>
      </pdfaSchema:property>
      </rdf:Description>
     </rdf:li>
    </rdf:Bag>
   </pdfaExtension:schemas>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="en">Explicit and Implicit Modeling via Dual-Path Transformer for Behavior Set-informed Sequential Recommendation</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="en">-  Information systems  -&gt;  Recommender systems.</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:publisher>
    <rdf:Bag>
     <rdf:li>Association for Computing Machinery</rdf:li>
    </rdf:Bag>
   </dc:publisher>
   <dc:date>
    <rdf:Seq>
     <rdf:li>2024-05-27T15:01:32+08:00</rdf:li>
    </rdf:Seq>
   </dc:date>
   <dc:type>
    <rdf:Bag>
     <rdf:li>Text</rdf:li>
    </rdf:Bag>
   </dc:type>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Ming Chen</rdf:li>
     <rdf:li>Weike Pan</rdf:li>
     <rdf:li>Zhong Ming</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>Behavior Set</rdf:li>
     <rdf:li>Sequential Recommendation</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <dc:language>
    <rdf:Bag>
     <rdf:li>en</rdf:li>
    </rdf:Bag>
   </dc:language>
   <Iptc4xmpCore:CreatorContactInfo
    Iptc4xmpCore:CiAdrCity="Shenzhen"
    Iptc4xmpCore:CiAdrCtry="China"
    Iptc4xmpCore:CiEmailWork="2252271001@email.szu.edu.cn"/>
   <prism:publicationName xml:lang="en">Proceedings of Proceedings of the 30th ACM SIGKDD Conference on Knowledge Discovery and Data Mining (KDD '24)</prism:publicationName>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -426.789 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52588e-5 0 mo
1.52588e-5 426.789 li
256.61 426.789 li
256.61 0 li
cp
clp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DBAAAA+LinBiolinumO-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (DBAAAA+LinBiolinumO-Identity-H)
%%Title: (DBAAAA+LinBiolinumO-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /DBAAAA+LinBiolinumO-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-1082 -268 6171 893} def
/FontInfo 5 dict dup begin
/Notice (Linux Libertine by Philipp H. Poll,
Open Font under Terms of following Free Software Licenses:
GPL (General Public License) with font-exception and OFL (Open Font License).
Created with FontForge (http://fontforge.sf.net)
Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,2012) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 1612 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 16 dict dup begin
/BlueValues [-12 0 429 442 460 474 600 610 645 658 688 698] def
/OtherBlues [-238 -227] def
/FamilyBlues [-12 0 429 442 460 474 600 610 645 658 688 698] def
/FamilyOtherBlues [-238 -227] def
/BlueScale 0.039625 def
/BlueShift 6 def
/StdHW [44] def
/StdVW [80] def
/StemSnapH [44] def
/StemSnapV [80 103] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 35 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
44 <001C60D8A8C9B668C470308D177DE14EB949548C5FD93174CC9019D5EC60
420C68A5BFD8700E65672C4AF577ACCED1C87C20A72112A1BFBF99800C286C57
92BF808B0A2995765E6A52AAC8F6AA398DF041DA2D586B74B98D3D9080F5B6B8
57836C8E9FBDFFBF251052F34892DC62B23D877B7BC148E4CBE8AB831BC212E8
32C3F7B57E11DFCFC9955F4EA59040C77085FCBB3320FA87DA369F9F60E59918
3A787A53D8158265FBA0BCE83AC43651D007AA028DCC54D5BF1BF2585D33F224
9C79A4709ADA4CA2C89E9CB14E0CBA7DE2C6C74981018759C6> |
37 <001C60D8A8C9B63B8DE623DDEDC29788BF37003DD40ACDD95C7E9D3D85E8
FD058612468981FC1DFA0606FE49783636B6310C692EBC183718ED1C5EA85DFD
3A334EA85F9AAB291FBCFC69194CFD400FDB5488072354D290652BF307D10A7E
2C7C3533F2707BB13867F683F3453160C6D19ED8FB408309DA497EA4C8A347D1
C4> |
1611 <001C60D8A8C9B85EE3A52129105925D033DB02E5F2CB47662F8F884BBC
E3A11CE6148F3AF46F6EB1724ED7004265AA95F3B0A4C2BED256227F361742DD
E2F123C7FD873A9C09D6E8C401799DA95C61F279886177BE06C6310CCF62497F
AD53030E5AC18BF393508AFB112FCEEEA4252D8963A90B5E18685BBB4C637E31
A10E38907A4E1829E6FD23CD1E0AB6AFBEA8CFEF9D796118EF58BAF8C88958E0
D57AC4511005221CE782F0> |
19 <001C60D8A8C9B74A3E8F18031D157B197EE40B2F05F24823DCCE3C9FE6FE
88DFEAEADE3C54D5C2E68FEDCFB42A2C8A8AB8404597A79D942ED80892B1713B
4E02AF5D11C9F232D2033876C30DC700F19E8514E911A6A40E803B7397EE5234
DF042C57CB076CD3BFB59A30FC289AC6A32B2B497DFD733E807F351D8272129B
057476BE4830498C99E6FCEFEB083AC0390B2629700CB1D864A814CCCD70770D
BA34617DF6A4C20C5926AC653E2CB6F5C721C2C382F57FF0465F32058C88C2A8
51D347CA84D9C7EBDC616DB080B053B6E372D5FE032AE75F17CE038885EE3854
F2CED241EFBAABD69FF8016CDEB048AFBBB22C9BC83DF13E7F5EA5F6FBB3CB4E
DBC80F83A9B55F0BC6D07991BE3E152F61758F2A52AF4A0244DC7E024EC005B1
EABC0770A85C7EA1E9E33A9D3A97C3F34CED0E5BD86AA213F8E5F72964BE37BF
E9D67ADA11179BF739A8E1ECD35F5DA26C20AE937297F39F25078B96B40BB1A0
EFD21B4FDA7C5B9CCBFF0044B5FD74683DB401EF29FB2B9A8D9264DDAB9707DC
CCAF5EA0AE589340EA8CBF8A6CFF75937ED1FF2529B132CEA33B11B57881196F
A6119F329F73974594D3CB3F3278BDD1075A> |
21 <001C60D8A8C9B74A3E999339F7F6181EDED70ADB705C8C2BDCB54579F0C6
059EFDC136E5A7B769A3524EC34826D8594E266D60B0C17B164DE6A40D111B3A
E5113932CF6630A0F7F85F37D2A8C83A67010B84DE007F4CFEF72595D4F48237
39A568842212BB2D58FEB05942054FF6B93625AF1DD33C44FE91723BBE2671F1
4FBDAA8A126ACBC611AC392DF4D3DE4B339A> |
13 <001C60D8A8C9B88EAFEB3F4616B4B20AEE823075E9266387911A774E24E1
0CD045FF7C9A183F9DFDE67197CDB5CBE31BC1685922E03016F48C549B6210F7
EF12557E7BC5BC896E48571474130822F973855490D1735BFF664DE610E87149
F1AF80CB874BEB9F5459010340BFCE044531D978A26F41DE616F3AFDBF659127
5384338D96E1B327CB11CB76C2FB0C849D602A379FE1674098E267465EC2A28B
29BF8C3D> |
34 <001C60D8A8C9B668C470308D19858B425BE5AE0A274BC9914BC534750489
B5A460A1E2908BD22C77D9362F357F3AEF579110739C14DEA29A3BE5B17CAFDD
402FD3925B83F7AB8C6ED454F7CD7717A91483FF149E3C80B97CFCEFA6C6D2A4
B3F70ED60D620360D5CC28D634B64ACB75A1D9F8B927CF5C2663F45C5885D8E1
11FC139858AF88277B945AB8F787435EDF0C1F30AA6430866F14EC5A4CEB94AF
CA07377A95177F4C788B01626545BCD4B69100E32490B4DE4BCEB1D6BA7D05EC
DE7A357EDAC911A7473FDBFC2A3F3931FBB5AB69B484C2AAED2CA49CB8096BEF
DC1604C9A3E628409C25DB885347D95A5401382A20F116A51518D74F04EFB50C
A8A003780B3C36B5ED267EDE2C40728694780176DA8DB1F7> |
86 <001C60D8A8C9B78256B8D302A924D2F38F1A7A2ED6FFC1A3BD9F771D49CE
9848E8C8DA5B094DAD016C2050F208177BD001B3B0DC4DEEABBA44BD196F3EA5
3C60644914B6556C04EA0B6F64956C5F193F925191D6A3502ED1E5A6F34E519F
D3BE7EEFE5319E7173F90AAF435D10553ED696A4F628FD2BF6A877A36584A3B1
BEEBCA1054140103571E745CD1D3284F35D7C45E1C999D8E201095979250B4EE
940D85885ACA8A556D823FC3BF183D252B8A9E8509249ADAD674BC7B5C2EACFE
7BC72FAD033F3F293A7AEF3A17B1689D37714701FA394689CE4716B4BDF5BA83
AC0D7DBEB70EFB7EAA86187AC58F8CC82FC0FC81A63BB418E12AC4EDB0> |
72 <001C60D8A8C9B7A8F220AEECCD1456861952497C4B1912D36982CCD79C96
3E5E2524F13DE4B49B23E1AC702A8E5801B42AB80518920C575A2E094F50C769
1248EA94C5B8F37EAF695D25C6F1B898DA9180D58D1A00F0282D411C8A88C15B
13C1430C3C3952391A23758EF3F220C1C49A6D9E8981B390F1E19E42B68D9942
AB8A29FF3EF8076066EDFD59EAE101AFA0881A5292C71A6BAAD4A9D28F012C4F
99E60F3AAE9AA598A2B217F0E720CDFCD4DCB97673880DB6F906FEBE0F228540
829D7F566F075CD0ADA8AD1ED916BF70AB0DDAE58DEEB18F7DAADE6526752400
FF06A77EB376730F35AFA15E4816BF4373094617DAE60170EF42FC057F60F061
DE6BFE587D6C56291D37C12A0C9BABCCB385A8BF9ADA7004D6431D84FDBDDDA4
C263704CDAF871268AF8A4601C01458F3524877A531310D842665D77AC315AB6
ECF8B12171FB41669BE0731BF97BBECDC433CCA652B00889362E2C4907AB417E
F322DEA08F54AE33508F4CDE09C1A696408F5407CF53BC87F16E308C8744B32C
9909E8F046FBDBE88F83BD60E539E09DD4B0696F4E4E12406534F60C74A63A3B
9C059FA99A2B2704C71F0DCA10F24E1FA876425EB71344341E2CC61735AC383B
145634912FA95BADEDA9096F1322395C712D98FF1692D076CCE22A8AB7DA7080
C2DADDBDB0FABDE9328585C48758821758139E8D10874A8DE8E36DF6650C7D8F
C40FF8161FFCFEE3D6A7C2E1EB80C01A2C4F7D827B3E8F1A07974406D8F87E0F
A006F0273FD3EBDF6B43C68C6260A795F44E6C4C1E325D186581D7CFFFE47924
65E0029C9FFC1A64EA5D0F4B5F903BB1F06EE41D29A7A3E38CF5880F4A74BAF7
FA01F635C50CA33BA26AEA466EB134B03F2A412E0FCE1EF52A35DDF999FB6704
D8BC63CD597DB4999CBF35BA036FCB22884056A399B8C87E21FC46C465C3> |
84 <001C60D8A8C9B70FAD6E9D622FC4F1FAE7B5E5E524381B7DB269543EA6DE
5D649DC0328DF66D014E3A2BB470709F700382161CB55DDCB3760F37AC4CDC2F
E7E2ADDC8C9BA5DD16482968922D4F77A051526AB0C54BC11BF035A75143EF92
DE739AA770BBF3520F83B608DB7B8A3C282385BD2583F53776D7B5BFD95FAC42
F48D041725DE9F3FD329ED29281F82E2C77E03701466> |
85 <001C60D8A8C9B816D2ACD0F16A338B0CAC31F03069B3F4927FC3DDC56A30
67FCAE2888A0F04C23EC75620E7490277B6DCE0908A83AE13908287F2D89C196
DE81AF6CA731A5E18FEE2572DBB4116EF065066207CF3936E2BEA2CDB0393BBD
4804C988FE94F84064C556CB15753E79E71EA450E0462D086B2CBB326AA78358
56E49F52B1EF94ED940E3D9144917EB843D5539A7D0BCA47419A4A46F8DEFBDD
254966AEEF814372AE31064E7671C77311389F97F02D955C60ED42E4771DEC5D
6B3A351D1E05C9B1C4537D99C4E52A2C1E3D8F9546DBEE4E7701B780451896A4
66CAAAB9F67DE1642C57C22E6583C60157E2AE6F4BF7CC6063631B89F5877636
3C4E181E94FDDB0D6A43E255123F0044B1BFC9BFE3EB6F64F7F0FFD20D4F380F
4E9E59BD00D1AF7738F2C442424DB898663EE271F162D9080C963E23B39ABECB
C7982248274108DDDA70403D11CA> |
22 <001C60D8A8C9B74A3E8577957A17058A4C1C7F02478553CA7B1CFB142E9A
8BBA1DAC3E373A13AD148DFAA94E4E3FF2606135124B9544F548EEA2B385BE49
85A9900192030405869BF598175CA7A520C26E00F8FCD6A8340314626E320D39
B93BB46FDFA2FC393EAE459061D9F99579306D473A4D568FB6751732912BD74A
78D9EA9FFD555653B757DF268CEC89B048DD245BDDF78E9A8C8C898367CC8399
A0AF44E7744DA444CA04B934594AD374E272737EDA46A521915BFBC1BD92DE94
12> |
1605 <001C60D8A8C9B785CBBBDB3EA946BEF69F12F0AFFF845C1D33BB14C85F
EF7456D979967BE210F7157AEB284D60> |
26 <001C60D8A8C9B74A3E8451579125354F888379EB4D387C61FF451DAA8E1D
2904B573C73BA6A9D903A3529C79CC97449106630FCB49CFA60567FE4E864898
78542736554E7AF7B537BF3FB5F654C1C16D0FBC919A4C08B3F9B966D89BEBE9
3E36E245BBCEBFF042730EC4D5DC17F0F88AB9841E4E3D8DBE2961838971D05A
D59EE403> |
17 <001C60D8A8C9B74A3E8576C7BCEC1093139D8EE06B0EBF63F326BFF4203E
5243158115142E4F9A60EB75FF860984CB4BD9E77D50E4B174E9B8CB68FDB4B5
AE80E1D9755699011D6270C99407A0EB1FEC9E0AE9E692AF9EB1D25198E07723
41E811F7FBE3D1953163B837FA35817535C5EC> |
35 <001C60D8A8C9B7D3A60A7B46170BBEC8493EA7E084E311B26B3C1114B24B
D29DB3927E3E41816D23B384788221F9324A4A41EEDAC7476A89DD74E8DD692B
D3862894D31E8E576A7DF2971016F9C2CA96AB6A493A8FBB2C84F95ACBA9EF52
966E23F79E1F5A0B7431C20EC482A9283A4AF888B437585AD107439CE7FF05EF
5618EBBBE363260C6361770CFFEAA618C9D95F72FBBB1C7D18C1FB962F374821
A529EFBC5737FB934E01A883AE133B46EEF1466EA17FD3592219A3C260BC9DC4
A88B3B20DC301D291064F28F7F87528C59BD6A6915C3E1642ED4AF> |
66 <001C60D8A8C9B75A17B9498A9519198043DF49B7BB1270A0CCA55188019F
1C62DB467994D60C18B2A91C460A35693A9D738F70C33EBC4205FCDD97DA75DC
BD3F518706B47C0DF3C4CC6517E4EA0420156B6E0DA280A8A2014698CE8D55F1
DE3992E35BB4E2BC91D0681019204424BCC60D21B611344173047090270BCC82
7A691B0DF14F876C86944B101D8E2F2F495420D1A1CC295BC6439EC4A343EA19
C8B5A39E37A3864EBC46074903F4EC270294ECE637D4F638D2DDC8423B39B8E6
EA753B74979B6E9F1C3861DADC5AE78E46957B156AEE83882E7742A192042535
F3E20A9CB28191C985302AD891AEB3A48497D42953AC8F2DC8C2AE01BD1ABAB6
ECF0B519DB27BBC5B8E8F7D112B456C090E64D> |
83 <001C60D8A8C9B8096E5DFAFDBDFC22C18035337253A6F7A85DE38CBBBFBC
9883BE80E2124D0C518D032F33576B0AD4F1F1FB994341CCAA42D6EFF766DAD1
B133D7472EC521376D72B98C725F333C86DC9E7BB7D187C7DED25F52F404A40C
F82D16F2AB2C933D278B35DD49514B1DFA4EE495C1DF52BE8D6E649BBC8C4D3A
588062A56DA8B085D36EAA52578337694E16B3857845BEA6B3F72788780C0086
00DF2085C61DA35BAB9A65C38CF879D4B58AB8397E725832DD15C7AEC206C082
F80D809AE93E48164A7727190D4F5D103A4004FB6291091015D927> |
68 <001C60D8A8C9B76E3797258739A5E6E8E83FF380592825375E5DC1079A13
7512E3FE5575474C631BC07EE4479AD68E4AC82B99B77047724BDD666274E9CA
2617D6291D4DE74F79EF7696468A41B722C00EBB93A7EAB752C4C7CED8965FC3
A7DEFAE2937F5A7671A1AD352AB7C573F4F9A9306EAEEC573345387555946191
75AB> |
70 <001C60D8A8C9B776A015C6CF8FA9DA8E5D8F0CBA4CBED07F7209D1C9F104
0619ACE8A0FE1BC75F31696D9D1365DABD9A98239C0B46F7121FB4FC1A5A1F16
0AE59B8CFD380C5F36F60445C7E5DAA30894EC703A5CA9500E64B7E40610D3D2
5F12EEF87AED328EB2FC1EEF3C31D0F8F8A3E2B633BBBB0F8093AF84E92696F9
D39591597CC8E82BC35EC48CE43F2F7148CC04B36ADE13F5CE76C623CBC9C979
74656AF9DCD3A5789228504B37C479B6BC72C15043563CC78B21018DF518F674
CC4FC76749BC17E8A9689B8543CD06> |
77 <001C60D8A8C9B86ED96EC86F39AD0E266FB726A0BAA2040860CB84AC6555
3A4C444E86D70D243EC04F455BBB57AC809192BD58C1F3F675AF3C01A43ED52E
7BC1D965AF5FE86A3035559080C28728C7D35AA8AE0D908123CCAB0E9BB78352
693B0FE26219126EF5C3E6089C4014283BBFB27CAD7AA99460B60A5CA43AF2BC
D00E22ABD18924B9FE18AA6FAFA01F6BB73468C9DF7329C9EA14AC4A4190EAF9
5450C70989642B> |
80 <001C60D8A8C9B7A73DCF50B19EB1A6D9CE54B158364ED1603CC9A10C34DE
A9A8932C513020BE86A793632C2EDD9B5F18D95083DE8B693773B86E50141878
2E6F0B831D8D33A777DCE3E89A4F07606C74443B927E4437A34158CFBEFE41> |
79 <001C60D8A8C9B780B373D7AF8EBA6DC6D7383963304360AF16D850816E4E
53CD76F04A3EC3B7F6B0CF940E1A4F0834C4ECD0056EF5E323280169B49DA1CD
85AC37CE04A97C18722F722381ED0A0E0F613A461C52D323128B9D1FE370F63A
29C9EA2EA54396F5F26726A7101B3F367E09265546176C2CF2A6DBDF0B8750D2
AABAF4A946632FAC4A19067C280FA3F841A0E57FF21283BBA681E9C8D146A201
8CA9B92D07B95A57EFE573A0EAB1B394B6B42C2D73415DC464FB66F09ECF43C4
80DCEAE39291F515454F74FACDF646BD8DBBA2B641B196663A0555D3B8BF0F93
768EB271AB091E> |
52 <001C60D8A8C9B7A157271933F807068AD4E6D3FD799A7C31B2A6DCD0F1E9
BBDCBF16D3CF4255D2F73DE7A90005DC3BBC05D8D4BAE21308F20787536CDB15
C6819DBB4FCE76DDA598CA609DEE66D24C267B7523DDD30AFD4267B3A0B9F24A
A6E158122C7CBC9F2690D34ED9296AF6C7CC667C8E248D4CDAF46A3672422ACB
B6B5AD1C3C28F7D4540D570B3B269C63351109C2A5CD2D2B8943CE7FAA51D896
1F0168C413C43415> |
81 <001C60D8A8C9B7B07F08344508491CA191B965ACF38BF4D25E0230065AB0
53C2E54D6785D2178223DBA079BFC0759B930E46230ADB4E5E3339DE045F9774
1E83F05F7D0E32EFA44439DE41AD5A1EBAC9218A1D0D9C327600CE7A234DD35A
4BF7D2B33A648D07D6A0B8EB753B3B2B2D4DA29E781873994A5A433442A7BC63
62577DB6836D9DE757AFB7C7892E2AE89D6F823A2EE3A2984814608AC4C1D458
FCA0D14C44F51D179891060918F0C96960B7EF8918A69F53DA87426359BAC9A5
FBB09BB719BF514CF3139AF930C102FD8D6CE42510ADCF85B9BCB2F52B86B537
D08282376681F5632EABE89F755D> |
74 <001C60D8A8C9B8666CA14C63FC8EFD2DA1B12868888FC4D15FB35A4B99B4
1FE9CFBB3A67B52790F88CD673572E1E528F93EA045CB27D58EC92DCA8B6F6FF
57023A27A4ED2BF9C2C798768B6DC849655A2E2FC450E7D0EBB93430140D0292
A1867C2F2A5EC8112BED6C8050F6FD2246B25E5B5F82AC54D1831886FAC37B1B
0F38F4A0ABB463ACECAC3562C87B1FBA9C73B06AFBDFA1EEF5E31EE49FC2E52C
F0075B24CE57F46FD82BFE2D1BE6C4B9D536AD3D13DC9D7D5CD81A0793A2BA31
5A55F6CB25CD70B6B279B90528E1> |
46 <001C60D8A8C9B598EE1CB5209499DE4B1660A476065FE9E7C9DE0A896F23
8F3BAC526783AD87863B8024E04510D70389C155E40BB6949B0B4EC312E14A7D
688F7153C59D5C3A84E19D081BBCBCD7C140274885AFFA94ABFA8FCCFB37DCB7
4812DE5E5658A210368E7B7AC8F37F42497DE0A827750EB4636B3175EBAE1C73
823F11B58D34D71AB27E7463D7BA0C067B61847978DFE0633F46437012E6F83C
35F1B90B91EF6D8314C846E9C1D1A436FC003D428A21997C5BBE21F6948FE26B
DC35550B89D56BE650695D85124246780CE574BDFF95E4615951E8EF33F1A583
B79C6D6243DB1210FDBC0FC678916FB5AAF1C2CEF18AB1AD6D620E0D4D55F4EE
8738CE3BC2D6> |
36 <001C60D8A8C9B658EF7368C59F4E00E8934EE6F423732273A4A7F661068F
B6C10FB8F4B1263D3301997AB152170E54A827451B1696933B181DFDE2690591
387D8D486C021A2118CDE3C93844D63460D11628936BC43647EDD4038375902A
15B2D7D07528DFE652492632111CBF37E1D999FBEB343E55E40EE1B49AA8DDC7
A84107134004C340690F39BABB3ADD7D9C68FC8465B56147C842AA89749FA38F
154CB066> |
73 <001C60D8A8C9B796769ECF9EF76585BD44ED35F995D2666AC23D6B396B21
517D12889C6C0BAA83B21BF5C84ABF9782847BDEC76BC225AD86C5E63E7457D5
A314A1257AE76968ED96FC3D88228E90552323F745D1149C478888CFB50C5B66
C85DCE68E218FE2B40BCA819A319A1C10BCB3200692907AB26AEE626CE7A2B76
C59F3DC325AD8892C50E1E79672198714F467D3B4C5B5D237C17C651FC0232A2
22BA99A4F1E2947A02D3D5CE6748ADDD7065D0B4B3C1A304B29DE104AD8DC2DE
8541F4CFB980DB77E2B43BA103AE18663EF6C7EC1C7BBA7C7D754A039A7C7DDF
4671EB70BAEECD02A083066FD7EA804C087793480CC4046FCDA2ECAF6665281A
47DB121AE9B398A2AC8D4680EC238BB1F4> |
56 <001C60D8A8C9B5D940FE03EB318119FEBAEF337A0064B71346F1BAFC7344
6DBF277327541C59AECF21BD1D682D3D6E224F956B967226F789C6065318164D
52B341BA6CD1F60BA5486A6F6CFDA3A0B860AEEB0AF1CCC036DAC91809DAF4F7
89655E3728855A90EB4D2D94DA565FD8CD6D41298ECADA30D62D87ADE7EF0A58
A86E1985614FDFB130718E709C675122BBC69CE17040AD1930E71BAADBDD43AE
5E9A439EE111D596CEBE94B7772B698723B71928D4806249568F6E04DB4E3B5A
C0A75035509DDA59C21043BA65488BB0E2E9EEAA99EA4CD5A9E2B605AEE31719
C8B1EE0F724CEDAF9D2C85CB> |
76 <001C60D8A8C9B7A4C8092D82E13BC8F0D9545521EDD8285C0C69CDB4DB85
9F665687D9B02E4F6CBC430F3D023015D7BBDCE287E72E8C18F6838CB08A70B6
CD2D32972F5427AC3F1A046BCEDEED48F44436074AB727BF72B51D6DEF1FE8FC
D03B5DC9E73578B3DCABFA9CE71529B6EABD7DDE51B185B8049E6C278A3836B5
D58B3743C6C3CBCAACB564880667084F2B46B31A341F1FB92720F3A67CD46265
92205E08DD85B491AC073A97D8609CE5A00F65DCA6C24E05FFFD2D29C41FF0C1
6A3E8EC34297E1AC8F4552F17ACBE0C55E32BC851D4C2523740B4DD78947F4EF
B07869F425CFFA9969DDF6DCE85BCD776C704414907B522597B1AFB906FC0169
528F8F99D46A6B3C5372ED3ABED33DA98B8AEEE632F68867B144CE5A7CD53DB5
76240580BD6FCBD57410FC4A6A4EA5E413B57C03B52C2383F199D582F60D0EB3
0604A8613DD2F45B5177793742D0103CFB07BE5C63C4DD6BFF606D8CDC30766E
232FB4CB4C75BB08913B7BBC8B77AC24C1DD2F5F396AE859E63A1DDD382629> |
49 <001C60D8A8C9B7ECD92B6C96F0C87C2AF542073F174D422CAB9DFA692021
5AADB4A24E2EDC6DB5D5E876FBBB8D0423B81A9F61CF9FC6FECD5EA19AB4CB74
55BC091AB46FAE6F371C794E1EB9E7EBBDAC89533D5357E0BD29AFFF367F2D92
570C3699AA4F363539B6D0ADCF8432A9894B425754E26A678411278C650C7F59
2617F1D36CAB5A187A54C5075D5398344B337FDA> |
69 <001C60D8A8C9B7890D0057348BC86EA5CE50DCB2E3746EB65E114C4A50BF
0DCF50B34BF56F6D90CCFF8DB336F88388DC998EF2E3CBA6AE7D02FCC0A7F434
12213880DA6949B6373174A07E11E578D3F32B53B6F3D26C4128C6A538D3E20B
E3610A772F8608CF01A2DE8AF4771CE3159AE6D7411AAC707EDFDA66218B43DE
525D576EEE045767F2A2BF51505EF33976AC5AD14FC0CF872FDC9EB22608B3BB
88DDD71F4426776D3729BF718350116FD71C4CAAEABD7BD7E3532077D9365D55
E3034A262B1B1E3A7E554A20FF214E2344E33AC35D81199630D04ED7FC861660
0E45908A9F2D4A6FA20E7F031D42C6151C98D60959A3818BBC947BE3C4AD592D
A197B6FCDFE2C3F0E47DABB06C850268533732F6CFEDD4ED9B0980454151B7E2
DA6279B8EB52D8A5F3CBC33047C9017EDB1350054A> |
59 <001C60D8A8C9B663CCD73959122B06EE3E2D3A1EEAA30BCDA571C55C473F
63C88F4EBB6DAEE9B4FE5CDDD8881DBDB3E7D71BAEC4EB378D246554D0F7B5B2
ABD5AA39332F9BDD5FC38AE643BBCA069540A5683C1157A16C65BE6B5A56782B
F81FE93FC2BE8DD5C9CD427CEA48C4C6DCF9BEAF82D0BC68C6173523A565345A
CA323A39C4B47B7A3F1574A3AB496F7BC594745D90D3BBB4B6F93B62FD0EF9C7
5AFE7D04917D6F08DC16768CD0F86EC498201755E86B2504F506B005BBC20F74
77B7D224C6B6D1FED1761A421B650E768DA249439CF2AAF2F260605E63C44A82
312F17> |
0 <001C60D8A8C9B7A73DC56ED86B049D8877878B897D38F0C1A3BCD7DCD90D5
A5D3F0C6CA0DFFC21D05D0988DA155613F51A2682042E9A3858D96F2624FFEDE
08865E23C71C0E53790ABD49E7873E8DB9AFFC20B9E312734227F9CB7698F2DE
EE8> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /DBAAAA+LinBiolinumO-Identity-H-Identity-H /Identity-H 0 [/DBAAAA+LinBiolinumO-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/XXDFPY+LinBiolinumO-Identity-H /DBAAAA+LinBiolinumO-Identity-H-Identity-H findfont ct_VMDictPut
XXDFPY+LinBiolinumO-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
4.4086 -177.99 mo
(\000,\000%\000%)sh
20.4414 -177.99 mo
(\006K\000\023\000\025\000\015)sh
32.0737 -177.99 mo
(\000"\000V\000H\000V\000T\000U\000\023\000\026\006E\000\023\000\032\000\015\000\023\000\021\000\023\000\025\000\015\000#\000B\000S\000D\000F\000M\000P\000O\000B\000\015\0004\000Q\000B\000J\000O)
[4.15634 3.74495 3.47987 3.74495 2.7616 4.10749 3.24279 3.24279 3.72398 3.2428 3.24278 3.27769 
3.2428 3.24278 3.2428 3.2428 3.27769 4.29584 3.35442 2.42682 2.99178 3.15915 1.75739 3.48691 
3.75888 3.35442 3.27068 3.52872 3.64726 3.35443 1.81314 0 ]xsh
390.927 -177.99 mo
(\000.\000J\000O\000H)sh
407.894 -177.99 mo
(\000$\000I\000F\000O\000\015)sh
426.639 -177.99 mo
(\0008\000F\000J\000L\000F\0001\000B\000O\000\015\000B\000O\000E\000;\000I\000P\000O\000H\000.\000J\000O\000H)
[6.08121 3.15915 1.81317 3.50787 4.89557 3.89838 3.35443 3.75888 3.27771 3.3544 3.75891 5.43954 
4.3447 3.82858 3.48691 3.75888 5.22333 6.1788 1.81314 3.75888 0 ]xsh
%ADOBeginSubsetFont: GAAAAA+LinLibertineO-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (GAAAAA+LinLibertineO-Identity-H)
%%Title: (GAAAAA+LinLibertineO-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /GAAAAA+LinLibertineO-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-1082 -256 6171 1125} def
/FontInfo 5 dict dup begin
/Notice (Linux Libertine by Philipp H. Poll,
Open Font under Terms of following Free Software Licenses:
GPL (General Public License) with font-exception and OFL (Open Font License).
Created with FontForge (http://fontforge.sf.net)
Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,2012) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 2649 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 16 dict dup begin
/BlueValues [-12 0 429 442 460 472 600 610 645 658 688 698] def
/OtherBlues [-238 -227] def
/FamilyBlues [-12 0 429 442 460 472 600 610 645 658 688 698] def
/FamilyOtherBlues [-238 -227] def
/BlueScale 0.0396 def
/BlueShift 6 def
/StdHW [36] def
/StdVW [79] def
/StemSnapH [36] def
/StemSnapV [79 86] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 39 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
71 <001C60D8A8C9B8341DE96B43529CB9E0304392B2643A74EBE2A3D3846679
F16B0DDB61BDD14A08210FFF3011896831ED6AA72D402454FD7778511A02AFB8
9A011983ED50A996AB87BFA0E812110058DA9C05EFCD800AD4833B7385FAB71A
4C8F49FD33F91AFF6D4B6926E9D3E72EC81C750FAD2389D83A6B0D388A4A162D
B885EFA6F7B70CF69390A09233FA944FDA8E5F0E187CD5147F0C63CD93B47FA2
3CEBE0E68BE1> |
70 <001C60D8A8C9B77C8927AC386467079745259E6AFC906A9D0A9453C01F9A
9A2E80E7FD9DAC2858D035CDF3E19775BA385CF85E0E6CF746A5A4D319AD416C
A80979FC0DFB5017E894233E416C32EBBB24A1CDFCA428C1AE29698AD95882E6
09BC2247B173DF77ED7450039DE46699AA064C1E8B8910661E82EA9FAE304568
0778CDFD9DA70C9E0968> |
69 <001C60D8A8C9B7A15727142B70799A829D694A3BC16FE61AEDBF606E97F8
C1AA16A3D44FEFFDF3D84706BCB98307FD2A2D52F823091DA3030D8E0EF1CDDD
B8824ECC50265A2C0C125F04027CD37B848879700560D584EDF1E9665848E1C1
8747896150F2EDD2795D87322BA9312E7A71248AF86F015CC90E9432DE37659B
CB41245D219B4C700F919B3AE56EFA0A2BFB42AC3F8D2E50134D4F4369B6A68C
81DAE8E2907DDFA21EA632D055807C4B34EE57D107D1EE6C104D8A9AB3C96B8E
5E9D8454DC72A22E71130BFC1B88C8DE53D89C9CAF8D18632CF64553E580D48C
722B1ABACED96F08D64F46C7C5440FE9F3A4CBF040069FF88462FE98D7708A51
A3592C2AFAB040193E7921E49ACBE925EDC847C7007843E3DFAE18B07C45E07E
F9ADE0F2C15D668C232A05F1ECD90FA531BC5C85F676AC5B69B5CCAFFC75CA> |
67 <001C60D8A8C9B7AED8021178C4D60A3DF39803EB2ED1432445E89A1C2EFB
60D8FD10EA66B4489131C6A639AB0EF9314FC7D7D27EE2FD6576A98AF7833D98
6AAD49CEEC0A99A380A712BC42B06AA0E4BFC301E44C0E1D0B9537298B5EE16A
A5865B0A7656CCFDF9F60EA23C2E353B26EEB1FEAE29AA103C1013E83008544F
DCC3D2CCAB62264CA8AA347393739FE186487D80E970D3F8682DB732F8388F69
C316D0965D3E7F84BB8370117161DE842A0A10320B1365F1B4983944851431C2
3AAB83D44D9B7CB6285CB9ADA45C70F03277437946C0C52F676408CD8474765B
BBA3F9E4C81903CF8557F5250D314F21C9807067126D364A66AA35A404AC87> |
66 <001C60D8A8C9B7727936979549E8A99AC470EA9DBCF3400E87AD26C682BB
811D88B581A5AC638BCD86FB7D68930701E7BBC8F4E4A85B0CF13D80EAB9A730
9722FA7E01FDEF089494AC3F7A33053F3A7BE9F9D260B46D1581684DC0367A43
38611063A036152087D0CDCB4FD3AE8E7E1C75EB57065B6399637B0D4F2F0FD4
D75D2B574ECAA3119E11AB39335380CA0E44B679D41F307429C0579489788B1F
96BF84E0F4D6A134FE4119E8BC01A447144033A83F625A09AAE7CF17D541BE18
2DC7F9514F1C7D102552AAE066316DD9D23D49030420D2F6594114FD8E044F4E
9EF8610505C8EEE35645DEA3BD3C28154F4C6F760437F29657ADF7DFE8D26E0A
D7EDB756CF03D5489EF93C9A78> |
68 <001C60D8A8C9B76F05DE5179374ADE9E44C1FA207903237E24DCAA22BF03
95659E4BEB413ED36F30A67E561D67ADFE2CD5818607D7C93E1CEC11278DBF42
765764BB11B3283A9531D63F31AE8E84A92D7DA4D5AECAEEF44F4D273491E96E
F2212BE104> |
76 <001C60D8A8C9B7BB5CD4F001C298FA89C39E6F6D7FF9FDF8B19B2CD2C759
FBCD2BB2AA413187B49538356691EF6A8AB1093D93DE0C70408E8732C795FF72
463D4CF4F9472CF03A65356820858A17FB730A6A1BEE69D1807F3546B422D0A7
8482E4ED21BBC20FB5FE55275B094D2F9B67B3D728F292B1AC21FCE6B068970A
C7C9F871D7355DA894C17D3EBA0AF0E5135E076389B41D6CD0330D445BD10474
587A11D791736FD0CA866596F47F450D5C2ADEA14E87D9C81699BAADA8A8F52D
432E381A7E2924E71FBDE0F70C01C869B4D239E0E01D60CF9F59E99474E712E5
73EC7AE035838BF213E4EFACBCF46C791847C2124E8C3BF5AFB8428E3D276B9A
0637A30F86DA4F9C2CB3FE15EBF2E8186EBCBAC4EDB91CD10676E073DDB440B4
0F18C6B49C2ECC5C7FCDBCBE576FDEC82CC8417A2DE31237E48A6CA813EB30A9
148378316857B897BD02293F7C14659CAEB80FD256516ABCE67E84C72725A95C
B6D2FF2DD39802530ABCAB326AC900AEABACD1A49FA2235F9DE366BE23988F98
642115F4F0A3B9C893DA6F1A> |
28 <001C60D8A8C9B87EB69AF10801C6B328FE077B2DD8272C08BB45AF39B0E2
2DF8B519918175981F831ADF69949F8ABFA103B0B70FA81A09616CB29ADF7A55
5CD6327C88636D14A95F95DFFEBD7BE9FF7072111CB4A7751BE71F6928F706B4
1E579616BBB5C807B141CA77EE20DDC10D7DAE74EB2169A898AD6E3D32> |
9 <001C60D8A8C9B840B092FC871B88A234C41DA92A7D3E083F7573619151CC8
E762E5BAEEDE313B3459CE6A24EA9E3E5BC840033D16153FD412D43FACAE7EEB
68479174B088D6CFCAE4575C6E739422669F0FBD0A7C4AF58A0EB83DA> |
74 <001C60D8A8C9B85D12B54360CBD31A70E9BBA93121C3039C028C99245BD3
D755F61398B55E3264C13F343603833C5B2F8ABCF60A1719D60579338CD3E4E3
D2AAE47FA7DA64DCF0B74578CD4A03221C09855604317BB143EB693A61C27A4D
F1C52882CDFAD09D54727AF3C65BE885A2CB40B6A5BC882583D5C8D55C3A0E24
E4A0AF6E486BAFBCD37748AC8CC3ADE11E2B455C93027D0F19B58277563B8507
767AAB83DACBDD7357F9C87CD3D9DC652AC24EFDEB6113C703206AAFE6CCD607
E579EDBA033A> |
10 <001C60D8A8C9B840B0D2812EE6ED6921A1DCBEBB34CE19A30039ED3F4E09
480A826B2060A59DA8C58B7FAF5999189EDB85570A163278E73412BA5E38E54C
8116B185D110883116E417B89C8C313C4B38D9889C0FBC1C4EB7A7A9FD085B> |
80 <001C60D8A8C9B7A3FACB18F5C88D93A6E9EEBFB2DD94A43431551815975C
BDAC7354CC6B5AE638D547FC766E132AA9BD60D1A6ABCD872F54E3E637C15928
2AEADB9234393BD6D0F669471C71266A166CC9F8FBF05C41486652C4AE92C438
B3232FE36AEBBCF9249A00D9EDD25AED2A7BBCC8050B0E2158A630A9394C6634
CDD4038AD2B63A2D7F1967A2417E1977C24E5A83ADDB1E44B5D1CCE004944465
1CF0F4A2B0B70A6A3A3A> |
83 <001C60D8A8C9B727F79DCB48BD1B8E094E50941F2026C07FE15E0948B442
D6452AEF881401B7D75277B882D89E611D8C864D888B07FEDBB5167157A769C4
8CF2A27B3729423439A849DABCE073F2988EFD9A884ADD0F76B09208EF5578BC
73D0A53764819640DF24AB8BDDABAF88839540E3E027A70F4710E02828D773E4
6B85E8DC638AA912BB997DC6C29A8A5F4A8505786E503DCC98A25169DDF60DE2
28FF57D60BFFB2F916937CED01F5FD3FD2554A09EFF1AC2F912280E2E11CFF71
23371E44A4AD3799BA6AB3CD6146B3B7B8254AABB5BB8131BEF91261098AC5AB
B20974D8C4> |
86 <001C60D8A8C9B7883C4DA1F946687A0A39B3CF59CDF7115C725FF2E75161
AC836E613B760460159CF84E9BA568F6A1EF61B14B763C25780375B0E350D434
4A205823D4B23C9959096A40971173D32D840E8C8B38BB2C1FC965D0271B2AEF
A991604843EFA4027FEF995D8189EC0DA56F162749259CE3A904CD05FC7B8F71
6AA9528046E280088E8B7AE8A4FE306063007158D11073001BF9612D19C07FD1
0B260257E68E5BD18254B1FB2D51624B8254E6E26BF6E61779045367CC01F0A7
62E47581DFA4C876C6FA8AD95461251C3B24560B5C66BA88C33F5A6388E13AB6> |
81 <001C60D8A8C9B7B4A13301A347FE948F30410AD13DB176AEAA5ED76B8299
43BBD17F7621F9F369F8C2A8146F15D632EB821375DE85F50D0EA025841ED9EB
56C374DA19ADA31F66E27B1FDAFA108CA0E3F4E4C51AC46077C8610A33318082
A426DA69E575D33DAEDC9DA704185626F8DCC6C2E7DB3546CBE694C943625EEC
98EC589F94485B5F130A4FAC9E09BCA503936DBBB1025AA29BD802CB9CF0FC32
A1A79233D5A3748AC34A4F2CE6B80CA360682E943BF609F854FE126BE804C2C0
7E7994EF0CBB031D34CC215EDB70EC1644F72DBBAA08ACF9A1251238DBD71D43
EF625E696DD37CCE3D6A82FF2FE158296C8FB04309AE2261514B62614C23F144
891F1852EDEECB0856974C0AB071BAD32F3616ACB3FE4048BCC984D786F2280F
EC3802DEF549EBA8794D455B8B940611F73017CC5AAFEFD745F69C96EDCEBD6C
4AECAA3F0236C8D5B6730DF007AFDDE961B12BF4744DACF5D4> |
77 <001C60D8A8C9B8622A135B30995216F83333B2A1996C171BA0EFEC59E039
CE821B867F4712CA3E29231E74015F9CA381E7970DAA0294A565F7F87F42C8AF
EBBBB143FF41FD62FA0241084883F4AE0E2A13D1E4064B53DD4523EF8EEBB531
4A6CD4DB685197D290FF2D> |
85 <001C60D8A8C9B82E34CC15E48D4313BF81E5420FC35BADDEFD725E6DD7D1
D3D3AF9C7F5E9327938BEA5506B9EE9BB569B1E17A117A7BE5CC66CD23AFB3EB
2DA8305A366C93F2C611698593FA58756504F7998A1772E8334CBE57B0C71D17
0502F9AA13142996D88B87CCBB01F4966DEE0BD8627233DFA7ED0F60FC7C4E53
C83CED2A7BF2DE423B4723B31C2BBB400BB2E0A60B46BAB369410AE5558C1D2A
EA573EE63D51BB2519AA0EBCB3806A7007E6749EED2EFD124CC20AA7F3DCA17F
E593468A9CFB97E4ECF67507EF> |
84 <001C60D8A8C9B73549B9F688F147E6A8F6C13D9FD9CFC799B695025B38B6
FA97AE27466C155E25739A2FD968A6246382A41A1EFFAAAC2E5FDA1668D4AAAE
03E6F598E30BC5770B88327E9071DCD9E81DC780684CD8240A9AC619389C1BD4
DE893726D9DEFDFA9056EB45EF94028C53B7C6FBBB446DC620085981D517474F
0540CF07655774EEFF218E760BA675D41E0D5211B145A03D747903C5662FC18D
ABDB143F203EA02FFB8AEEEB4E1A1AB644C1A5D43CB457F9B82399B771DE7942
0630E8AD70B1> |
13 <001C60D8A8C9B88EAF98C7420007358A92F2F02EA92D80F1DA0483CA4534
76594375F42B8BEC3953B57D765F4A5E4035184936839C28AD0C844E91D9C703
3B9B85272DDB464D1A2D5854397809> |
78 <001C60D8A8C9B6CB905C98DFA97CF9498000EC75C3D34A8F602FA26CB39C
CE31C431256EB7C559256621A06CAEE99D429A8552162ED5128216F011FE1843
002288F759E61FFE38817885D0A7A45D67483D298FB4AEAF665D883D36C3ECAE
6B8D9D60A9CD096D9D1B5569CA618151010C8159EC2C0FE5AA070811BF3E92E2
85F4F9B49A7E342460AB6BFA9AE05A714EC8122E71AF6F84ACC80593C21E6CC1
78907C0808463FA1EADA83A62233877B088350475E228D5A5535F6C8B3A2EA53
BD02EDFCC3D5223FE44F167E869F80C5C80420720D2E291EFC6258DD7F0E6E50
BD399F648DC440D78B59008A5132909592C1940FFE63434FA9BDED2DA9AD076C
EDA3ED01B2C48B05E078E27221516BA5B7A65D32A70C50786BCBFF3C6E3DB79F
CDEF9514FCEFCB73BF395C0C47AE7AC2A1E6D8E69FC7FA394094815CFE40A329
9044054B1A56E568C339449D4567712B16D9535793591DF5FDC3F8CA2A637689
58793D03B7628CA6271CCAFB65155B68974B7A11C22DDB51B9ED52F91DB0A768
17CED6A55633D135BAC413DC1D72FC68CAB63DFC3B08C8189D4CC5EBCFBD1902> |
73 <001C60D8A8C9B78181BE83D23D1B3D117082CFC0A765A5304D7CB3B0AD9E
8EFD5E2EAD9E6F40EB40032437A13372951C2A4879B4FCD8E89E3C355B507A84
7380206E7EFCA05094D460712285C55E945E39C09B69C098381F7A9FA8FF0C46
0A71D9D0306E1AEF55D7099717655625EA39F1808ED9A6E242F0E73A095D940D
409F2CC8ACDFFB52B6ED9644DC77EE64F12648A353D972FB7A064DFEEAF27A06
3AC87380FDA570E88ADC917520FCE5162F21B36B9FCDC0734C6760B0F226F269
5AE0A6B702BF5BDB20AF62B73AB1E666F8436E98B44B7C3638FDCDD230E5CFF4
BCC0D7D5E62432A959BE7F3D39EE30CA2B6DE7ED208FC52DDAEE5DC67C04B5EF
79D38D71F89BF51A2692BD56D24B38B00B779FBE03D31D727C8BF1B710A56AE1
FE12C4EEA00D75C5CE1D1F0D958E71275C6AEE0EACD462AE0FA1FD2A4AEE4069
7CD399526465C438106BD0F384D6BC179F68F7E5C0BA87> |
87 <001C60D8A8C9B7AA914D0605B1EDA30C3877999F85B7471897E753E4BD22
63F39F2761526F4E96AEF94C6B3D05B4066786196080179390AB2BD67EFA98EC
8803DEFD73D8C34C365A1054B01D2C9FA9ADC4CDF8ED6A9FB6F2F6314ECD591C
0DF122A30D0DCD6EFB54067932F0B3281B9EFC2379A3E61DF28805AD011C692E
040A46C26E5D286B8176A8CB4F62524762293AA462321BBA285C4BBC44D00042
E79370C6EFEFEC29A7D1A08E06C4B383A1136A39B244FFD298DC1207797F5D4F
0B104BB9051742F50411EE875E8008A6EE3D2CB07510B03E0631B8C280C1EF27
491AA506C0EC56B87EA4D0961E80BA29041832D0A027212E056C7BBA74F7916D
C827F257> |
79 <001C60D8A8C9B79D2DD62EBC5183BCF32960FC8957A2AF8ED2B404E86E2D
653EF195BFEBC454FF75066940D00977F24E6967F9A87CC4D90AF3DAFD8C421A
6448F090044778F8179DBF47919930A86B9035C5FA9A5E9DCCBF511028BB9149
1AA4D807638632F6BF5A80E2793892F0FC677DD0A4A6A099D04930D0B463CBAD
F43C5ABA52A67AF8652C858DD8303E2FEBC8CB5BE9CA3B0636042D480413880E
4C6D8E9C6D7D46E1B65EB45A5A4490683DDEA8F5EB2982FCC4FBB2E1C1D850D6
9E6C226A6387AC0DF761824515F897167017E6A6968B137A86A999251A39DBCA
C838081DC333FEC90449276F321A8EDAEEE6ABF6AB2AFA3554CCE38F55F70567
095F67B74CDAA51F07C0E3> |
82 <001C60D8A8C9B7A4C86FE5C47845090A2A650685385C9BC098966D50C08A
FFC0FCFEF2487A6D6A56AA0D2C6D300CCA0EDEFF2750D65BB839B185AC196902
E94C0B38658FCF1E21C43FA1332FF37F34AB4D84051D214E127B41CBB59D69F2
17608689FB167ADA3FB60E876079B01730DE0994A4C3E9A9906000FED9627AC9
7FAD08E6CB121DB817431030CA411DC264FFC9EF6566782C659F6DCC05AAD75F
C2662F090A1F33CCB49940A789D49DBFC8F35C9CF6AD8486C48D21492DB55759
CFC050A7474190C5901DA4C4B5F70A4AAF493D5E52714BFEB695AFD0062B59B6
DFEEA8E6047FDA0871B3A9260FC7E54A31531A89301A9723725377522E8586E7
3C800DFA4EB6883A5A1F08F6B6EA2275DE034D487A74C9E934FE6287A0B217DA
ADC3C8EDA6E2> |
88 <001C60D8A8C9B61E1305C643589C8171E754BB066FF7D8E84B3287D21900
DD6590EEEBD0BE51FA1837D92314620E274E7A281D3A4CC52758D1B466882FDA
5492CC9630B8C301552D23653F290F67BED402DFD7B58BD573C17D7CF7A7E0FB
AEE97B27FF955D102628722E9EFEE2E9FDE073EA2F367F12EF933EEAF69D8C35
C31B7B318D0F4FD8D807970BAC6307971578F200DD5543C37DCF5BE058CD73CF
E7DE4D508FDE5E135E5160440011CB59C3767FFFBDFB13E3A4B86F4FC9170B61
C746918026CD5F1F0E8AA4DE2F452DB24D836B75CFB60FF97AFF566E654E20AB
457A4CB161449A960145E2AF2A08A0EFD21122FB731758A618AE5A5F831FB774
8C27AE6F6BCF7E34AEA902C3DD375095EACE401416CB41FA38DFC00DD5B8B62A
62D48A457ED6506FAC53F013C4E13459FB9F0C410CF13A9661B90780DE5CE766
5040A12DA50C5C60B583DA886B82A8EE45875C8B978A85043BE2886ED11E258A
A149B40DDA> |
90 <001C60D8A8C9B7B8EB26E4106E112117DA36F208F2454386E260FE86253D
1819BAB79132220A9DCF650145429C2AA7523BB1CB379AFCD6114C193EA02FF6
1D06EA3CE1537C631CF485954E4A4075FE28BB775E54184A6CFF25753B5ED9D5
B417878B96AFB661CACBF66FE408AEB191895C12C35C8417E61EE0D5E96C8E74
CEBDDEBA1A628F3163F2447C727627EC92B0CE6BF7955942E870969E2D4A73F8
CD84244A589D36951530F5838F88C1BFF1E28C2B2EEC8D3F170CD24A8A4B9A1C
7C19487773CA6985F41FAF384B15E74103758E87FC7D2D0E5736DD6786408809
7D7120F7BAA7BE11E35E1B69D6AAAE7A0C47B30381AF7C39E8F8689AE2455429
D9C16D8D47598825EF7625339903B7B34DE7F189D031DC99959515E6AF29C8C7
E8389A91B12A402B25CC7E6491C00D1B66B620AF11DBB3228FB2FBFF9FA20841
A544AE465E7DBF230E5B3026C5EF> |
89 <001C60D8A8C9B751D576C5B71A8BA006DBC82C4E0F608601AA02CB79C8C9
79E56B6D06428459B191FAF7D5509FE9535FCA21D7F2CFDF2C2F4675E0F94EC7
7090DECEA9D6850660405AEEA1452AA28D776056846925E714D4AA8F4C1A8A9A
10C86641B6BD967F35CF996967DFA03AD3FF0181CF122D5701CE80C6C49C084A
62E222CB1B90230F2E9BD5A0E6AFE0D0E534C86456694B03C0A4C4B813A19886
D842F522AEAADCA3827B867B81149237273223A4C6C9B5919C5A26FD9A40F1F3
912A16F6FCE13A64C91BE9586373451B161FBE98C500D9360C6A2320FDE156E2
ED1C57761B7EE1CA0B35A705A9E515B6B720FE87FEC956BA028F3E82C5141097
0117A771919D84DAFED9F8E596DEA37DBEDD7ADE90F860801CB99F752068DC21
AE01F3471E7500B0B65426FAD73157631EFCFD24D9B40452000EF73CB7148904
81C89A1D76BA0A730DE75B6F920BDA7CE09548B0725B40D4A667DF6D1302380E
1E7977FE472881A2E65003D3BA942E7821AA3AA5720548A29178B8EFF66BEAC1
B75645965866A9E30A594C2F7B4C1D4ACCF772EEA0386B9A2996D868F33901AB
3F220C45A6C9B32CB94A34A80A57CC1B3555> |
14 <001C60D8A8C9B81871CFA59A6C56D136998A2FD851148F2D9DBBDB0E9C4A
14C2B51BA48015C6BD200B431E6D50B2E1> |
22 <001C60D8A8C9B74A3E8458FAF84297A16A3A4CB100094D631F84571996F2
1A7B37B5D0A321983B1FBD0BB4212117CC172557712AC0B85DEAD01386878671
0AED0E7F053793069C9E139C068E7ECCED2FB4CCC370C5A37974CA65D864ECF5
43ABC71398DBCF9B01D7902D40BBD23903FF1FAB644F2569D1A547BDBE9E252A
9DE02BFB756E79CBD75A901FD0856B5CC271480A7208C5F50CAEB899252ABD47
A078842A11A666F6C13542> |
50 <001C60D8A8C9B6330012D5D9B56848C164F7572AE64516C6D3CF40B3BDAD
DC92826F678DDC9CBE2DF72B28C19FCBC437339A54FBB1775B1A6FD7B538296C
AE212D2F8AD01E5A3579D1162AED606A4E7D43993A2CE3B012139CDBAEE1AA7B
BF917AC4CF999D3F1A9CAE3825D4848746C9E326D2CFA4FC034418F1AB260D93
67CA649E27093056C4382B7A808F241D294ABE73F989881F6C7FA9FF37BE1D68
9D47CF2067909C52B7A968B9E586C0DFFCE25191433E49A3E0221F1AED3E9AD0
CFD0455CE1014703B629F70060CB1F136D9D5CC50A7EA82363C7A7097A5343CD
A9F26A371743B54BCEAA0D9DFDE4E04F26589E7247EC50436FD213280174AA33
CEBCC9A55020B2F7B8C297239CC9F158DD3820484193336009283CA36DC5B31F
1BB6DACE3A5A528B5663467162FBA4C253F858CABA9EFC073007722B7C72F766
545EC1FB4FA46D61499C3A967E7E5657F6CA985B4A94F69F78EF5E6C90E1E156
4DE407DBB587684D4FD7C50F7C1C4B4E9D03378963DE6E59D9C6725472ED5F5D
200171A8515ECA7193FA960214D1671C76277B4E89E8C0CD9C6EF44FDEC7F950
2A4D393EECB4DF6CF0651C39794DC89CA8AF66BA2AB9EE19C538AC7E884BB4FE
037A33ECFC94A85AAA41555CF2B05C7BA27E10> |
44 <001C60D8A8C9B67031BECBB0904C617F40A1D78D1EB05637998FC2667494
9047776374DEB2C39A2460A0763CC11297EA5548FF546E2C6326D05CB1314997
90D1D9F6FC80003C81CCF44A5B9E41FC94254639EEE30AAF2D63F3E1C952EEFA
1DF6B10BE32869131CB0FDE19EB72F90D1EAE230DB141FF9491BFF4E65A94BBD
8E6ACF5AC839B8EA3DC82062467FD2A1448819AF6A2B16AF236B63CC71DE44B4
027102F4A2D5F3FD55B929FFBE0F706D739A09B4678D2B2E8E56C76DAC3E9435
264168D87CAE894598EC1026E17D0386AD57B63C0F3A16849B8E1E9F4730CDDC
1259D3A870CF3F38F2336A30C87890882DA9995F9CCDBA31D6F061573E9AF6E3
B322F8AE523B4649CE5171CB4CD6F0DEE84E7E550001487B0C99D6EBF92071E6
80041339F663E6B2A5021C17897611733AAA5D9A21CDD5196CF019C862BE1DFD
2FE35A515731171BD7B62DED4280A89472478FE59E60CB25E6153F651B110573
F55F39FFF6022578DFE775BC9154DFC978120FBA930BC0910F2C7D9133A81C6E
11FE41256042A2597EDC9834459645CC2CD4453051B9129CF5F9890420BAA9E6
8B030CE68BC8D15A1F5216E6> |
55 <001C60D8A8C9B6415B28D5E8DAA7AC16DAEA121DE65B38BE40FD297DABD3
1950190C7C922A209B2FF0D0BEAF7A6E80983638FA0739CCABED086ED3C21388
6346CFD61B3D5D394EAA1B110B774C81B26AC4FE9E7EB17CCC7D13490A372466
42EAD0FED1AFD48DB96AC4E2DA3D78555D04F204979FB2CCB0E7AA5FB80790AC
BEE05300E2405ED8E7AF50104CEA2F0F6C4E4D7DA40CA01A6BC9E358577AD8D3
DD66DA39B60C10DB358080BEAB836964EC0971F6EC33C8553160712903018613
02C55ECE6F7CA8FCDAA654C12BF20A68B6CB9B78BE37BFF59C6FD1D8E8C2AD50
58714810939EBA81A64DAA147310973B7EEFF772C31DAFF35096628EAF> |
34 <001C60D8A8C9B62AC6AD5BB614E98CC0B2EBFD2AA4CC8AC02AA3E43F64B9
8E19F67E28F21DF1C30CBBC0D4F0D158636961636279E76F3FD4A5A921256150
DA1DFCFA3D893167D2DDAB2A3E419EDE45223603D029CADF93CC3F0906998189
BA411A4AB653D2F39BE126CEEF95E28110EFB3C626AD5F15E936C12178825001
F25FEE35E119D138C8DEA57A3A9D98D8E13756908C21B7D8B7E5D23802D7AE1B
C69B38C9EAA03730847656D3E8963767D1347D8A887CF51C4EADF2B5781A46A8
ED59D86F3AC99DF70BB932DD2BBAEF2DDAB3D798938A1B2338D584363433D2EB
EC914614572A3BF53B24FCF14A80DD55CAEDB0770E740C46BAE9A8736261101B
428E6A1CE5A37618C5> |
15 <001C60D8A8C9B88EAFE27C08487AEF355FD43805358408451289FA7DAB5E
F7FEF47EF8A9B1F5AE56> |
2399 <001C60D8A8C9B53E5CF75EC75C4723288E6092F03B7B9A9E90BA661885
04F6A7D05DBCBA5D8FB208F6246C3219199905B2577687BC9042B486A9A37764
CDF5B8DB7EF1D08B35C02C4D6D06C413508A80C8E8C54937E2530D69474E20AA
5A066ADB427101B8748D2D057E7FDB79466DFDEA016D394703B7DE6A893C50F4
A0C36610522E0524945CBCC19E8369AF283B29FF23B6038D657DBA463A0ED9CF
77F301B85B55ECC6D30E73BCA9D9342C87C37E3EB85B4FF5744E4BA685FA57D9
8893632259449FD0121D8CD09ED455DFD32CF62531AAB3EF3A1CA378E1812000
190988422DE636C387EB6801B253E065A95D9F6B853CBEE3E0D27B74F5271834
F138AC45C01CB5B90A2F42411D5E4CC2946734F3A3551849F3ABC52065FE7C51
7918013D418204125E9540E4B2394EE1CEC7654EE79200927BA6C68EE5A55785
D0DB9E47144B94F7889198870FB46333F4C21C5F1F22DF57BBC56258AF913862
CC331EBD8E6AB8E6FC913DE1C2FC214F3F51972D95F2ACEBDA5B4846D03ECC8F
35652506887FA49987DD7987B6132BC96BCC20D232927CE588CD56A23EACCBF0
4E06634D76C8CF76AE2930D11AD766B2C40EF6A7DDBCEFFA0ECA4A1A4C32E1D8
E9A1EB9FD9EE9BD158CD2D3EC2EDC6F9E7C3A5E4D459E0E7AA1E5A98BA898904
E7C4DB6ACE1A150480ABDD5732B135D4E63CD90002D7D83D071A756FCF36BA5D
CEA5E4F9F94E6793F5F773E9BC5858F12D053FE20EDAB8BAD20EF67418B2725C
AD90E02C80E3A79BA538D7C384457A91E878861571E33F60497B> |
72 <001C60D8A8C9B7A73DB56E833C7C298AE11768912B12FAD5F48FCB6C36B0
A4D88E4588F2B826433C804B1E481BDEB62B337EC099E304C5B722C70237DBF7
0B293C2F81A08DA7405109B7D512A77F9389D5FEB7135F17E703B6D90E521357
C6A29D9C534EBD33A8EB9A501C50CA95D595DB2EF3100F82146E63C0F248FF21
F0895BBFF86669432DE8956189463B83ED8F31DCE7B0739A9E12FC34166E9C6F
B15314333FC29DD0DDE2E02C0EB6DB7E9D1B7964C4034E4E996072309BBFE415
62DA42B3F789BF35C508DCF1C3F83216C8C5851B2AEF6EC41597CAB52E655AF7
DD76ECF0E8E4C02D72E9146E4E23E3EB9022E50D610D6713C42DBB2C94769A2F
902F51CFD0A2CB9FDEEF7C9398CAE04127DAD46B5810BA3882597DE0EC0A4FF6
FC7B98899548A852A7D1D856490610C0F0032E5BFF58B01A6C524D313CEA667E
8E33BAC8B4E177C223CD1B8112E1BEB09217927611234320819E16D40F6A9E3B
D9A01172053E15855F3D4E15FA7F8D0ADE666495508E3A3B5D4F10C7A67F00DB
53EF5AD01A71C7DD6A3D5D1177AC6859B3F8CC51E69794B7DBB8BE> |
53 <001C60D8A8C9B7C63D8967668A60903DA7167247BEB9B7147ECC347167FF
C66F0B3B8B802E309C8935C295EE17ADF4D9BA642760A16F89D1341B708A5179
91A973C8A69E0A20AB3EDE7916479411C9349AEC2B26B8FAA0742289C36DA1EE
79014EDE0A3A4CB52D3163E4A95025AAA547689A44FA555B22A946EAF2C20A75
7F8E409086CB0317383E0020BF2DDAED6D8877DF4857776D5316965A4A728339
D0AE6629386600DBEB0A43F9597652BF1ADFA0C4414AE2CA> |
19 <001C60D8A8C9B74A3E8F18031D37013B923DFE4448136B91669488614029
1CE45DFC8E64AF93B51897CD0B394289B1A7CB68736F89F8730BD9E8DDA551E6
7AA332A44ECF227B9D51384B07F1814F47E7D18DC49CB6E3BE9DA7AA275A0DBB
818708F76123E56DE0B1ECDFD6EFE8E2085A8D5495A4E030B10727AAB2A1DAB4
AB71FB150133F7294312AC0B0FEC56A6C211E09AE4B620C7C6D35C483771D3C8
6AE049143A810099CA6BDDE051969F3C4C983E7E9823A8992EF390AED9B5FE6F
5FF47B2A320F34D5> |
0 <001C60D8A8C9B7A73DC56ED86B049D8877878B897D38F0C1A3BCD7DCD90D5
A5D3F0C6CA0DFFC21D05D0988DA155613F51A2682042E9A3858D96F2624FFEDE
08865E23C71C0E53790ABD49E7873E8DB9AFFC20B9E312734227F9CB7698F2DE
EE8> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /GAAAAA+LinLibertineO-Identity-H-Identity-H /Identity-H 0 [/GAAAAA+LinLibertineO-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/XXDFPZ+LinLibertineO-Identity-H /GAAAAA+LinLibertineO-Identity-H-Identity-H findfont ct_VMDictPut
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
4.4086 -151.688 mo
(\000G\000F\000F\000E\000C\000B\000D\000L\000\034\000\011\000J\000J\000\012\000G\000P\000S\000E\000V\000Q\000M\000J\000D\000B\000U\000F\000E\000\011\000V\000T\000F\000S\000\015\000J\000U\000F\000N\000\015\000C\000F\000I\000B\000W\000J\000P\000S\000T\000F\000U\000\012\000U\000V\000Q\000M\000F\000T\000J\000O\000B)
[2.77956 4.07084 4.07084 4.53697 4.4204 4.09765 3.83756 4.59074 5.11077 2.67203 2.42986 2.42986 
5.67583 2.77956 4.51904 6.33926 4.53697 4.7612 4.65353 2.3672 2.42986 3.83757 4.09766 2.83333 
4.07083 7.54077 2.67203 4.76122 3.49689 4.00804 2.8154 4.96741 2.42986 2.83333 4.00804 7.08339 
4.97643 4.51001 4.00804 4.82387 4.09766 4.45625 2.42986 4.51904 6.33023 3.49689 4.00804 2.83333 
5.67583 2.83333 4.76122 4.65353 2.3672 4.00803 6.5007 2.42986 7.86366 0 ]xsh
4.4086 -140.729 mo
(\000T\000F\000R\000V\000F\000O\000D\000F\000\015\000X\000F\000P\000O\000M\000Z\000L\000F\000F\000Q\000U\000I\000F\000F\000B\000S\000M\000J\000F\000T\000U\000S\000F\000D\000P\000S\000E\000T\000\034\000\011\000J\000J\000J\000\012\000X\000F\000F\000Y\000D\000M\000V\000E\000F\000U\000I\000F)
[3.49689 4.07084 4.51015 4.76121 4.00804 4.85986 3.83756 3.92731 4.99435 6.63505 7.03865 4.51905 
4.85986 2.3672 7.64831 4.59074 4.07083 4.00804 7.69318 2.83334 4.82387 7.04768 4.00804 4.09764 
3.33545 2.3672 2.42986 4.00804 3.49689 5.86395 3.27266 4.0618 3.83757 4.51904 3.27264 4.53697 
3.49689 5.14662 2.67203 2.42986 2.42987 2.42986 5.71167 6.63506 7.02975 3.95427 4.39359 3.83757 
2.36719 4.76122 4.53697 7.03865 2.83334 4.82387 0 ]xsh
4.4086 -129.77 mo
(\000D\000P\000M\000E\000\016\000T\000U\000B\000S\000U)sh
41.2782 -129.77 mo
(\000J\000U\000F\000N\000T)sh
63.1112 -129.77 mo
(\000X\000J\000U\000I)sh
81.8776 -129.77 mo
(\000M\000F\000T\000T)sh
97.2372 -129.77 mo
(\000U\000I\000B\000O)sh
115.833 -129.77 mo
(\000\026\000J\000O\000U\000F\000S\000B\000D\000U\000J\000P\000O\000T\000V\000O\000E\000F\000S)
[6.15085 2.42986 4.85986 2.83333 4.00804 3.33545 4.09766 3.83755 2.83333 2.42987 4.51904 4.85985 
5.47841 4.76122 4.85985 4.53697 4.00804 0 ]xsh
%ADOBeginSubsetFont: KAAAAA+LinLibertineOI-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (KAAAAA+LinLibertineOI-Identity-H)
%%Title: (KAAAAA+LinLibertineOI-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /KAAAAA+LinLibertineOI-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-635 -312 6171 894} def
/FontInfo 5 dict dup begin
/Notice (Linux Libertine by Philipp H. Poll,
Open Font under Terms of following Free Software Licenses:
GPL (General Public License) with font-exception and OFL (Open Font License).
Created with FontForge (http://fontforge.sf.net)
Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,2012) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 1700 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 16 dict dup begin
/BlueValues [-12 1 429 442 460 474 567 578 645 658 688 698] def
/OtherBlues [-238 -227] def
/FamilyBlues [-12 0 429 442 460 474 567 578 645 658 688 698] def
/FamilyOtherBlues [-235 -227] def
/BlueScale 0.0366667 def
/BlueShift 6 def
/StdHW [39] def
/StdVW [76] def
/StemSnapH [39] def
/StemSnapV [76] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 13 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
85 <001C60D8A8C9B8391571A7D9B2933FC165BDFFAA3EB5E5498F83BEBC59DA
D0D368090CC6367D494BC1C69225133C1DDE2EFBADB52DE573BCBAB10F9E3503
95EBE2207BBABA136C41F6BC9BCE8FD7F6A4C685FE837A969798DC04136BA4DD
1FE03A7DD37A7104C30DD3F6C11973B80902F01F99E4089AC4C094E969B1E41F
23B7CD25E1535F> |
66 <001C60D8A8C9B7551CBDC4D92ED46752CA03F33166ED904EB79369163706
EE9D9D75BA69026571F2B01F23C25627958CF9D376125357FB36F7C4937F7D9D
66568B59A8FFA6E4512C0702749138C628112CEB81446B3B0B4F4DB98761E125
F469B0E5906457B39EA32629962DB382230426D729B29022D0FD8FE84208E7FD
30251C22F74174E3966B6AE39C2CEBCAAF6E40A563BAA8F2BF30BFD44AFD> |
83 <001C60D8A8C9B807CA2DAA5BE2879CF03E62803AD16F98B94D9480628E1D
4E74C0E6D9947100EF2FEEF786C01DCFAAB3D5A6A86DEF422B78BC4BE7CFB698
27339E2CDFDD097E230E3FD60BB9541CA3892D16868BC05305FA1A0AB2B9E647
8CA089B635E4624B081D65C26C9333920604E4F6FBDC00FF29402F07A4867CDA
3C079E8B56F9E62B388615D8E475FE91EB> |
72 <001C60D8A8C9B75E5E193B3E2124039674CA2D2704F0F1936EEEA40130BA
C566D7499D0F818C8FB302D9E8490787FDB4A4E559BF408BC1197E5E0BE71A42
8F52211419365747A66DB72B842E42EC986B44ED1A49FB6580C32491DD316176
271B121843B02A6AFCA5B8435A2B41430FFCE40CA260094C5BC46A5899502F80
09F5E92D2F5C4DA1E95E00C62A138395AB048707EDB87301CEBF56836B9496A4
9762C0669BBEE95A834B13974EF6D04B4302B6EA97F191D73451C10F2C266DA4
BB45D42ACD53A6F6C0626D6C985D5EB7D3F69D1027916678650261342247FC9A
966E157C33012A9D03B06E361B5CC0B344546FE6524EFB4F2B20302E9C19D032
08DE5C229DD768F6B9E545FB93B51E90D7A64AEE8D077ADFEF7B7B583E8EA11E
3CD0CD90473132D63F7CD71395A0F033A98DB8E7E27085798DC7741266B62F4D> |
70 <001C60D8A8C9B70A9A18F7184021E3816740F535EF2C41EC680BDA0FC0E8
86EDC63838624975FC710D0AD54DE237D6FFBD6C5AAF252094BDB357219FB448
21069BA515EFD6FCC3AA51D8113EE04C5A41B3A6458A97921085E683ED50975E
EFE557C55730B9284BC19024A73398EFC92CBF6F55> |
67 <001C60D8A8C9B75D88A4492BBF8B86836ACCBB4602643FFA2DBF4C68D781
819C66BB5BB7ED34B96F40F44B5D3A370ABD3B4893DA68DFFB7001076CE1A429
CC564AE7245A7B035669A3EE22C8A30E779ADFA0125402C893A716668868E023
A7AEC38336578CF125A862D83A94B2422A8B0A6B9D2FEADD56BF8FD7ED5BEF15
562C0685EBD5008EFA740229B52BBEC9486E6A43108EE6573B7F12D5> |
73 <001C60D8A8C9B7B4A149FBEA7086950CC352DB7BD1F732CDAAE342709B49
FF75E6A34F9BD990775B3575A7B8EF322F0E0755AEE1ED3DC9E460E41A27FA0E
0737568CD576D35F5A95C51ECFE68F3860FF6363EBE0586BA297B2C88ADA749D
1455007C78BA22DCBB79ED58E2AB7A0FF1D5D878839F4257B6FA9CBD23C0DB22
B6AE09D57802F15109CD4A350275A0469441C3AC21A4A2D92D8E881CB7D700AC
7C2FF2AFDDD7D37D6CE6FEAC8BED96D559E27B3D3CC6B7B1328B982FB0018C70
420EB33596> |
87 <001C60D8A8C9B74383FA672247A3C8859D4508DC6185E116CF955EDCE9BB
8012AFE1DE0DAF91A454F58733A854724783DD7E177861138ECF2BF8C58E2161
454C67B32846955ADA7107B40103A2F6E9353A0D0E839ED071A4AFACA4748A79
84E3DC9D5A726445DBB88FBE48FB375B8D6E6AF13FC94679D6BD6AD6B219D23F
4793817FA433B6169B9ADFDCB44909AF> |
74 <001C60D8A8C9B85677F50A7E2F72AB50FC7A9201223CDCC08C42FB97A4D9
74E1828E3A09ACC7C8D0AFD79853606215F83E77C5AA4C00117C060D06F742CF
B7FC94A5CBAFD3F6FCEF885142E3BD856B76215C4A648757BE9D84F6FFECAC3D
C6A0C2736A886F574F55EB771C511C959F17AA9C68C2EC36C2085AD760D29348
8EC07846CAF537AD4D6160571434C92344732A71C14925E8B67EA192D2ABDAFE
A887D730CF15ACF9C8029C405FA3F57E5920D119> |
80 <001C60D8A8C9B77C8927A08D182562EE1D29F6404BED874DC716E1583F19
FB41A06DD983FEACFA9D859AFF33BAB4876DB81174B9979F885A27D346B382BE
0A63AC8AE1E62D3AC6BCCBA7CF084E96AFED144AD5F3FD3B198DB8EF2CA57A16
0E332506AD3C1AB64B54B6702E93D4> |
84 <001C60D8A8C9B80B0D3FFFEBEB7DF16C125E29A1E43B934D90363C0383FF
DC05AF8C9C85CD829996A90A637886329C1206B1533715AFD2E8D1FDE7A0FA98
C13899C6A3DE8EAC9CFC1C89F7C49AF5CF3E98721C893136AA38FB643FCEF351
F1CD2A0C1A7C0A7A2751B3EB3734F075BAB7E30C78D2971443FA69C2DC94952E
99E9DE8DF211C3555342C87EBD6650A675F28952F5B3404BE4BEC6D6E2316141
A31C969E5F> |
14 <001C60D8A8C9B81F2C3AC81392147751DC1F53C61705B0066EEF7E617DD0
3A12BF33BACB6D5A61A99B2B2E> |
0 <001C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4ADDDDDB8A4E47F3F
2F1CAAE4F43122CFEE2884275C84424026449C27071D4FDF833FCFC37BDEAA9A
891DE737DA59C1E8008FB0FD905E36128E58DBE941690CD39B139ADD52F6B4B0
641> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /KAAAAA+LinLibertineOI-Identity-H-Identity-H /Identity-H 0 [/KAAAAA+LinLibertineOI-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/XXDFQA+LinLibertineOI-Identity-H /KAAAAA+LinLibertineOI-Identity-H-Identity-H findfont ct_VMDictPut
XXDFQA+LinLibertineOI-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
190.999 -129.77 mo
(\000U\000B\000S\000H\000F\000U)sh
213.917 -129.77 mo
(\000C\000F\000I\000B\000W\000J\000P\000S)
[4.37552 3.59554 4.65353 4.3576 4.23215 2.47473 4.00804 0 ]xsh
4.4086 -118.811 mo
(\000T\000F\000U\000T)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
19.8796 -118.811 mo
(\000G\000P\000S)sh
33.087 -118.811 mo
(\000C\000P\000U\000I\0002\000,\000\016\0007\000J\000E\000F\000P\000B\000O\000E\0002\000,\000\016\000"\000S\000U\000J\000D\000M\000F\000\034\000\011\000J\000W\000\012\000X\000F\000E\000F\000M\000F\000U\000F\000U\000I\000F\000V\000T\000F\000S\000T\000F\000\016)
[4.51001 4.51905 2.83333 7.39725 6.29438 5.50535 2.59131 5.84602 2.42986 4.53696 4.06181 7.10132 
4.09765 4.85986 7.11035 6.29437 5.50536 2.69884 6.23172 3.33545 2.83333 2.42986 3.83755 2.36722 
4.00803 4.68034 2.67203 2.42986 4.31273 5.24541 6.63504 6.57239 4.53697 4.00804 2.36719 4.00804 
2.83333 6.59032 2.83333 4.82387 6.58142 4.76122 3.49689 4.00804 5.90883 3.49689 4.00804 0 
]xsh
4.4086 -107.853 mo
(\000R\000V\000F\000O\000D\000F\000T)sh
36.2485 -107.853 mo
(\000X\000J\000U\000I)sh
55.3916 -107.853 mo
(\000G\000F\000X\000F\000S\000U\000I\000B\000O\000\026\000J\000O\000U\000F\000S\000B\000D\000U\000J\000P\000O\000T\000V\000O\000E\000F\000S)
[2.77956 3.95427 6.62616 4.00803 5.69362 2.83333 4.82388 4.09765 7.21803 6.52751 2.42986 4.85986 
2.83334 4.00803 3.33545 4.09765 3.83756 2.83333 2.42987 4.51904 4.85985 5.86409 4.76122 4.85985 
4.53697 4.00804 0 ]xsh
XXDFQA+LinLibertineOI-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
173.726 -107.853 mo
(\000U\000B\000S\000H\000F\000U)sh
197.02 -107.853 mo
(\000C\000F\000I\000B\000W\000J\000P\000S\000T\000F\000U\000T)
[4.37553 3.59554 4.65353 4.3576 4.23213 2.47473 4.00804 5.55913 3.16512 3.59554 2.75275 0 
]xsh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
243.176 -107.853 mo
(\000\034)sh
4.1396 -96.8935 mo
(\000\011\000W\000\012\000G\000P\000S\000F\000B\000D\000I\000V\000T\000F\000S\000\015\000X\000F\000U\000B\000L\000F\000U\000I\000F\000M\000B\000T\000U\000U\000X\000P\000J\000O\000U\000F\000S\000B\000D\000U\000J\000P\000O\000T\000V\000O\000E\000F\000S)
[2.5285 4.30383 4.86875 2.77956 4.51905 5.55009 4.00803 4.09765 3.83757 7.02962 4.76121 3.49689 
4.00804 2.81541 4.17838 6.63504 6.20477 2.83333 4.09766 4.59074 6.22268 2.83334 4.82387 6.21379 
2.3672 4.09765 3.49689 5.04798 2.83333 6.63506 6.71576 2.42987 4.85985 2.83333 4.00804 3.33545 
4.09766 3.83755 2.83333 2.42987 4.51904 4.85985 5.71155 4.7612 4.85986 4.53697 4.00803 0 
]xsh
XXDFQA+LinLibertineOI-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
212.041 -96.8935 mo
(\000U\000B\000S\000H\000F\000U)sh
235.183 -96.8935 mo
(\000C\000F\000\016)
[4.37552 3.59554 0 ]xsh
4.4086 -85.9345 mo
(\000I\000B\000W\000J\000P\000S)sh
29.7207 -85.9345 mo
(\000T\000F\000U\000T)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
45.0056 -85.9345 mo
(\000G\000P\000S)sh
58.0248 -85.9345 mo
(\000W\000B\000M\000J\000E\000B\000U\000J\000P\000O)sh
97.0376 -85.9345 mo
(\000B\000O\000E)sh
112.926 -85.9345 mo
(\000U\000F\000T\000U\000\017)sh
130.455 -85.9345 mo
(\011_\000F\000J\000O\000U\000F\000S\000B\000D\000U\000J\000P\000O\000T\000C\000F\000U\000X\000F\000F\000O\000U\000I\000F\000T\000F)
[9.39682 6.39316 2.42987 4.85985 2.83333 4.00804 3.33543 4.09766 3.83757 2.83333 2.42986 4.51906 
4.85985 5.8909 4.51003 4.00803 2.83334 6.63504 4.06181 4.00803 7.24498 2.83333 4.82388 4.00803 
3.4969 0 ]xsh
4.4086 -74.9755 mo
(\000U\000X\000P\000B\000S\000F\000L\000F\000Q\000U\000G\000P\000S\000U\000F\000T\000U\000\015\000X\000I\000J\000M\000F\000U\000I\000P\000T\000F\000C\000F\000G\000P\000S\000F\000U\000I\000F\000Q\000F\000O\000V\000M\000U\000J\000N\000B\000U\000F\000J\000O\000U\000F\000S\000B\000D\000\016)
[2.83333 6.63505 7.24484 4.09765 3.27265 6.73383 4.59074 4.00804 4.65354 5.56802 2.77956 4.51905 
6.07014 2.83333 4.00803 3.49689 2.83333 4.70731 6.69785 4.82388 2.42986 2.3672 6.74272 2.83333 
4.82388 4.51904 3.49689 6.74271 4.51003 4.00804 2.77956 4.51904 3.27264 6.73384 2.83333 4.8329 
6.74272 4.71634 4.00804 4.85985 4.76122 2.36719 2.83334 2.42986 7.08339 4.09766 2.83333 6.74272 
2.42987 4.85985 2.83333 4.00804 3.33545 4.09764 3.83757 0 ]xsh
4.4086 -64.0165 mo
(\000U\000J\000P\000O)sh
22.2069 -64.0165 mo
(\000G\000P\000S)sh
35.9972 -64.0165 mo
(\000U\000S\000B\000J\000O\000J\000O\000H\000\034)sh
70.6074 -64.0165 mo
(\000B\000O\000E)sh
87.258 -64.0165 mo
(\000\011\000W\000J\000\012\000X\000F\000S\000F\000N\000P\000W\000F\000U\000I\000F\000D\000P\000M\000E\000\016\000T\000U\000B\000S\000U\000J\000U\000F\000N\000T\000J\000O\000U\000I\000F)
[2.5285 4.45625 2.42986 5.82824 6.63505 7.15523 3.27265 4.00803 7.0834 4.45625 4.38455 7.15523 
2.83333 4.82387 7.17314 3.83757 4.51904 2.3672 4.53697 3.03061 3.4969 2.83333 4.09764 3.33545 
5.98955 2.42987 2.83333 4.00804 7.08339 6.65311 2.42986 8.02498 2.83333 4.82387 0 ]xsh
4.1846 -53.0575 mo
(\000W\000B\000M\000J\000E\000B\000U\000J\000P\000O)sh
43.1884 -53.0575 mo
(\000B\000O\000E)sh
59.068 -53.0575 mo
(\000U\000F\000T\000U)sh
74.6156 -53.0575 mo
(\000T\000F\000U\000T)sh
90.8359 -53.0575 mo
(\000U\000I\000B\000U)sh
107.8 -53.0575 mo
(\000E\000P\000O\000P\000U\000B\000Q\000Q\000F\000B\000S\000J\000O\000U\000I\000F\000U\000S\000B\000J\000O\000J\000O\000H\000T\000F\000U\000\017\011_\000F)
[4.53697 6.90417 4.85986 4.51904 5.21846 4.09766 4.65353 4.71634 4.00803 4.09766 5.71153 2.42987 
7.24496 2.83334 4.82387 6.38412 2.83333 3.33545 4.09766 2.42986 4.85986 2.42986 4.85985 6.86833 
3.49689 4.00804 2.83333 4.35774 9.39682 0 ]xsh
4.4086 -42.0985 mo
(\000T\000U\000B\000U\000J\000T\000U\000J\000D\000B\000M)sh
41.4038 -42.0985 mo
(\000E\000F\000U\000B\000J\000M\000T)sh
67.4153 -42.0985 mo
(\000P\000G\000U\000I\000F\000Q\000S\000P\000D\000F\000T\000T\000F\000E\000E\000B\000U\000B\000T\000F\000U\000T\000B\000S\000F\000T\000I\000P\000X\000O\000J\000O\0005\000B\000C\000M\000F)
[4.51905 5.02116 2.83334 4.82387 6.24964 4.65353 3.27265 4.57281 3.83756 4.00803 3.49689 3.49689 
4.07084 6.77856 4.53697 4.09766 2.83333 4.09764 3.4969 4.00803 2.83334 5.73848 4.09766 3.27264 
6.24062 3.49689 4.82387 4.46529 6.69785 7.09242 2.42986 7.10146 4.92252 4.09766 4.42039 2.3672 
0 ]xsh
232.46 -42.0985 mo
(\000\023)sh
236.629 -42.0985 mo
(\000\017)sh
%ADOBeginSubsetFont: IAAAAA+LinLibertineOB-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (IAAAAA+LinLibertineOB-Identity-H)
%%Title: (IAAAAA+LinLibertineOB-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /IAAAAA+LinLibertineOB-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-1082 -328 6171 1015} def
/FontInfo 5 dict dup begin
/Notice (Linux Libertine by Philipp H. Poll,
Open Font under Terms of following Free Software Licenses:
GPL (General Public License) with font-exception and OFL (Open Font License).
Created with FontForge (http://fontforge.sf.net)
Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,2012) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 2385 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 15 dict dup begin
/BlueValues [-12 1 433 447 460 474 600 610 645 662 690 698] def
/OtherBlues [-238 -212] def
/BlueScale 0.0380769 def
/BlueShift 6 def
/StdHW [40] def
/StdVW [130] def
/StemSnapH [40] def
/StemSnapV [130 140] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 25 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
53 <001C60D8A8C9B6415B35B357322446E53FCBCF4C45915C1A952B1435894C
9B23564EC14DA2776CA39C0841F24FBC1C77E0D6B5A23416AE550725933C7774
6E4E3F0BC4C370089FF0BFCBDC2616EFCCDD02A51558C3DF151C7BD3BC10F647
098F71682DE7C80A3E4D5E472FDA1FBFD71D8DF6D880BD961FAFDAB3DE0BC38B
B3783416D4FAAA2693CC9C814414345C8572F6D0E8D6E2785CF21348EF8672F4
5C99749CF0A82C735F8A8B190A6D34039B81B5B51BB13791800D> |
66 <001C60D8A8C9B7A157277F73D9EF6A4E495EA55BF48D7EC9A9C48165A877
624502E9597D74765B22EEFC998D3D610363605968153197DDE5D0E98B9C9C38
DF617AF062C36E59A2F199FC3D4C48A38B3C5294D605F9383A9CDCC1F6B7E23A
CB50F71FC2359CD6243E1226B771EC251BCD4733209FFA91DA408308FFB81B35
C8DF244E2EC364126A4E99453710FB47B834E62373E3274D5928B4802F3A6928
C605D853B9FA41A0F41240B1A8699CD649D21745280CE05529D3E78AB1D5E28B
561D3198D284E0BDC807F5499AFE45A63B1433CCE592D18FFFE618770B794CBA
BCFC1882EEAD88B12DAD049B737634AE448A7501E22C5FE8B5FFD56AC76C246C
DDF757F4B4AAD84898DB86D08C8F09459A7D12D0192C5BE969F1DDC098047C0D
5C773AF456C7DE3FDB67DE193F9CB8C77891716D61EB1132B4CB31AF937B1C39
DA1ABA8305C7F6FC> |
67 <001C60D8A8C9B79D2DDE437EC30711B5E782E2840A49AA0D956F51B2AD51
44C62FCE9209E9D17C30AA762FE7DE38F76B59126F3BD2B924DB553677EA7B62
4AFEE11D618021F021EEE60C3B30C3FAA350C768D89CD34387D3C6C3A71EC279
7999736A58CEE2F3E727D3E77E0E3FADC261C3BF183A5D83806C89C438955F77
608E257A57D5C086D2702A92C84DEC2D2F679CF87B2E628A73D74F98559A007F
31DB52862AFE5111C9E473ACD37FEF87CDF317A9AA270308CE4DDACF8B81F277
0F264DC7B27B6E9D452C2CC26BDC72B4185452589C2C95D30B5809D3D8D89A4F
9100E5C7413E3B5F765A64EF9C9B006B9E30E749FC0355AB5E7DE655F0CB5788
BB> |
77 <001C60D8A8C9B827990CE548B898B6145A3364AE9DBC02316DDE234E3952
0555DFD59E1D69CFAE5DBBEFB891E0050213E081384C3A3FF5A37312C2E8AD5E
99448583A622416067A7F91E823A85838D3B44272E057921D76F8086C91AD160
1B7126253989B79C5229D2982F518CB79577A4BF6A3AC823AE76B9005EC56EE0
708404> |
70 <001C60D8A8C9B752AB3DBBCCC311DDF8FAE54E4C835B484EB2FA791E781C
629FD2C14916AB64F458B311975B948384D07204AE4368AD751F2AD0FF02C1CA
331B66356B42768B6D61699273112C5DDE5FB590946F04DE616898D184327A6C
CC78042B59A7B286C0BB97D90FB4E5B9ECC5145977842B25EF70CF746D7FDFEB
0AB856880B1DAC4DBE9B5F52B5C90C67ACE508B80164E5E953DFDD2A1D330C95
2A9080CA96293C08F2004CF705B0CDE574BE7142E50DF9BE2DF72DF9BA28C5AB
ACC6CF2D564975403EA0F8F9C247F01EE61A> |
18 <001C60D8A8C9B7B9B9AF88E3717D6280D143E98D941BD042EE4A9C33AEFA
E51EA40B55C285508B8C1156FF89334CD1F450D910ABB0A25E852E13C4430E15
05BDD0C7CFCB55C376BB5A496E17E9FA46BA7F142C5500DAB4E4A474B56460B8
48EBE550913EAE053E78E79E1066BBA845EE9E95E7BEEA359ED46C7D0D86D12B
CD7565CB753B971AFDC7> |
27 <001C60D8A8C9B86A9608D4AAFCD09C1D8AAE8DA7B744417F237B16AF62D7
0DCC7500839C18462C260ECC9B6C00A538E3A045DB2287CDEB1EAF9906A91D7F
B6E03B5E78A38AC6C16E> |
52 <001C60D8A8C9B7A3FACB0304C9E1B41FAFFE0D5EDF1B75C94E34950376C8
3D377FA4BB7252222F07512AFB55E27B7125A8FB554ED63DB07250C37020D743
FFDC4ED9CC81EBF1D317E3429602B3A2BF5150AA3609389AA6023E9E8F619035
B3B5034E315B57DD9C5B9274C2D3DAF4918FF4AE5FC3E9A997ED159ACA64DC99
3A47FA1CEA5930468B041D2049832D2C68E4DA44D03A3D74D67629046AAD29FF
C88C9C7816123B334053FB5FDD6BBFF8087DD81081ADA3833D0239B44C43F15A
9283122A2746B79E3F6003DF7C4DB71AC8B4191B70B3635B54673091295423D7
AAD0FA3495A4C684D0370FC3E021869F1599868327602309FFE9BC7DA0D7579D
C11D96E36AB78D42BE94AB0733B22D4AD2E58FE24DB4D19F86A7CE3F5A6F8CE0
38EA3B529A4398D121DA306946C47A48F18A9BDD43AEA62C58B83A2DD6F7697F
8A95497BF3ABB8F3F4506B40ECC34F8084D1B2F937DE43706D0EB7877538BB5A
625236154641F0> |
80 <001C60D8A8C9B794D34DBD4EED88CA69EFE58E5BD8AFBB83FD1E2BC58436
9D0EE589F22191AEC879C937786991040377A26BA5FBCEDC7F90D7D618DA029C
6142E9E34227FC7F074483FAD18474097B70E632DB8792ED4B0C360990AF79E2
3842B63CC7F12B904F6FC63E663203C517843082D0854A9A0C53292940E27E4F
135A7A01ECFFE53B6D01093B76163399B1B8F50847AAF6EB3FCB598A3C2CAC70
2ADD3436EE830EAD72DA63CC6BF12CDE2F66A2CDCA746CE1B8CD0BEE71FAEAAC
667FBCAA3A80181974227A764AB61CDB28E89775E0C37F3BF3AB863E687D408E
0FD9E3CC9AB9C8> |
78 <001C60D8A8C9B58FAC31370534F79A68A5004F9B0EA8AC6C37EDA0033DE4
01FC85657711D2C74DEC0BB8F31FC3905556B1B07729B08D032FA7A0FEBD0040
7AF6692B3573659E83693D8440981B00145ECA4042B1FE97FEC3EB8C8E568780
81AB92F0A80A07F11D9A733AEB0365ED8B5A388457321EF4FE4FE5740B03858C
0B276286D6B063BD5D9F40C760478600151289A9BD8DCCF969829C7A0F9E444E
390202425CCF2EE76B45B1FB2C79C8D052F52756F1233A9FD4C79BC88AF343B0
F1FD9CF234795FA3A439B3271CAB08080B1C8031E6AC3A7B41E68DB1C039D8AE
6C570BE93DBD206A8F3965CA7152F348CF5F59F0C8E4B3988D8CD798739C33C5
DB3C306E3E1BBF5B7CBF1BD650D719F0717D77867598E88E06D465B4A6F721B7
1A91BE0C2D4F2CC0F73C30E790E9D1433EFDFF4A52D6AF844A3B76975093B7D1
113DB5CCAF0309EB6A98EDC4A343830420262279FC28F3125E068BD477560248
70C0B3A1949394F3054EC3ACAFA0BEF4DD7647CC1D36EDDE14517856D79CCD72
B43048D9CEC5D6C9A0C9B5E87B5276E054E10884894A9918D7BF05095FB95F0D
AAD294A62E9D2D9E55BE3C0296540180554B4343F899CBEC3C9483CA4E3D87E0
50825E44F5622C759F75F06334F7A8605A2FCDE5775109A5C10FE54AE964130A
EB01DD7F0C> |
79 <001C60D8A8C9B7D3A60B31379A663E8A2F846A0D415DBFE129F231BD3D29
9BC5EAC690178ED67C880A274C7647FFEEF3CDFF8DF2CBAA37EB4E80A82C316D
FDD60DE41D9CF862D424056227C59214A82977312049209909131EA6F8445743
401520908C21C078572E1637D3BC0CEE98602F141D08A685E0564D5ECFF1B16B
8F38E29140500E625D3C6C9DD2F7A85BF9D49280CB232E6A0FEBFBBE7689D0C1
86B72CEAFD813A4131D0BF827C9474F7B6DD5117DB904CB2A96BEEB95D5C7CC4
2AB48F3A993164075520141796D4E4A7B0AAD5EE2DE8B19DF537EB068FBD8FAE
39852EB990189DEC001DB0B41FF2069DB44ED7840CA8F11428C5CF2F4970E1EA
74ECEDB6FD23D30099A4B3EE84FAF5C393B823BD969A408E7BB05DB1E383FEF2
4BB0E998ECAEF6BC1E7B5A89B5EF8E923A40F5EBA28609524D5D25D834BF7051
78EBBB58EE45F09DB6BB50> |
85 <001C60D8A8C9B80456E33E0A1A7AEE6CDA51C0A17FD3BDF87D39D6784E39
476EABF6DB2EF0D0923C36238A8FDB3E6BEB25DBB2308BA0920655D1BB2866E5
7335036D35C3BF78C921CFA8C7D67AB56B65606EBC0D0F36A8FAABBD3D14C7FA
26B88D0B9E5A8B810E76880BBB2AA8E715ED632CDEFDF554BD2BC47BE5C38587
C7CEDACB4341C63415C7A55D8EBCD2A869EE3F665377FA0D007910FDC6C55B21
5A10061DC91A93DF9025FA66367608BE159939DE5837B4A3776CEADE9EFCB95F
73DF2A64DCF084E7B75DAD35CA4A4D7924C61C9313C5103D6CAFB0601820E8CF
F701AA02C76546E27607BF9B9F10D27F1B2DAC3C5BA689FDA699404556B1CBE5
966C7366A2C1BEC61A463446472C1223A031885EA7F8C8813A82> |
74 <001C60D8A8C9B8286EFAD2D0AD1F5BF9A4B512228E42EFA6E2672C7AD2CC
6B9D16997717C52770281D82EF977B93EB18400CFC7502C0225F71E338898C88
1F1B499B0E8D1B0297FF10650E143A30D8C48ABA2B75F81791350C3DE80F06EA
B6E066B829AD75184CEE3D8CC797D7CB6764FC55857EFDCBB0E4FCF0197A3843
89AFB96420837B5B9C1C4F07A58088DD0A2E1D9608D43C38870992933D48E4C9
4F066525F6542BDF2C3EFA7901CF4F53F038F3B0AE41016011A010940C4C> |
84 <001C60D8A8C9B710635F024CE32F8477BA058AEE93D5034F1770A8123EA3
6771C7C61E7FCF394956A73AF1DD8C087D86CB2E98B1D13A7228356E1A693005
D6F89236BE1C8182D23170AF7655397225AB650BA02886D1D0AD92070155FDC2
6403FC43DACDA957920B871D59E519FCF95A405787A2E88DCE0B35426C3096EA
6CE2D35A869BB663ED604FBD22B4D6A8BE84657413B0B2BCA659A33D09D135FE
CC623E3039181748D5ED9186AFB6A81B95A9CFF4031A8C028A724CD3FDEF9937
3A0AA207ED7F47C6405F6C5F53DF12F49C0732FF46F1627C6E76ABDAFF151916
540BED47671202ABA2D6870ABE8DAEE4C62BCF1CA9CD7B36800D6809B24F2F60
DA6920C30C6B1E4E2A4751B45CE442ED233DA771B726624F9B927B29A791FF39
5F97D7F1B6E93E29067CCEAA110C68BFC011EFD8C83F6F04C7A815C2C0D58185
A66527620865EC64576B556821F7347175E688D212B64077C9090DE5D1DE5A4F
929ED40758694E6E69EE4EC33DAA0F2ACB> |
69 <001C60D8A8C9B7EA3ACD97469B05A104ACED2B626378BB7FBBE989DDF088
D4111747B50E48F31A1856E5CDFBE9A2027286CBE5410180E6DE8287780E7DD4
67EA6C246D974B3C70A917FBEB44017A1B32BEDC050A57CCDB9B65FA43A54AED
EFEE60E8855EA3731115E7DE8361DBCBC74D9E58A2154534997988614F2951E5
61005B1D6DE8C7F465E3A7B385830DF648747DA8290127F65942E102ACC5EE0F
A86E0BF37A5B685D132BE3D67A7D91E812139CAB08436BABE21A853C7F8F09DC
6262FDC4545AE6FA33565E519360C604D0D015A9814D7AAB9008A9B4EB3F4DB8
CDE84D088959E4033A7DA5D91AD21219FE3F3D9C6496B96DFE7186438E372487
78510021A9CB7FB0F99E2BC6E4661F9E4E8D4F9DEE6EA13E4777FA79E8603774
0EFEDDC77529602E975DAC332F821DA92CEFEEC4D776CB3ECF9B2861BC257FF8
D8B5672345E3CE821F4AD5B126DF7F4B731153421B1932FDD3DBB3D982A5C88A
0322629A3230A7A8D8A9255C6075574BFE16D76FA797BEDAE5FD83BB7455FF79
B419E73F94FBA8A7A184F20715BCA8092230CFB6F7EC587B968E58D8D84EEC40
AE7EE1E0F816941E9950398A0080ADA2D2536D7C6F545D5271A17130> |
73 <001C60D8A8C9B7D04D6635BA84196E09E44270747D2CB49AA2EC5DB4F402
0944436C0346A498C17C0DD2D754EC237B23EBF20567F5F2A71BDE4471A4AEDE
8E5E2573F39C96288B12A854AF5F9F624EBB95279634D1A6E83627F4074356D0
DD29015418500234F8A6E6559E094142F40DAB2A0210FDEE44C5BBAA7C9CEDD6
843EA478ACB0D6DFEF2FC9FD94708FC895F514FDCF631A943E5F5DC2AEC130B2
41FD1DFE73DABF98499A3F5AAEB29BE08B00759043063FC680735CB4CC9B2CD7
72107AE55F10D9B8D13A06803B3664B2DB6356C76D0D3291D0680A100C78906E
F1994D335092FA8803B4848532ABB8C41FBFB4C78113B364EF62A979089AC78B
4FC939CDA418E953ED16C05C65926F3C794448EE2A2FAD0F37073672DAD5B0E3> |
83 <001C60D8A8C9B76F05D6D4476CFE9FDDE2C0B546616BA3D16FBEE0839633
6FE73BFEF98AC7337C2A846E7296D868F9FF81C0A78F6DCF8F900ED9123206F8
C7DCDA78831607FE2897F092424DC4175B37D0FA0B603CCED5759A3AF4631BC0
8AFE31F5191AFB7E8177DF3991A84A69261DA14222526E401752A05F1CDAD459
D5BD1737CFAB8F24547C93E4FD2A4D5A9FACC73353066F5E8BD92637362E6018
201EDA0EE11EF2546EB18DEB7076C577DF5E32173F95A3030A32ADB9C585C288
30990E147EE0DB127BE54F77096ED387769794C85FD7BD47512562530440100B
2D67814E995F1B1DB65496FF19D2E56091B2F5EFAB3C820C373FF21D206AFFB3
4772A3084B93E8DDE155045D426D2328BF3FA0C1B78B11A4B5DD6E440C2FFC4C
8E> |
68 <001C60D8A8C9B7734FF5DDC295350F747F4949D8A3C826CDDE77720F2210
717DB6FB4658E102CF8739ED0CFD4E54392E4096C78993BFBEF14185BA141EFC
2E4DE318439240D6AE5FE7B81509038332E5A544C33679B68EAC3AC82C350720
203307E172986C2A09ED00A9E2E405AF3CF3DF92B3F571292AAE54F3F5FBC636
A226F2A3E9E358CDF314FE27F1DE2A407889BB64D77B> |
81 <001C60D8A8C9B7F6E95E41DD32914234E53A8E0604CE09B581E8EE05E081
355ABB3B942C733556C14657420EB3889597EC2B01E62CC0BECAC1AF000EE98B
4E90B5CAB7FA9F876A839CE3AC85308900AE0ABBC78796189717B3DEEF8BA678
390BAD8D074A5131079283632CDE4C04CA8A181A8969B540408AEF36FD5E5FED
E37EE4BA8B105E1298C0E8305F95561A0723D205CB00A0158F5026BBC302FCA1
55B5ACBA04E598A2C573E301A2924A818D51F735EFB4BB42FA247A98019E8755
8FD4BFD37A84B86B9AE1A45D7466F2BC36DCA110CFA061AE974A1CE840690684
966338068022B486F718DDB86C3374D704034707CADEED607185263A593458C7
4B477D28F09AD3F7E00F43B6A5954425E0D647349E430EB7CE3F86CF9419F948
29B9B8F3F4C124B0CD15A585F67042EA367E0E9ECE821704390A28E9A493B431
707683FDC8EE1F558D0916880C513CBD22CB56317C671818E324A9C5DD594912
07368BCCE0DAAAE371F324ED584DD2309F26FFD6FCFFE771A014B0DC0FD954DA
4FE1977EFD001F8F1C716C283E25> |
72 <001C60D8A8C9B7B202A65BF9B14401C583DB2CF5D03F4A29A34CACF1F3BC
D0DCD9596A96D021D6328AB0E4B8348B550798A9381EEDCC4F321720A096DCBC
AE3D838AC4DD6B00ABB597032B255BF885B8DD193D706C20E2926E864E466658
E9BE12AB713D797191F8A933DAFEFBDFA1EF56028C3A55EF69D4642812A8AAE1
57519D2324B71529667234A572CB1409D8EC4B08C6F639A9F70AF5A5F09960FB
5056CF135E3DA9CE63046B179C0EED09917C33BD9183266C0E01082A622BC248
DC939050DEB8E3BF76C88012E08C77172603C2F10439522CCC28E5B5E85CD572
9C287F1962ACA8197A3913C3E274C8E6BC3F95BECC708B8A13652D8AFFA26EE8
590584DD70E73E2D51D37410BDE4DCD8FD5D429667BB3054A0C30E90D512324A
97C1DDAC95753AE53FB76A39A3E6E3E95EC9E91CC919AC213C7AD633881727D6
4E52A44BFC264D65E4553184E2DF56BA37D5288AD656EECF91AE2AB70638AB38
0C9253F3447ACC481C14254F969D42AB9804D4FC9F83619BCC443B2ED8307912
E9D32C47432B960F26BD0C17AF73949CF3DF502CA966BA569FCB66AA54E0657E
29860528D0A9D7BC43449D7A745EEE1E32823F60331FB01974F1F18D62404C9C
B733E02E3D09AAA7E77C0FBAE8AD7472F164DD55B20933D4C4E46414DDDC8366
B16ADFB1187FFD71D0ED2140DDC940DB4109FD922BE91985993778BF59AE30E3
28F890AF65C1147FAC4C989E58B5353CD8D15D1883D7E3F7B4C3FE9E6AAF0E6A
888635B8C60CB94F0E51797D80E9D113D833BCE0E726E310D257DD9241BEBB14
B966C59FEDF498DB5F5AE3E484B02C76EEF54E6FD5463BF978327656CC96A678
E75981A4A77AAD111B24EF4112B59712EF42EC2D8E2B18A7732812FA5F22D5EF
860377465AE52B> |
89 <001C60D8A8C9B7EA3AC54A5C32A41F25B2995F183A762DD4F82CD60D38EA
882EDBD50FA1A3A2190C5E9C6DBA19282D33C1027A464807AA028F13CBA5917E
0949E5B69CF8A36AA108529D492D4C20606D5193CE35E13963B24F7C9CE3CA2E
CFACC0A2D03B2A3B30EAD434F720D018956C4838F9DFC89660C34A1C0B1CC587
2E86263B86B2D88457098706CE288E06BD40DAC26358AC21120EF6EF3A93DE33
C762C813E86DE866E107C49C43D424ACF498868F8FA82A60DB5DC308A012B5E7
5FC10D2E658FCF1E4B09BDD020550E9DEE10EF0C0BB4B6176D193F4908575F88
EDAD723EF37AD205F3BA452D1F42A0C948C6E5057DBD1C3CC9B9E531F0DD429A
85529C6641590D7C704E4CA571D54F5250A62A0D5CA4CA2CAEC3A53D9627A23F
8C1C20F030FEBF609809A6AA91E883A7343C42A5497F91F7F35976524F2F3C64
4342D0F32062BDC18D5389395280F7A4299A05BA1F7626FA25001A319B489639
7C7D0673F723DB787F36F29776730EB77CE096A39F558C8C89F492401AF75125
FE3589704D7A53C3013D6982C981B0EE189DA68846B1FDE239DA1A104D17CEF3
06849574A0608BB836C5F96516D35D6918249DEC837D3CF65455FD67126EF16C
5370000BFA118AD827FCD1702ACEB45941667E6C997EA784981E2BB84825B898
6D9AAB52C676077108EA3FE94121AC53FCCB78F73CC4BC9522B653E1> |
14 <001C60D8A8C9B804569561E2AAD87846D87207373E25FB34D62F9EA3A06B
67197AAA44A16F8F71EE9B1F8BDF8BA62A> |
86 <001C60D8A8C9B7C56CCD69AFC81B1B0248070EEC0CD08B65625E27C4FE6F
5EB3B49EC4C61EE6E0132F50841F6C8F6ADB74063DB2F1CC63141D9A7FEB79F0
46630A60ABE97F065784CA809677F335BB332E1C1847FAC0033E9B53DF98B457
390F7097ACC55B58A276426BB99BE2E6E3E1CF379BE853C759DDE4551A4214B1
83CE2B812C9DEBC57FA9695439BFE6E7D0A5F808D91346B5CDA7AB18C289A94F
80A23F8AB31862998EF781B05EBDF39BEC3A7BF856E2C59C822FD6D34CFAC924
2796C24920304F30E8BBC7CB9BD98C75D63A0842D43872B740A8B587C6021C1B
5125E5262B01C0FBA43846289FBEED0946014D1F73E3043F0D4A7699D2E07C74
00FCF5E41A25D912BB655D45B0C944F1ABC5DF196100C223021BEFBC1A7E610D
3CF20AE820DA750B29BD2FB81449679893448A0878AC81806C3B7013DAB3EBE4
E4382F753A99487F11F96913651F896425C4DA2EA499B4BEE6F72F70D2EC> |
15 <001C60D8A8C9B87645F1F676016340247831DFFA59052F7DDA1BC781C7CA
E164BFA7BC43F1DACE51C8C7> |
0 <001C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4ADDDDDB8A4E47F3F
2F1CAAE4F43122CFEE2884275C84424026449C27071D4FDF833FCFC37BDEAA9A
891DE737DA59C1E8008FB0FD905E36128E58DBE941690CD39B139ADD52F6B4B0
641> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /IAAAAA+LinLibertineOB-Identity-H-Identity-H /Identity-H 0 [/IAAAAA+LinLibertineOB-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/XXDFQB+LinLibertineOB-Identity-H /IAAAAA+LinLibertineOB-Identity-H-Identity-H findfont ct_VMDictPut
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
4.1126 8.34344 mo
(\0005\000B\000C\000M\000F\000\022\000\033\0004\000P\000N\000F\000O\000P\000U\000B\000U\000J\000P\000O\000T\000B\000O\000E\000U\000I\000F\000J\000S\000D\000P\000S\000S\000F\000T\000Q\000P\000O\000E\000J\000O\000H\000F\000Y\000Q\000M\000B\000O\000B\000\016)
[5.4156 4.53697 4.85986 2.91405 7.74696 4.6088 5.67569 4.51905 4.94044 8.11458 7.76488 5.52328 
4.94044 3.20998 4.53697 3.20998 2.88724 4.94044 5.52328 7.20899 4.53696 5.52328 8.40163 3.20999 
5.55023 4.38455 2.88724 7.21788 4.08862 4.94044 3.83755 3.77477 4.38457 3.82866 5.2632 4.94043 
5.52328 5.0302 2.88724 5.52327 8.05179 4.33078 5.0302 5.20943 2.91405 4.53697 5.52327 4.53697 
0 ]xsh
4.4086 19.3024 mo
(\000U\000J\000P\000O\000T)sh
27.0398 19.3024 mo
(\000V\000T\000F)sh
40.6778 19.3024 mo
(\000E\000J\000O\000U\000I\000F\000Q\000B\000Q\000F\000S\000\017)
[7.27179 2.88724 7.76488 3.20999 5.55023 6.62615 5.20943 4.53697 5.27222 4.38455 3.31752 0 
]xsh
.57384 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
6.20259 34.8331 mo
251.887 34.8331 li
@
6.20259 37.001 mo
251.887 37.001 li
@
%ADOBeginSubsetFont: OAAAAA+txsys Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /OAAAAA+txsys def
/FontInfo 7 dict dup begin
/Notice (Version 3.0, GPL) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 85 /U put
dup 102 /braceleft put
dup 103 /braceright put
def
/FontBBox {-47 -944 2835 838} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-49 -18 678 705] def
/OtherBlues [-165 -149] def
/BlueScale 0.0322581 def
/StdHW [52.563] def
/StdVW [52.121] def
/StemSnapH [36.282 52.563] def
/StemSnapV [52.121 82.417] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/U <1C60D8A8C9B58723FB855B2C7E0FBF27DBC722AF2C381866D57294BBE994
55ED44FCE9A40A44A0FEE8B4B6A5E74583FBACB9B86740E56E5661B3507B9146
10C411F1BB44F101D37C2A08BEA140191A8B208002C93D492F2D42094BB31A0F
5B7A41D464FA8E7A75C8EBA30CAC103DADC0FD69BB8D0F0DB36BC416BCD838F2
86DEB4A7966AD17426E1B2A91C9CE69D4D865E4CD7B166A81479FF66AC767210
CF38696F41D2AB8D47498BBDCBD7D8ADA6CED7DA2AD6231399EA402D70ED2AE1
F827> |-
/braceleft <1C60D8A8C9B7008A517B245AC6A13D5689C9E67EE6A6517ED35A
F0AEABBC12211C0149B5599597458E12BDF83D8E5F87FA03299365538F200392
07D10E38484EF5B4DCB7D63A2F5547E2CF7272C2CB591BCB51A38DA29EAC249E
D1E19EBC56CDEF46B87EDBE3A597C13CA5926F5DC070C25CF4ECAA7CA02F4902
B5ADB81D9521D804EF6D33E93E4C9EB8F094A6ED8E18AC8D30765A678FF340F3
06DDB95744876D3C2C5D31A51A81926EDA> |-
/braceright <1C60D8A8C9B7008A517B245AC6A13D5689C9E67EE6DD08CE5E8
3BFA2E98A25059A204D42D39B07945469330C6D2FC0A2537D9C492B029BA8576
59562AEE01808960D837E10150F04159B1DA96E885383BA2C30728CF12153209
15F51A425E865B4953C636A71BB1E076B116205316DAC2581680B9459492349D
7A75918D22B7C7DABFAA86879D27F38B47473BF9C3555FA212BA95A62D715276
E7B7EC4FDF8923B0E7960E98E10456AD6F5823702> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/XXDFQC+txsys /OAAAAA+txsys findfont ct_VMDictPut
/XXDFQC+txsys*1 
[85{/.notdef}rp /U 16{/.notdef}rp /braceleft /braceright 152{/.notdef}rp]
XXDFQC+txsys nf
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.1874 45.4347 mo
(U)sh
%ADOBeginSubsetFont: GBAAAA+txmiaX Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /GBAAAA+txmiaX def
/FontInfo 7 dict dup begin
/Notice (Version 3.1, GPL) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 61 /equal put
def
/FontBBox {-400 -243 1032 871} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-9 2 471 480 671 685] def
/OtherBlues [-161 -153] def
/BlueScale 0.0714286 def
/StdHW [37.304] def
/StdVW [65.818] def
/StemSnapH [37.304 70.035] def
/StemSnapV [65.818 89.704] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/equal <1C60D8A8C9B7CB3566FD17DD7506EA527EAAF5AD50576FBD0CB97C05
FCC2F918603E98A9CBCBFC7DF44948> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/XXDFQD+txmiaX /GBAAAA+txmiaX findfont ct_VMDictPut
/XXDFQD+txmiaX*1 
[61{/.notdef}rp /equal 194{/.notdef}rp]
XXDFQD+txmiaX nf
XXDFQD+txmiaX*1 [7.17312 0 0 -7.17312 0 0 ]msf
19.0378 45.4347 mo
(=)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
25.4562 45.4347 mo
(f)sh
%ADOBeginSubsetFont: HBAAAA+LibertineMathMI Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HBAAAA+LibertineMathMI def
/FontInfo 7 dict dup begin
/Notice (Libertine font Copyright (c) Philip Poll
Modifications are Copyright (c) 2017-2019, Michael Sharpe) def
/Weight (Regular) def
/ItalicAngle -12 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 68 /u1D462 put
def
/FontBBox {-342 -238 1011 786} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 0 482 487 671 684 732 736] def
/OtherBlues [-218 -218] def
/BlueShift 0 def
/StdHW [40] def
/StdVW [82] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/u1D462 <1C60D8A8C9B7B202DCA3EC89F1EC8B589F22D9E32B93886E78BE555
BAA2DF6103431D6F8D1E3A5D9A4B1242C4D5C76F907440D9D0E8CA1916D487B4
00AA5E0FE3D6178BCFC4262C34C2348913AFE4CDC6F75FF6EA71019A742A82B0
215FE01AB2A11108D9E70D117C9032AB1DF8C50BACAE280646AAF619C157DA70
89EDD9713767CCAC860D74F129F4F027A5D1D3E4381E8440F1AAD9D838B1CEED
06DD97837D261B7D7F315857D1F12EF9069ADF059BD2EBBABFD1BA766D56ABEA
4AAC30E4B627FFBBF> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/XXDFQE+LibertineMathMI /HBAAAA+LibertineMathMI findfont ct_VMDictPut
/XXDFQE+LibertineMathMI*1 
[68{/.notdef}rp /u1D462 187{/.notdef}rp]
XXDFQE+LibertineMathMI nf
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
28.153 45.4347 mo
(D)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
32.5034 45.4347 mo
(g)sh
.3188 lw
60.5426 48.0651 mo
60.5426 39.2979 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 45.4347 mo
(\000U\000I\000F)sh
75.8056 45.4347 mo
(\000T\000F\000U)sh
85.8695 45.4347 mo
(\000P\000G\000V\000T\000F\000S\000T)
[3.61523 4.01693 3.80897 2.79752 3.20643 2.66835 0 ]xsh
%ADOBeginSubsetFont: OAAAAA+txsys AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQC+txsys dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/V <1C60D8A8C9B5822B9927DD5AB4E470E6BDC6B28767377027DEF02169E48F
5935A994404885226EB242A3C2FB6B566A1849651F8581A6EF1BAC4AE7BC7112
351F852D8DE9E5E0AEB6B7A99D92E99B1F74ECA8B6BE89D90A163E38CF6C1EFD
27BB0BC667AB0EB3FE5B93E58DB5A6AB6775D8E6C9DEAD0BEDFC917277A5EF8B
DE720BEFE3CBA52279C53AF82A6002439B0859F79B3ED042390FC201E8F057> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQC+txsys /Encoding get
dup 86 /V put
pop
%ADOEndSubsetFont
/XXDFQC+txsys*1 
[85{/.notdef}rp /U /V 15{/.notdef}rp /braceleft /braceright 152{/.notdef}rp]
XXDFQC+txsys nf
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.1874 54.2019 mo
(V)sh
XXDFQD+txmiaX*1 [7.17312 0 0 -7.17312 0 0 ]msf
19.0666 54.2019 mo
(=)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
25.4842 54.2019 mo
(f)sh
%ADOBeginSubsetFont: HBAAAA+LibertineMathMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQE+LibertineMathMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D463 <1C60D8A8C9B7347801A78150B37274E265A411C4A75AC759D49BFBF
D379D0D19453C6CFCC1883E3F5F4905427772C05FF83D69B0094E4AA56A09213
B62DA56CE70E44EE74A6BB475E99EADB05E752B5CD4D05BEB4897923DC18F646
B3D20CCAE9DC6F869C79EB1F1098E7E56710E759EDB77101F2165BD05F44837C
F35F39BF4812F4C8DED3E819D9B2BA02DA60BC1017D59B7873236CC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQE+LibertineMathMI /Encoding get
dup 69 /u1D463 put
pop
%ADOEndSubsetFont
/XXDFQE+LibertineMathMI*1 
[68{/.notdef}rp /u1D462 /u1D463 186{/.notdef}rp]
XXDFQE+LibertineMathMI nf
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
28.433 54.2019 mo
(E)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
32.0154 54.2019 mo
(g)sh
60.5426 56.8315 mo
60.5426 48.0651 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 54.2019 mo
(\000U\000I\000F)sh
75.8056 54.2019 mo
(\000T\000F\000U)sh
85.8695 54.2019 mo
(\000P\000G\000J\000U\000F\000N\000T)
[3.61523 4.01693 1.94389 2.26666 3.20643 5.66672 0 ]xsh
%ADOBeginSubsetFont: OAAAAA+txsys AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQC+txsys dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B60355F55D989A8D7B9D142B080C3A10EB97EB48ED568F4697
CCA2F3649556582EDCEB5392F12166532929B5ECFE454315B355AAADE6AC8B80
76FE49F572F503DCD6913828A40DE42EEC87245CC971BE02249ACACE441511D1
4DA8A72F52DD01DC5BC601491F2D90A618C842590C35B9A6D2237861F78BCC83
BDE711FDE2B429E0A50011B571A9A60A4AF2929F6D749D8F2AACDB615580A11C
72EEFAA33A64D278726A8B85C8EFA3B4573A2A66EE651B8ABBF453723FBB3833
4F182768064260A6370EB0C22A757A9FC77ACDBD948660A586B814B965C882F1
B7E941> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQC+txsys /Encoding get
dup 66 /B put
pop
%ADOEndSubsetFont
/XXDFQC+txsys*1 
[66{/.notdef}rp /B 18{/.notdef}rp /U /V 15{/.notdef}rp /braceleft /braceright 
152{/.notdef}rp]
XXDFQC+txsys nf
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.2954 62.9691 mo
(B)sh
60.5426 65.5987 mo
60.5426 56.8315 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 62.9691 mo
(\000U\000I\000F)sh
75.8056 62.9691 mo
(\000T\000F\000U)sh
85.8695 62.9691 mo
(\000P\000G\000V\000T\000F\000S\000C\000F\000I\000B\000W\000J\000P\000S\000T)
[3.61523 4.01693 3.80897 2.79752 3.20643 4.46164 3.608 3.20644 3.85909 3.27813 3.565 1.94388 
3.61523 2.66837 0 ]xsh
%ADOBeginSubsetFont: HBAAAA+LibertineMathMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQE+LibertineMathMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D458 <1C60D8A8C9B7551CBDB9F8C5536EC02B4B498007C01BAEB40C4DB2F
C4B51F6F689F6C25F0C1238FAC13BBDD3FD844335CB7C56B816DAF8D2764B723
40D5E5244A8FEB7D4C93FDE7F8DA8C937651C9F3029DBC273BC1661CBE4D31F5
097C703A0B9817801834FF394087D6D77C0855FD488C9F091341FFF49BD13A34
106F3B99DDCEA367CB9A641C957FEE838B1F4DDC7E6B1A7230C21F86051A83F5
F85B4B13565C00A34E368D588083F68DD3F8C99F9C8DFF3984DA54B67F8063F0
29D632DD7730C98047771A31083F7C75F1398FA1C85F3AE9405> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQE+LibertineMathMI /Encoding get
dup 58 /u1D458 put
pop
%ADOEndSubsetFont
/XXDFQE+LibertineMathMI*1 
[58{/.notdef}rp /u1D458 9{/.notdef}rp /u1D462 /u1D463 186{/.notdef}rp]
XXDFQE+LibertineMathMI nf
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
9.90099 71.7363 mo
(:)sh
60.5426 74.3658 mo
60.5426 65.5987 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 71.7363 mo
(\000C\000F\000I\000B\000W\000J\000P\000S\000U\000Z\000Q\000F\000T\000G\000P\000S\000U\000I\000F\000F\000O\000V\000N\000F\000S\000B\000U\000J\000P\000O\000P\000S\000J\000M\000M\000V\000T\000U\000S\000B\000U\000J\000P\000O)
[3.60091 3.20642 3.8591 3.27812 3.565 1.94389 3.61523 4.46164 2.26666 3.69415 3.77307 3.20643 
4.59079 2.22366 3.61523 4.46163 2.26666 3.85911 4.9997 3.20644 3.88788 3.80898 5.66672 3.20642 
2.66837 3.27812 2.26666 1.94389 3.61523 5.68115 3.61523 4.46165 1.94388 1.89375 1.89377 3.80896 
2.79752 2.26666 2.66837 3.27812 2.26666 1.94388 3.61523 0 ]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.0082 80.5363 mo
(E)sh
%ADOBeginSubsetFont: IBAAAA+LibertineMathMI7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /IBAAAA+LibertineMathMI7 def
/FontInfo 7 dict dup begin
/Notice (Libertine font Copyright (c) Philip Poll
Modifications are Copyright (c) 2017-2019, Michael Sharpe) def
/Weight (Regular) def
/ItalicAngle -12 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /uni2113 put
dup 68 /u1D462 put
def
/FontBBox {-342 -238 1088 786} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 0 482 487 671 684 732 736] def
/OtherBlues [-218 -218] def
/BlueShift 0 def
/StdHW [40] def
/StdVW [82] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/uni2113 <1C60D8A8C9B817A0021A49CCF5A551892B6CFB9BB54836619E9E96
676AA100C56CE8D6BE3153D3F00FBC5B037AF38DBD443C4C2C03E4BB5F28ABD9
6F96A0DB9281710BD2A1281B9C3A8539F47C433F3C98D4F8A12DFCA47DFA9F84
135F0FA71ADDA4C9841E6BFBA09D8D51CB8104D7C4C013E84A796CDCD6672730
512A90E5F993C0DE1DB57322F17C7E1F857C64C7> |-
/u1D462 <1C60D8A8C9B7E1F892F87EACD35026B693A208F158DE2C5356A4D13
5A980FFB3345EDA50975E155860EB89193A576D202E24C31416C73055A092A1F
E8645B8768D44EA9B5772D2BA7A4C4FCC9E28E650ABA1D1D9899F0F413B49949
5F53D8946144A3BED216E5B6CF9B7F72500D59603EBBA39C61EC081A9452001A
A9E482F5B46045424987C05633748A8A8403B9D0C8C1B80DB7DBB461C24099DF
13B80D4975078ACB1D4B38DC6EC6D2EE4CFB43E320C3B4C68FC7D44717B4D626
2F0C6C591210E1C3CE71FF253A45E511AC8F1A164D2AECE2DEA12146C8403172
3B751368C2F37F361DF3D> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/XXDFQF+LibertineMathMI7 /IBAAAA+LibertineMathMI7 findfont ct_VMDictPut
/XXDFQF+LibertineMathMI7*1 
[18{/.notdef}rp /uni2113 49{/.notdef}rp /u1D462 187{/.notdef}rp]
XXDFQF+LibertineMathMI7 nf
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
13.3882 77.9323 mo
(\022)sh
12.8586 82.3083 mo
(D)sh
%ADOBeginSubsetFont: OAAAAA+txsys AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQC+txsys dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/element <1C60D8A8C9B78324FDE0C046CB0AC4D74D02CBA92C005AFADA2464
131B4BCEBBBC55DA87A543ADE26CE4F7FCA7C82881D8A770DEACC37FDDCE1D8B
B1228467D6FC8B1E7AEEF134288B29BE1F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQC+txsys /Encoding get
dup 50 /element put
pop
%ADOEndSubsetFont
/XXDFQC+txsys*1 
[50{/.notdef}rp /element 15{/.notdef}rp /B 18{/.notdef}rp /U /V 15{/.notdef}rp 
/braceleft /braceright 152{/.notdef}rp]
XXDFQC+txsys nf
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
19.073 80.5363 mo
(2V)
[5.97518 0 ]xsh
60.5426 83.1667 mo
60.5426 74.3658 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 80.5363 mo
(\000U\000I\000F)sh
75.8056 80.5363 mo
(\000J\000U\000F\000N)sh
90.6826 80.5363 mo
(\000J\000O\000U\000F\000S\000B\000D\000U\000F)sh
116.527 80.5363 mo
(\000E\000X\000J\000U\000I\000C\000Z\000V\000T\000F\000S)
[5.42286 5.35828 1.94389 2.26666 5.65237 3.53632 5.48743 3.80899 2.7975 3.20644 0 ]xsh
%ADOBeginSubsetFont: HBAAAA+LibertineMathMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQE+LibertineMathMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/uni2113 <1C60D8A8C9B817A0021A49CCF5A551892B6CFB9BB54836619E9E96
676AA100F9682F118AA3D0A8A1D4CAC082C5B27C037B944CA2C9538F1190131C
B489E5D2C249E76F7167CCEF3ADA460A1201C7925DE4688771CEA5E181182A93
81AB81042485E6061FC101430EE3368293D88D581527AA200B6E8429154FA9F7
BDA04F8A4F80AE1AE23F67EA66C2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQE+LibertineMathMI /Encoding get
dup 18 /uni2113 put
pop
%ADOEndSubsetFont
/XXDFQE+LibertineMathMI*1 
[18{/.notdef}rp /uni2113 39{/.notdef}rp /u1D458 9{/.notdef}rp /u1D462 /u1D463 186{/.notdef}rp]
XXDFQE+LibertineMathMI nf
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
160.047 80.5363 mo
(D)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
166.011 80.5363 mo
(\000B\000U\000U\000I\000F)
[3.27812 4.05994 2.26668 3.85909 0 ]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
184.446 80.5363 mo
(\022)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
187.459 80.5363 mo
(\000\016\000U\000I)sh
197.795 80.5363 mo
(\000U\000J\000N\000F)sh
212.672 80.5363 mo
(\000T\000U\000F\000Q)sh
%ADOBeginSubsetFont: JBAAAA+MinLibBol Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /JBAAAA+MinLibBol def
/FontInfo 7 dict dup begin
/Notice (Linux Libertine by Philipp H. Poll,
Open Font under Terms of following Free Software Licenses:
GPL (General Public License) with font-exception and OFL (Open Font License).
Created with FontForge (http://fontforge.sf.net)
Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,2012) def
/Weight (Semibold) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 98 /b put
def
/FontBBox {-83 -238 1135 858} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 1 433 447 460 474 563 580 645 662 690 698] def
/OtherBlues [-238 -212] def
/BlueScale 0.0380769 def
/BlueShift 6 def
/StdHW [34] def
/StdVW [110] def
/StemSnapH [22 27 29 32 34 36 39 42 44 46] def
/StemSnapV [110 117 122 132] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/b <1C60D8A8C9B7A2256EB6439EDBFED8EBBD75BD173CF541DD11AD92625E64
B2EC25C729762C3BEB9BB8CBEFF3BCDCA1F69CCC0766BDA858B159010BD9DF3E
C341FAE6E5BED206D032E0C4E05BD44C5667AB3A436207BE6432854A51D3E752
F340046AFD8D0BB6211BBBB4704378FE92F3174996CD8B739DA34FE0AE10F4F2
C1731228459B7E49CBDDEF3513D4FD24862B01BF22BEE72E5461> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/XXDFQG+MinLibBol /JBAAAA+MinLibBol findfont ct_VMDictPut
/XXDFQG+MinLibBol*1 
[98{/.notdef}rp /b 157{/.notdef}rp]
XXDFQG+MinLibBol nf
XXDFQG+MinLibBol*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.1874 93.7771 mo
(b)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
13.7866 91.173 mo
(\022)sh
13.461 95.5491 mo
(D)sh
%ADOBeginSubsetFont: OAAAAA+txsys AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQC+txsys dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/bar <1C60D8A8C9B8A2CEA1530FE3F233DC8764818D9FA9B13E331AE7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQC+txsys /Encoding get
dup 106 /bar put
pop
%ADOEndSubsetFont
/XXDFQC+txsys*1 
[50{/.notdef}rp /element 15{/.notdef}rp /B 18{/.notdef}rp /U /V 15{/.notdef}rp 
/braceleft /braceright 2{/.notdef}rp /bar 149{/.notdef}rp]
XXDFQC+txsys nf
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
19.6754 93.7771 mo
(2)sh
%ADOBeginSubsetFont: KBAAAA+txsyb Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /KBAAAA+txsyb def
/FontInfo 7 dict dup begin
/Notice (Version 3.0, GPL) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
def
/FontBBox {-45 -187 2238 794} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-16 0 444 468 662 677] def
/OtherBlues [-209 -203] def
/BlueScale 0.0416667 def
/StdHW [106] def
/StdVW [74] def
/StemSnapH [66 106] def
/StemSnapV [58 74] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/R <1C60D8A8C9B64EDF8B90BCC42E57B35D3FD7EEB164BEA81F2157074471E1
C50A085377EC377A8379642B56FFBA47DA8416CD686C11873995FA290EB4EA0E
60606310E3E568D6155D18ADC1876B610FD5F1A0D0BF5460178C8EBFF62AC26B
77B167BC26E24E23BCD3D6353D7397F72BED4724A3D61B5494662A2F8B704A26
DCBBBD69ADF49602760EA1E64F394F3F5387758489BB9B265C3610292CA52E49
5BF34B07B737F7E652B270AFDACE38DD3D992A331D14A2528E27496E1A9D2F03
54AB4D2D48D993BD8FF3CA4DDBBE506F44E362DFAF9A39ADB9D931F5266E3AF1
3F57F77D241DB340E96846DA4E169AFD0919B641005C98E5> |-
/.notdef <1C60D8A8C9B5EE31F4> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/XXDFQH+txsyb /KBAAAA+txsyb findfont ct_VMDictPut
/XXDFQH+txsyb*1 
[82{/.notdef}rp /R 173{/.notdef}rp]
XXDFQH+txsyb nf
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
25.6562 93.7771 mo
(R)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
31.0226 91.173 mo
(jBj)
[1.82689 5.056 0 ]xsh
60.5426 100.701 mo
60.5426 83.1667 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 89.3035 mo
(\000U\000I\000F)sh
75.8056 89.3035 mo
(\000C\000F\000I\000B\000W\000J\000P\000S\000T\000F\000U\000\011\000N\000V\000M\000U\000J\000\016\000I\000P\000U\000W\000F\000D\000U\000P\000S\000\012\000J\000O\000W\000P\000M\000W\000F\000E\000J\000O\000U\000I\000F\000J\000O\000U\000F\000S\000B\000D\000U\000J\000P\000O)
[3.60801 3.20643 3.8591 3.27811 3.565 1.94389 3.61524 4.46164 2.79751 3.20644 4.05994 2.13762 
5.66673 3.80896 1.89376 2.26666 1.94389 2.4245 3.85909 3.61525 4.05994 3.51476 3.24945 3.07005 
2.26666 3.61523 2.55354 3.92368 1.94388 3.88789 3.51476 3.61523 1.89377 3.50764 3.24945 5.42285 
1.94388 5.68117 2.26666 3.8591 4.99971 1.94388 3.88789 2.26666 3.20642 2.66837 3.27812 3.07007 
2.26665 1.94389 3.61523 0 ]xsh
64.6874 98.0707 mo
(\000U\000F\000S\000N)sh
80.2816 98.0707 mo
(\000P\000G\000V\000T\000F\000S)
[3.61524 4.01693 3.80897 2.79752 3.20643 0 ]xsh
%ADOBeginSubsetFont: HBAAAA+LibertineMathMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQE+LibertineMathMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D44F <1C60D8A8C9B75D88A4492BBF8B86836ACCBB4603D612B2DD71167AE
BFCE42790B4D91632EE3492847CD6308F3368DCD2121945119241AF15706BDBF
360AC3BECC15BA6F0BB8CD448C61B721FB7B9D839B9BC6CB50D35DFC16E8EB73
E90F1AA4F984F6EDCA077698BF625641FE94E1539E69947B5998B4FC410F9319
48BD98EC189189B8E6906567E8DCF3306EB95175298AB5F5FFC> |-
/comma <1C60D8A8C9B88EAF98C7420007358A92F2F02EA92D80F1DA0483CA45
A4AC67273584B88A4832874F5EFF012226DC1DAD90101DBD6AF0E4CCC4E5C97D
4C1AAB3C78FA63129A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQE+LibertineMathMI /Encoding get
dup 49 /u1D44F put
dup 149 /comma put
pop
%ADOEndSubsetFont
/XXDFQE+LibertineMathMI*1 
[18{/.notdef}rp /uni2113 30{/.notdef}rp /u1D44F 8{/.notdef}rp /u1D458 9{/.notdef}rp /u1D462 
/u1D463 79{/.notdef}rp /comma 106{/.notdef}rp]
XXDFQE+LibertineMathMI nf
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
101.765 98.0707 mo
(D)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
107.729 98.0707 mo
(\000B\000U\000U\000I\000F)
[3.27812 4.05994 2.26666 3.8591 0 ]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
126.164 98.0707 mo
(\022)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
129.177 98.0707 mo
(\000\016\000U\000I)sh
139.513 98.0707 mo
(\000U\000J\000N\000F)sh
154.39 98.0707 mo
(\000T\000U\000F\000Q)sh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
9.8146 112.637 mo
(1)sh
%ADOBeginSubsetFont: IBAAAA+LibertineMathMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQF+LibertineMathMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D458 <1C60D8A8C9B7B4A149832971F9E4B3E32D8529744E8E2C4028BA0F8
0DAC8680E565D8533C132C9023C37565F0709ECAA2FE9F6251BA84FB818D4DD3
31AE432432AA1AB421F3A2B6619E1A5A1EF7415B7B82FE08D6FD7DD72A6307C6
CA753BE251D9B1C3AF768F8F9F2065EDD2575A96F541F10DFED69AB7FAF78B31
3C44CFE81830AACCB38CF6AF3EF0FAAD55005F3DA7FF50B276CAFD99B22CBC60
FFD6D9EEA0F946096B8D68B2393799ED5FFB6502815C09B1823CFDCB6E3B8731
4CA810BF01D845C2C422854B2A9197F832791272AB962695EC89564F5C0> |-
/comma <1C60D8A8C9B87C134A98EBF95903B251A01992D0D1292C49E15346EB
49C5169A581176A43D77D4D737510173D6E626A170D4CEFE1BA9054739653D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQF+LibertineMathMI7 /Encoding get
dup 58 /u1D458 put
dup 149 /comma put
pop
%ADOEndSubsetFont
/XXDFQF+LibertineMathMI7*1 
[18{/.notdef}rp /uni2113 39{/.notdef}rp /u1D458 9{/.notdef}rp /u1D462 80{/.notdef}rp /comma 
106{/.notdef}rp]
XXDFQF+LibertineMathMI7 nf
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
13.6538 110.033 mo
(\022)sh
13.217 115.774 mo
(D\225:)
[3.50257 1.21603 0 ]xsh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
23.9466 112.637 mo
(2f)
[6.15451 0 ]xsh
%ADOBeginSubsetFont: LBAAAA+MinLibReg Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /LBAAAA+MinLibReg def
/FontInfo 7 dict dup begin
/Notice (Linux Libertine by Philipp H. Poll,
Open Font under Terms of following Free Software Licenses:
GPL (General Public License) with font-exception and OFL (Open Font License).
Created with FontForge (http://fontforge.sf.net)
Sept 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,2012) def
/Weight (Book) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
def
/FontBBox {-68 -238 1134 858} def
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 0 429 442 460 472 600 610 645 658 688 698] def
/OtherBlues [-238 -227] def
/FamilyBlues [-12 0 429 442 460 472 600 610 645 658 688 698] def
/FamilyOtherBlues [-238 -227] def
/BlueScale 0.0396 def
/BlueShift 6 def
/StdHW [36] def
/StdVW [79] def
/StemSnapH [36] def
/StemSnapV [79 86] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/zero <1C60D8A8C9B74A3E856A1813A481F12D1C7EB9DFCE179CE4B60BC17B3
F37A085081604CDD43E82ECB6A618315A1665BD6739FBDFFDAEDFB622F9FEB24
009C15929C30E5DE9FB3AAA8A088E5B9B86285BE6D3F024DEEB73E91F81C4E79
AA5BF641016CEEAC91B25B67F800FF96572AD04AF9C3D1DE0> |-
/one <1C60D8A8C9B74A3E8D9B6E4FBB9283EA31AC3F7A3E4DE092461636BD67
A7BEC8CD5D83C2A6436DC96F2697BD78E8C6247002F978477D1DD4BAF8892D87
F8DCC2EFD7E532118F3C13CB15925F0A38814FCAA705264350FA985A5D5AB08F
BCB7FA8F84E967D9EC6A9E48E955446AB75C8A722B53206DE26FF5439FAC15DB
5FFEDB6903AF1950C4345848A2AA> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/XXDFQI+MinLibReg /LBAAAA+MinLibReg findfont ct_VMDictPut
/XXDFQI+MinLibReg*1 
[48{/.notdef}rp /zero /one 206{/.notdef}rp]
XXDFQI+MinLibReg nf
XXDFQI+MinLibReg*1 [7.17312 0 0 -7.17312 0 0 ]msf
33.2338 112.637 mo
(0)sh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
36.3546 112.637 mo
(\225)sh
XXDFQI+MinLibReg*1 [7.17312 0 0 -7.17312 0 0 ]msf
39.1994 112.637 mo
(1)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
42.7146 112.637 mo
(g)sh
60.5426 120.886 mo
60.5426 100.701 li
@
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
64.3138 106.871 mo
(1)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
68.1538 104.267 mo
(\022)sh
67.7162 110.008 mo
(D\225:)
[3.50257 1.22186 0 ]xsh
XXDFQD+txmiaX*1 [7.17312 0 0 -7.17312 0 0 ]msf
78.3026 106.871 mo
(=)sh
XXDFQI+MinLibReg*1 [7.17312 0 0 -7.17312 0 0 ]msf
84.541 106.871 mo
(1)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
89.6698 106.871 mo
(\000J\000G\000V\000T\000F\000S)
[1.94389 4.01693 3.80897 2.79752 3.20642 0 ]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
109.475 106.871 mo
(D)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
115.439 106.871 mo
(\000I\000B\000T)sh
127.167 106.871 mo
(\000B\000O\000J\000O\000U\000F\000S\000B\000D\000U\000J\000P\000O\000P\000O\000J\000U\000F\000N)
[3.27811 5.68115 1.94391 3.88788 2.26666 3.20644 2.66835 3.27814 3.07004 2.26666 1.94388 3.61525 
5.68117 3.61523 5.68117 1.94388 2.26668 3.20642 0 ]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
193.949 106.871 mo
(E)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
197.33 104.267 mo
(\022)sh
196.799 108.643 mo
(D)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
202.671 106.871 mo
(\000X\000J\000U\000I)sh
217.892 106.871 mo
(\000U\000I\000F)sh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
228.731 106.871 mo
(:)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
232.759 106.871 mo
(\000\016\000U\000I)sh
64.6874 116.963 mo
(\000C\000F\000I\000B\000W\000J\000P\000S\000B\000U\000U\000I\000F)
[3.60089 3.20644 3.8591 3.27811 3.565 1.94389 3.61524 4.46164 3.27811 4.05994 2.26666 3.85911 
0 ]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
110.659 116.963 mo
(\022)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
113.672 116.963 mo
(\000\016\000U\000I)sh
124.009 116.963 mo
(\000U\000J\000N\000F)sh
138.885 116.963 mo
(\000T\000U\000F\000Q)sh
150.814 116.963 mo
(\000\015\000P\000U\000I\000F\000S\000X\000J\000T\000F)
[3.36417 3.61523 2.27388 3.8591 3.20644 2.77596 5.35828 1.94388 2.79752 0 ]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
184.635 116.963 mo
(1)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
188.475 114.36 mo
(\022)sh
188.038 120.1 mo
(D\225:)
[3.50258 1.22185 0 ]xsh
XXDFQD+txmiaX*1 [7.17312 0 0 -7.17312 0 0 ]msf
198.624 116.963 mo
(=)sh
XXDFQI+MinLibReg*1 [7.17312 0 0 -7.17312 0 0 ]msf
204.863 116.963 mo
(0)sh
%ADOBeginSubsetFont: OAAAAA+txsys AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQC+txsys dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B65A72338D5B6E624D7A1C9106E55E39DF973219FF896E6694
24562CFE1F827F851482381CDF3CD30A129413860F4741909095FC37A7F94991
D3B31397DAA5D2BF508D6EFBA9B39DCA39D91D0ADDF0A392A43780E3E96F2846
E74AA5F62E9CE9B3075F0E1428364B06FBBDF344EE7C2896FE3B0E25213CCF4B
F1025D3F3A1CB98F1DB46BE6F0207B> |-
/parenleft <1C60D8A8C9B81F2C76FCF1DA4D86CF9A94F42F4403FC19AC0B1F
0AFAB39486C5D049F1E7B499EB366934F5D250018E461A11A72B209097C1E82C
68B83A> |-
/parenright <1C60D8A8C9B81F2C3AE0CFA7597C3CCFA122F784CF593B3EB97
ECDB822C7DD1DB2CE9E040AD6AC7202C28630B6F873643161C3D383C4CC54D51
FF2EE06BB0075> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQC+txsys /Encoding get
dup 83 /S put
dup 185 /parenleft put
dup 186 /parenright put
pop
%ADOEndSubsetFont
/XXDFQC+txsys*1 
[50{/.notdef}rp /element 15{/.notdef}rp /B 16{/.notdef}rp /S /.notdef /U 
/V 15{/.notdef}rp /braceleft /braceright 2{/.notdef}rp /bar 78{/.notdef}rp /parenleft 
/parenright 69{/.notdef}rp]
XXDFQC+txsys nf
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.1874 127.056 mo
(S)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
14.5298 128.132 mo
(D)sh
XXDFQD+txmiaX*1 [7.17312 0 0 -7.17312 0 0 ]msf
20.601 127.056 mo
(=)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
27.0194 127.056 mo
(f\271)
[3.47893 0 ]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
33.0018 127.056 mo
(E)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
36.3818 124.452 mo
(\022)sh
35.8514 128.828 mo
(D)sh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
39.7146 127.056 mo
(\225)sh
XXDFQG+MinLibBol*1 [7.17312 0 0 -7.17312 0 0 ]msf
42.5602 127.056 mo
(b)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
46.1594 124.452 mo
(\022)sh
45.8338 128.828 mo
(D)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
49.9122 127.056 mo
(\272g)
[2.91941 0 ]xsh
60.5426 129.687 mo
60.5426 120.886 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 127.056 mo
(\000U\000I\000F)sh
75.8056 127.056 mo
(\000J\000O\000U\000F\000S\000B\000D\000U\000J\000P\000O)sh
109.634 127.056 mo
(\000T\000F\000R\000V\000F\000O\000D\000F\000X\000J\000U\000I\000C\000F\000I\000B\000W\000J\000P\000S\000T\000F\000U\000P\000G\000V\000T\000F\000S)
[2.79752 3.25667 3.60812 3.80897 3.20644 3.88789 3.07004 4.99973 5.35828 1.94388 2.26668 5.65237 
3.60802 3.20642 3.8591 3.27811 3.565 1.94389 3.61523 4.46164 2.79752 3.20644 4.05994 3.61523 
4.01694 3.80896 2.79752 3.20642 0 ]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
212.575 127.056 mo
(D)sh
6.20259 129.846 mo
251.887 129.846 li
@
%ADOBeginSubsetFont: HBAAAA+LibertineMathMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQE+LibertineMathMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D451 <1C60D8A8C9B752AB3DE30F164C1D3001D8F27E867AC88DFDA45BAB4
0C92C73830A04A47EF05015E016F88E15857B33C64CD633AA6C91DC5617C3A07
53B3265058F0A3C6C253FD55C37C9912191AB2262D3819338C2A332E01ADC530
5DE681F9366828A8D93C47B08C889641D8F01734AF49405CF524FE36D2C51AB5
1BBC166A4F9CBAAD12A6998A6F2188A57B3C15BA750A31CAFBD938BB98599DFD
F96C72AE167C9FA618936812506E5C96DEA127759DCAF5C5D34FE52DC1A3E05A
338CA30D3F9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQE+LibertineMathMI /Encoding get
dup 51 /u1D451 put
pop
%ADOEndSubsetFont
/XXDFQE+LibertineMathMI*1 
[18{/.notdef}rp /uni2113 30{/.notdef}rp /u1D44F /.notdef /u1D451 6{/.notdef}rp /u1D458 
9{/.notdef}rp /u1D462 /u1D463 79{/.notdef}rp /comma 106{/.notdef}rp]
XXDFQE+LibertineMathMI nf
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
9.829 136.143 mo
(3)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
16.0138 136.143 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
21.9946 136.143 mo
(R)sh
60.5426 138.772 mo
60.5426 130.005 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 136.143 mo
(\000M\000B\000U\000F\000O\000U)sh
83.273 136.143 mo
(\000E\000J\000N\000F\000O\000T\000J\000P\000O)sh
115.645 136.143 mo
(\000P\000G\000F\000N\000C\000F\000E\000E\000J\000O\000H\000T)
[3.61523 4.01693 3.20643 5.66671 3.60803 3.25665 3.62958 3.62958 1.94389 3.88788 3.58656 0 
]xsh
%ADOBeginSubsetFont: HBAAAA+LibertineMathMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQE+LibertineMathMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D43F <1C60D8A8C9B7B4A14161EB7545D0E4A5671B2DCC9FFCA673D78F0B7
C8CA3FB6A7C60373C055A6C77282187F3D65A76566B86CD4806965146AD0E716
CF7A4AF3ACFFEE77FBD9A3E1C0BEF9619504546E3F23E41E733C6B3AF619AC08
100253815D35701563457774C065515AA9D6F010F8E7CFFCAE6C6A184F7A4297
B737127BE9F474DE3B39BB195E9B89F2F7B77839DF7BDA37E677E3C8E0223630
69C081BBA707A17DEB71FF603> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQE+LibertineMathMI /Encoding get
dup 33 /u1D43F put
pop
%ADOEndSubsetFont
/XXDFQE+LibertineMathMI*1 
[18{/.notdef}rp /uni2113 14{/.notdef}rp /u1D43F 15{/.notdef}rp /u1D44F /.notdef /u1D451 
6{/.notdef}rp /u1D458 9{/.notdef}rp /u1D462 /u1D463 79{/.notdef}rp /comma 106{/.notdef}rp]
XXDFQE+LibertineMathMI nf
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.0802 144.909 mo
(!)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
16.1938 144.909 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
22.1738 144.909 mo
(R)sh
60.5426 147.539 mo
60.5426 138.772 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 144.909 mo
(\000M\000F\000O\000H\000U\000I)sh
85.1739 144.909 mo
(\000P\000G\000U\000I\000F\000V\000T\000F\000S\000T\000F\000R\000V\000F\000O\000D\000F)
[3.61523 4.01693 2.26666 3.8591 4.99971 3.80897 2.79752 3.20643 4.46163 2.79752 3.25668 3.60812 
3.80897 3.20642 3.88789 3.07005 0 ]xsh
%ADOBeginSubsetFont: MBAAAA+LibertineMathBMI Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /MBAAAA+LibertineMathBMI def
/FontInfo 7 dict dup begin
/Notice (Libertine isCopyright (c) Philip Poll
Modifications Copyright (c) 2017-2019, Michael Sharpe) def
/Weight (Regular) def
/ItalicAngle -12 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 75 /u1D46C put
def
/FontBBox {-90 -263 964 786} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 610 612] def
/StdHW [41] def
/StdVW [123] def
/StemSnapH [33 41 46 50 70 75] def
/StemSnapV [86 91 103 107 113 117 123 128 135] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/u1D46C <1C60D8A8C9B784FA13525AB8D0994BB97829AF273B33ED329724B5E
82B79466CA551B89BB141E93583BE8C084A973ED5E9BDD9DC18DF51701E5F3AA
7673041293C501524D07927AE7769290E8162BAE859BDFA852832A10B1CA945F
3FEAEE936C40E4E9FBB82648901DB9014D37C7F7D85612D6E1BE669676F256EB
F7A72A3CE2C8663B4CD23219113928EC9C22F1F6A45587E2234D8D8711FE51F4
433BD60B178E8C1B21B62025D7BFEF314D285B3A69CF939415A3873FD76D6848
929511CBF6521D60E9B2CFF3797999649D2E26F98C7F02AA181E839D7BF1DE3A
CB99AC82382107A719CC71118AE19337F625A1FD86BAEEEFD9CD6EB502F3C2F8
5B7A2EA3D3DDBD409628C316FE3FFE75435389D> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/XXDFQJ+LibertineMathBMI /MBAAAA+LibertineMathBMI findfont ct_VMDictPut
/XXDFQJ+LibertineMathBMI*1 
[75{/.notdef}rp /u1D46C 180{/.notdef}rp]
XXDFQJ+LibertineMathBMI nf
XXDFQJ+LibertineMathBMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.2594 154.259 mo
(K)sh
%ADOBeginSubsetFont: OAAAAA+txsys AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQC+txsys dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/multiply <1C60D8A8C9B67106DD6BE95D18A9A2FF869750297EA9E4AB6FFB5
AB6B388503C25DC1B795237E6BD67ABEA115B571FE15D2B1B0B2796FCAEEE00C
F85507DAA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQC+txsys /Encoding get
dup 2 /multiply put
pop
%ADOEndSubsetFont
/XXDFQC+txsys*1 
[2{/.notdef}rp /multiply 47{/.notdef}rp /element 15{/.notdef}rp /B 16{/.notdef}rp /S 
/.notdef /U /V 15{/.notdef}rp /braceleft /braceright 2{/.notdef}rp /bar 
78{/.notdef}rp /parenleft /parenright 69{/.notdef}rp]
XXDFQC+txsys nf
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
16.9362 154.259 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
22.9162 154.259 mo
(R)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
28.2826 151.656 mo
(jVj\002)
[1.74543 6.16724 1.39634 0 ]xsh
%ADOBeginSubsetFont: IBAAAA+LibertineMathMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQF+LibertineMathMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D451 <1C60D8A8C9B78181B602FAA995963B05229AF86CC20484B40E585E1
52C2E191515E392A760965ACE1462646F5397E88FC176E323C768ED7ADB5A9A9
462474854F6BC4AE969E5849F4E6C3A37A985C2B37CFD7924751B1FFB13CE997
DB749AAB5AF9EE2EB172F3659B31CCE0FF448E3C8FBEA9747CA72EE5EE9A0988
99AA39D87579DE3A74C81684B083FB0CA3DF160292F8306B53E12D3208D77E03
5BC1CAD001E95A9469626061BC7CF0D9C4B82C9ACA11EB6F717D58A65F3C7B34
11AA1CFB3B4A6F48816E9BD44> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQF+LibertineMathMI7 /Encoding get
dup 51 /u1D451 put
pop
%ADOEndSubsetFont
/XXDFQF+LibertineMathMI7*1 
[18{/.notdef}rp /uni2113 32{/.notdef}rp /u1D451 6{/.notdef}rp /u1D458 9{/.notdef}rp /u1D462 
80{/.notdef}rp /comma 106{/.notdef}rp]
XXDFQF+LibertineMathMI7 nf
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
41.0018 151.656 mo
(3)sh
60.5426 156.89 mo
60.5426 147.539 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 154.259 mo
(\000J\000U\000F\000N)sh
79.5572 154.259 mo
(\000F\000N\000C)sh
92.0383 154.259 mo
(\000F\000E\000E\000J\000O\000H\000N\000B\000U\000S\000J\000Y)
[3.25667 3.62958 3.62958 1.94389 3.88789 5.37984 5.66673 3.27811 2.26667 2.66835 1.94389 0 
]xsh
%ADOBeginSubsetFont: MBAAAA+LibertineMathBMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQJ+LibertineMathBMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D477 <1C60D8A8C9B7B202D12EF2EE72DD7BD3726099532EEEA2018CB05D5
73247C97CE925E25223177D4C7242ED1841D49C1F677BFAB6489ADFBCCCF33AE
634E16065905A7F0CB932F1609DC726B40C57851EEC754F44621710F60569576
00A0DC74D19DC7F088F30BEFF32DE2145CF5E1298945D1683B3B8C03B8004EB9
CE53E16671AE912FB298F58776E01DE819ED9F6E4EACEE60D533688C99B581EC
AD3C683A9C4DBBB70B65F4CD41C91AED2896D6CF604BE47D9962E110874CD68> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQJ+LibertineMathBMI /Encoding get
dup 86 /u1D477 put
pop
%ADOEndSubsetFont
/XXDFQJ+LibertineMathBMI*1 
[75{/.notdef}rp /u1D46C 10{/.notdef}rp /u1D477 169{/.notdef}rp]
XXDFQJ+LibertineMathBMI nf
XXDFQJ+LibertineMathBMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.2954 163.595 mo
(V)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
16.9106 163.595 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
22.8914 163.595 mo
(R)sh
%ADOBeginSubsetFont: IBAAAA+LibertineMathMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQF+LibertineMathMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D43F <1C60D8A8C9B7924C32F3914C9AC7DD967504A2DBBD93D70FA437501
287B71D7C6A16588BBB2A93FC975CE97179D1C391F490DBDF2DDF0AB30200B3D
BD5386272A396370893238DFF40366382681FA151D370AFA5DF107B36E81798F
10975063B695343D5D8D89B5647BE0E3E659D25D7AACA0C1389BC068E78EA0D9
5FDAB78FF6D0867DE20B3BF4D8CDD9A042E48E66C226B839748B8F2FB6196787
822B55E56C9C13075720BEC7BFC189752F0A34E8D1B16FE4E4885> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQF+LibertineMathMI7 /Encoding get
dup 33 /u1D43F put
pop
%ADOEndSubsetFont
/XXDFQF+LibertineMathMI7*1 
[18{/.notdef}rp /uni2113 14{/.notdef}rp /u1D43F 17{/.notdef}rp /u1D451 6{/.notdef}rp /u1D458 
9{/.notdef}rp /u1D462 80{/.notdef}rp /comma 106{/.notdef}rp]
XXDFQF+LibertineMathMI7 nf
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
27.589 160.991 mo
(!)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
31.013 160.991 mo
(\002)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
34.4218 160.991 mo
(3)sh
60.5426 166.226 mo
60.5426 156.89 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 163.595 mo
(\000Q\000P\000T\000J\000U\000J\000P\000O\000F\000N\000C\000F\000E\000E\000J\000O\000H\000N\000B\000U\000S\000J\000Y)
[3.76585 3.61523 2.79751 1.94389 2.26666 1.94389 3.61523 5.68117 3.20643 5.66672 3.60801 3.25667 
3.62958 3.62958 1.94389 3.88789 5.37984 5.66672 3.27811 2.26669 2.66833 1.94391 0 ]xsh
%ADOBeginSubsetFont: MBAAAA+LibertineMathBMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQJ+LibertineMathBMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D46E <1C60D8A8C9B672D45A394A19E1FC01BF7F03613729F034A6090A4ED
FA47AE893E3FC8CBD3FD9E00A4E015314C412CE3FE93798628C1F12037D21494
93CDAD029224800D02090DE0120349D994757CD387F44DF8E221345257E55859
778B847B7D1A273E4661152C343F26AA8027C07A9FA925D07FCD9A9E088C3A83
C41FFC5C6BB1782932C063F5A9F17CD26A39188542C3067FF0C2FB1B07649DAB
FC193FDB5B37C70D26532D6AB1864347FB82A7742A9F68C411F4D3713476B0DA
DF99E21713FCFE2FE7A4E7EEA8DEE640DDF2DA53B730767BECB340AAF303ADD3
9FFE372CFB2F2C0BB7EFC3E0FAC84B24D6D2178> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQJ+LibertineMathBMI /Encoding get
dup 77 /u1D46E put
pop
%ADOEndSubsetFont
/XXDFQJ+LibertineMathBMI*1 
[75{/.notdef}rp /u1D46C /.notdef /u1D46E 8{/.notdef}rp /u1D477 169{/.notdef}rp]
XXDFQJ+LibertineMathBMI nf
XXDFQJ+LibertineMathBMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.3314 172.946 mo
(M)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
17.5458 172.946 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
23.5266 172.946 mo
(R)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
28.893 170.342 mo
(jBj\002)
[1.82688 5.056 1.39634 0 ]xsh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
40.5874 170.342 mo
(3)sh
60.5426 175.576 mo
60.5426 166.226 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 172.946 mo
(\000H\000M\000P\000C\000B\000M)sh
84.2772 172.946 mo
(\000C\000F\000I\000B\000W\000J\000P\000S\000F\000N\000C\000F\000E\000E\000J\000O\000H\000N\000B\000U\000S\000J\000Y)
[3.60802 3.20643 3.8591 3.27812 3.56499 1.94389 3.61524 4.46163 3.20644 5.66671 3.60802 3.25667 
3.62958 3.62958 1.94388 3.88788 5.37985 5.66672 3.27812 2.26666 2.66835 1.94389 0 ]xsh
%ADOBeginSubsetFont: NBAAAA+txbsys Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /NBAAAA+txbsys def
/FontInfo 7 dict dup begin
/Notice (Version 3.0, GPL) def
/Weight (Bold) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 70 /F put
def
/FontBBox {-20 -929 1460 904} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-16 0 444 468 662 677] def
/OtherBlues [-209 -203] def
/BlueScale 0.0416667 def
/StdHW [106] def
/StdVW [74] def
/StemSnapH [66 106] def
/StemSnapV [58 74] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/F <1C60D8A8C9B606CEA8A703F21974AEFA4E1F1E47119D582DB2DD0CA7167C
23CA61E36BB177612F0E782161C69043F0D68247191BE81C8303A8262598F88C
870DD314EB6DF474A3CD3F8447DD0D185AC89A3E4C9F06D796F40F9957B8DBD6
044013E4C0C247562B269FA342DC9F250FE4CB49B9148FF28F3405ACFA446EA6
7856D8B8E1A6542E81DEAA3A01DFB4953A8652DDDE3F465FCB129D6A0209153A
578807D722AD08F976CFB69D16607105924486BC41C0C62E220457315B13E999
8EE0B43C6C8E5ACD7926E65234270403ED792920C7F3F14FB84B680406990925
F223B8A97754EFDC13FAF2DE6A98579DFEFC94EAAEAF6C261BE21D55250AAEFB
9715254328E81F8AF7B0CAC5FCEAB28179C76E2221A778B01AE55E04447D7730
B369> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/XXDFQK+txbsys /NBAAAA+txbsys findfont ct_VMDictPut
/XXDFQK+txbsys*1 
[70{/.notdef}rp /F 185{/.notdef}rp]
XXDFQK+txbsys nf
XXDFQK+txbsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.1874 182.296 mo
(F)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
17.8826 182.296 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
23.8634 182.296 mo
(R)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
29.2298 179.692 mo
(jUj\002jBj)
[1.73961 6.14399 1.39634 4.28218 1.8327 5.056 0 ]xsh
60.5426 184.927 mo
60.5426 175.576 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 182.296 mo
(\000V\000T\000F\000S)sh
78.9547 182.296 mo
(\000C\000F\000I\000B\000W\000J\000P\000S\000B\000M\000Q\000S\000F\000G\000F\000S\000F\000O\000D\000F\000G\000B\000D\000U\000P\000S\000N\000B\000U\000S\000J\000Y)
[3.60801 3.20643 3.8591 3.27811 3.565 1.94389 3.61524 2.66835 3.27812 3.68704 3.72282 2.61813 
3.20643 2.22365 3.20644 2.61098 3.20645 3.88788 3.07004 4.99249 2.22366 3.27811 3.07005 2.26666 
3.61523 4.46165 5.6667 3.27812 2.26666 2.66837 1.94388 0 ]xsh
%ADOBeginSubsetFont: JBAAAA+MinLibBol AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQG+MinLibBol dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B74E6127C443E17BB82F4D8D9A26DC5E425BA73EE0FFE7BE68
D1A1266A588125B11D73111A2DB0FB172B8217C1C00C352104A59E5071FB95DF
4285D190A9350F15B71773B901C05CA8DFAF8CB73D0CC1BB419E0975E89A213B
F99AC21FADFAAA19A09138278334> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQG+MinLibBol /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/XXDFQG+MinLibBol*1 
[98{/.notdef}rp /b 2{/.notdef}rp /e 154{/.notdef}rp]
XXDFQG+MinLibBol nf
XXDFQG+MinLibBol*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.1874 191.632 mo
(e)sh
%ADOBeginSubsetFont: IBAAAA+LibertineMathMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQF+LibertineMathMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D463 <1C60D8A8C9B765F525398CA8AFD1012F225B1F7D8E1733092B4EC10
B778437D56810D21C5D71966548B81BC62C43868B25EAC5F12271C6B5D801DCE
AFBFA6838F3AB40E4DE5BB7AC99580984E56146E02E754146077B501987D34C9
345095CDEA71339E6CA7BB488D770C2A67B0591152E69C4036867D6717E51672
29230947F8F66A64A5984AB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQF+LibertineMathMI7 /Encoding get
dup 69 /u1D463 put
pop
%ADOEndSubsetFont
/XXDFQF+LibertineMathMI7*1 
[18{/.notdef}rp /uni2113 14{/.notdef}rp /u1D43F 17{/.notdef}rp /u1D451 6{/.notdef}rp /u1D458 
9{/.notdef}rp /u1D462 /u1D463 79{/.notdef}rp /comma 106{/.notdef}rp]
XXDFQF+LibertineMathMI7 nf
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
13.5522 193.841 mo
(E)sh
%ADOBeginSubsetFont: OBAAAA+LibertineMathMI5 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /OBAAAA+LibertineMathMI5 def
/FontInfo 7 dict dup begin
/Notice (Libertine font Copyright (c) Philip Poll
Modifications are Copyright (c) 2017-2019, Michael Sharpe) def
/Weight (Regular) def
/ItalicAngle -12 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /uni2113 put
dup 68 /u1D462 put
def
/FontBBox {-342 -238 1247 786} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 0 482 487 671 684 732 736] def
/OtherBlues [-218 -218] def
/BlueShift 0 def
/StdHW [40] def
/StdVW [82] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/uni2113 <1C60D8A8C9B7361F8C4E77BB3055001317A0CF0FC810333DEE348F
1503BDB6A4E0FB2A9E0E4318093383EA05F30BD5047EE0B97FC2AC70E1CE1595
7CC2C6F1406DDF0ED984FE9377C1A7DA992D3647518233A287C897597655474C
BD4B931AF94115A99497DBAC6471423307DA07BD2B8B49D8347B28A8510D4971
FB04704A6FE2E8DA18F41CB98FE15236205E5EDA4771A565604FAC8E2D039966
4A7A> |-
/u1D462 <1C60D8A8C9B64228B65AC9EF518E0B207EA1834A8AB5A4475E8A87D
E57D8C837CBC1F0A608FFF817A22C1D1CBA334671F8254463D3E7FB5AABBEB3C
2FA147A2B0DDA3E170578854EFC846D27FBF402063C0F882D6C7D4D67056C537
5045AD24D33459576BFC18133A1E7C32EB5A504894C171B69691F030CD791F67
527A66F473B710B7AF5B3FD3A8E191E7BA016FA30CCE2079C928A669352E5377
4F69A5002D6522BC3637FBC790D13A01D200738341A4116B97675F11481738BB
0A101D742CB61592AD53B59426CE1A4E56C5B06BBBA67D33E94FF46839CCAFCC
F94D97D80FF0BE190E94F> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/XXDFQL+LibertineMathMI5 /OBAAAA+LibertineMathMI5 findfont ct_VMDictPut
/XXDFQL+LibertineMathMI5*1 
[18{/.notdef}rp /uni2113 49{/.notdef}rp /u1D462 187{/.notdef}rp]
XXDFQL+LibertineMathMI5 nf
XXDFQL+LibertineMathMI5*1 [4.3836 0 0 -4.3836 0 0 ]msf
16.3426 191.725 mo
(\022)sh
15.8666 195.016 mo
(D)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
21.9514 191.632 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
27.9322 191.632 mo
(R)sh
XXDFQI+MinLibReg*1 [5.81816 0 0 -5.81816 0 0 ]msf
32.717 189.028 mo
(1)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
35.4226 189.028 mo
(\002)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
38.8322 189.028 mo
(3)sh
60.5426 195.04 mo
60.5426 184.927 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 191.632 mo
(\000J\000U\000F\000N)sh
79.5572 191.632 mo
(\000F\000N\000C)sh
92.0383 191.632 mo
(\000F\000E\000E\000J\000O\000H\000P\000G\000J\000U\000F\000N)
[3.25667 3.62958 3.62958 1.94389 3.88789 5.37984 3.61523 4.01693 1.9439 2.26666 3.20641 0 
]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
136.103 191.632 mo
(E)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
139.483 189.028 mo
(\022)sh
138.952 193.404 mo
(D)sh
%ADOBeginSubsetFont: JBAAAA+MinLibBol AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQG+MinLibBol dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B7B07F0837E8464C11849F51032055821E2DDE8A8D00D6C2BF
0E97D2FC6E1B71514245B881AD300CB0849B17BE35FF8B4266816040A03A925D
0562ECAF0E5E7E1DDC80BFA7E4E12C328870F6E87FE80C1687E964E6A4E518B3
333B1F382578A496DF6A49D1E797AF02F23EC149DBF9E61FD3EB0DE11A03B14E
65154078E2FA0953F627815F0A76E8E4DD6C98E06A7E52D10CF45FE7F53904CA
D17121A62BDB571D829F75F5E42FC621677A5B13D4EAB245A22D9EE0D1DC9664
BFC7A1CCA891098CD8ACF83F523D0E7A9A781B441AC8CA59B0E1701DDD94366D
82A49CB2ED8170FD02FC87D6E097F7B52519092182F6074463C2298E797B660B
BDB854515E133A94BF7DD4725DCD5A920A0A73D40D858425D5EBB5C3326185D0
2055E42252528569036252AFB244E1380AF90C4263E3A5F14139BE291FBFB0B2
F381C99FB053F678DE6E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQG+MinLibBol /Encoding get
dup 112 /p put
pop
%ADOEndSubsetFont
/XXDFQG+MinLibBol*1 
[98{/.notdef}rp /b 2{/.notdef}rp /e 10{/.notdef}rp /p 143{/.notdef}rp]
XXDFQG+MinLibBol nf
XXDFQG+MinLibBol*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.1874 201.746 mo
(p)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
13.9162 202.822 mo
(\022)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
18.8914 201.746 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
24.8714 201.746 mo
(R)sh
XXDFQI+MinLibReg*1 [5.81816 0 0 -5.81816 0 0 ]msf
29.6562 199.142 mo
(1)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
32.3618 199.142 mo
(\002)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
35.7714 199.142 mo
(3)sh
60.5426 204.376 mo
60.5426 195.04 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 201.746 mo
(\000Q\000P\000T\000J\000U\000J\000P\000O\000F\000N\000C\000F\000E\000E\000J\000O\000H\000B\000U\000U\000I\000F)
[3.76585 3.61523 2.79751 1.94389 2.26666 1.94389 3.61523 5.68117 3.20643 5.66672 3.60801 3.25667 
3.62958 3.62958 1.94389 3.88789 5.37984 3.27812 4.05995 2.26666 3.8591 0 ]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
142.967 201.746 mo
(\022)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
145.979 201.746 mo
(\000\016\000U\000I)sh
156.323 201.746 mo
(\000U\000J\000N\000F)sh
171.2 201.746 mo
(\000T\000U\000F\000Q)sh
%ADOBeginSubsetFont: MBAAAA+LibertineMathBMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQJ+LibertineMathBMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D737 <1C60D8A8C9B79D2DA459377FAB1E059E1816E219882E6814AECCA26
AD92E3596DDF8E1E02AAE21F4CB009E720F6642E6182A7068DD8599937F7272A
92716C96CDB626D3212507BD79421FF9B4718020F75BF5EF894C48807170F030
D1B66AF6BC0D10ED1759EACC474AABD7616A9AAA2F23D8FD5CB74659237C9F62
B8C2A6F73780950A5806660C2E24D22A28C1194DC8A0101D2F0B82CA19BE66FD
2F8EBEB44D71572E2AAECAF030EE0410EAD51DC0BBA0BFE4D42B650E40EBAD53
9B2DD67B0A293DEDC777950EA1927AB835D9F79D7C454E71B1201E2C15825C80
0DE9EAB548D42C56144DF1F5B401A0709DCDACB9CE2B8AE93BB89D1D64A8D21E
2B57FF18AF3671F820D677FA1DE08CCA1BF87836E397B614A6FF36CF36A823C2
DA15E8975FFD2E0693595221C5F2104BF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQJ+LibertineMathBMI /Encoding get
dup 35 /u1D737 put
pop
%ADOEndSubsetFont
/XXDFQJ+LibertineMathBMI*1 
[35{/.notdef}rp /u1D737 39{/.notdef}rp /u1D46C /.notdef /u1D46E 8{/.notdef}rp /u1D477 
169{/.notdef}rp]
XXDFQJ+LibertineMathBMI nf
XXDFQJ+LibertineMathBMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.2594 214.987 mo
(#)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
14.7802 212.294 mo
(\022)sh
14.4546 216.963 mo
(D)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
20.669 214.987 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
26.6498 214.987 mo
(R)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
31.1434 212.383 mo
(3)sh
60.5426 221.911 mo
60.5426 204.376 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 210.513 mo
(\000F\000N\000C)sh
77.1614 210.513 mo
(\000F\000E\000E\000J\000O\000H\000P\000G\000U\000I\000F\000C\000F\000I\000B\000W\000J\000P\000S\000T\000F\000U\000D\000P\000S\000S\000F\000T\000Q\000P\000O\000E\000J\000O\000H\000U\000P\000U\000I\000F)
[3.25667 3.62958 3.62958 1.94389 3.88789 5.37984 3.61523 4.01693 2.26666 3.85911 4.99971 3.60801 
3.20643 3.85909 3.27814 3.565 1.94388 3.61523 4.46164 2.79752 3.20642 4.05995 3.07005 3.61523 
2.66837 2.61812 3.20642 2.79752 3.76585 3.61523 3.88788 3.62958 1.94388 3.88789 5.37984 2.26666 
5.40851 2.26666 3.85912 0 ]xsh
64.6874 219.28 mo
(\000J\000O\000U\000F\000S\000B\000D\000U\000J\000P\000O)sh
98.5085 219.28 mo
(\000U\000F\000S\000N)sh
114.11 219.28 mo
(\000P\000G\000V\000T\000F\000S\000T\000F\000R\000V\000F\000O\000D\000F)
[3.61524 4.01693 3.80896 2.79753 3.20642 4.46164 2.79752 3.25665 3.60812 3.80898 3.20644 3.88788 
3.07005 0 ]xsh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
164.659 219.28 mo
(S)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
169.001 220.356 mo
(D)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
174.872 219.28 mo
(\000B\000U\000U\000I\000F)
[3.27814 4.05994 2.26666 3.8591 0 ]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
193.307 219.28 mo
(\022)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
196.32 219.28 mo
(\000\016\000U\000I)sh
206.657 219.28 mo
(\000U\000J\000N\000F)sh
221.534 219.28 mo
(\000T\000U\000F\000Q)sh
%ADOBeginSubsetFont: MBAAAA+LibertineMathBMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQJ+LibertineMathBMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D469 <1C60D8A8C9B667F6547CF873065D85393347B56681ABCAA867D86CD
0C34A4B173700B6DC1DDC2C1F33B3D7BED53E930D2974073F91CD57A43C0A693
5DD447A4A4C3CA670A90495874693119671A145604D0B8172C4223D16A93F087
4BCE38082C12F1A558218195CF45452185254C6648CECE6D4CD1160322746D87
BC43D56EF89517EA66739743E9AB77DBC21713E3014BD4445FB780C31EE9B6B9
38B7019AF2BF4140AAC4D9E105058ADFC781AF1817DD116BBB853B6EE74E2BC6
B7666A42E9243A61900C636C6A355F571C74E6EDE4B560090971FB500E5C5F73
25AEA1D72CC99152909671848EB06361858B4A686> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQJ+LibertineMathBMI /Encoding get
dup 72 /u1D469 put
pop
%ADOEndSubsetFont
/XXDFQJ+LibertineMathBMI*1 
[35{/.notdef}rp /u1D737 36{/.notdef}rp /u1D469 2{/.notdef}rp /u1D46C /.notdef /u1D46E 
8{/.notdef}rp /u1D477 169{/.notdef}rp]
XXDFQJ+LibertineMathBMI nf
XXDFQJ+LibertineMathBMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.1874 232.521 mo
(H)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
17.0938 232.521 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
23.0746 232.521 mo
(R)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
27.7714 229.917 mo
(!)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
31.1954 229.917 mo
(\002)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
34.605 229.917 mo
(3)sh
60.5426 239.444 mo
60.5426 221.911 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 228.047 mo
(\000U\000I\000F)sh
75.8056 228.047 mo
(\000N\000B\000U\000S\000J\000Y)sh
96.9375 228.047 mo
(\000G\000P\000S\000N)sh
112.905 228.047 mo
(\000P\000G\000C\000F\000I\000B\000W\000J\000P\000S\000T\000F\000U\000F\000N\000C\000F\000E\000E\000J\000O\000H\000T\000G\000P\000S\000U\000I\000F\000X\000I\000P\000M\000F)
[3.61524 4.01693 3.60801 3.20643 3.85909 3.27814 3.56499 1.94389 3.61523 4.46164 2.79752 3.20642 
4.05995 3.20642 5.66673 3.608 3.25667 3.62958 3.62958 1.94388 3.88789 3.58656 4.59077 2.22366 
3.61523 4.46164 2.26666 3.8591 4.99971 5.35828 3.8591 3.61523 1.89375 0 ]xsh
64.6874 236.815 mo
(\000V\000T\000F\000S)sh
78.9547 236.815 mo
(\000T\000F\000R\000V\000F\000O\000D\000F)
[2.79752 3.25666 3.60812 3.80897 3.20643 3.88788 3.07006 0 ]xsh
%ADOBeginSubsetFont: GBAAAA+txmiaX AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQD+txmiaX dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D505 <1C60D8A8C9B6A6CAD0938D65737C5D86F3F4035D9E52E966EF7F338
A7771C4F1299FA3189116E31670C7ACE6D272668AD31A46185D0DD25383AE99D
B90B3763A6F2A8EFB443DBCDA8DFF01B5E34DE0F6661AE0A82FA49A329A975EB
FE8EC35DA58F1189CE6D5D159AE53BB7B8F54D0FE0E2FF48308E474A6D1B35C3
1262AE67E7B7316A77ABBB8BDC9AD6AC551F0F577045DC5037BB69984F2EDBB3
2660F4B0607AD9DCE069F328FE0D0ABE0DD302C2FEDFC7D591D2171C5254725A
965BFE5D5436AB2AE5C6BED40FF3631905AFE3766959D4E932E0B90F6FB0A305
FF4FB01A34BFCE50CC3EC3A323D8EFB8FE84E0BCF0E33759A1223D17E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQD+txmiaX /Encoding get
dup 66 /u1D505 put
pop
%ADOEndSubsetFont
/XXDFQD+txmiaX*1 
[61{/.notdef}rp /equal 4{/.notdef}rp /u1D505 189{/.notdef}rp]
XXDFQD+txmiaX nf
XXDFQD+txmiaX*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.1874 250.055 mo
(B)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
18.241 250.055 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
24.2218 250.055 mo
(R)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
28.9194 247.451 mo
(!)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
32.3434 247.451 mo
(\002jBj)
[4.27636 1.8327 5.056 0 ]xsh
60.5426 256.979 mo
60.5426 239.444 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 245.582 mo
(\000U\000I\000F)sh
75.8056 245.582 mo
(\000N\000B\000U\000S\000J\000Y)sh
96.9375 245.582 mo
(\000G\000P\000S\000N)sh
112.905 245.582 mo
(\000P\000G\000C\000F\000I\000B\000W\000J\000P\000S\000T\000F\000U\000N\000V\000M\000U\000J\000\016\000I\000P\000U\000W\000F\000D\000U\000P\000S\000T\000G\000P\000S\000U\000I\000F)
[3.61524 4.01693 3.60801 3.20643 3.85909 3.27814 3.56499 1.94389 3.61523 4.46164 2.79752 3.20642 
4.05995 5.66672 3.80898 1.89374 2.26668 1.94389 2.4245 3.85909 3.61523 4.05995 3.51476 3.24944 
3.07007 2.26666 3.61523 2.66835 4.59081 2.22363 3.61523 4.46165 2.26666 3.8591 0 ]xsh
64.6874 254.349 mo
(\000X\000I\000P\000M\000F)sh
84.4063 254.349 mo
(\000V\000T\000F\000S)sh
98.6808 254.349 mo
(\000T\000F\000R\000V\000F\000O\000D\000F)
[2.79751 3.25668 3.60812 3.80897 3.20642 3.88789 3.07005 0 ]xsh
6.20259 257.139 mo
251.887 257.139 li
@
%ADOBeginSubsetFont: HBAAAA+LibertineMathMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQE+LibertineMathMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D6FC <1C60D8A8C9B7B14C11B43FF9E81952C6422721DB42FE7866A2E182E
008FCA871987FB6D180338370629F4FED83C5F27FE639F2951E9B497024D5C38
FDA86288ABC73E9EA8329BB595E06806C08ABAB70DBEBDCF340B6C15ED2C6670
3A76BAFAF4DCDDF5269F43699BE57C0B7BFC522CC72AC6296B207C51B25DF9D7
E368D7DD89FE668469FBB54E584C97C9422049588C7816E4C6F1B2E6A04C70FE
D117E384F9A69E8B2C692037F9900F2BDB1334ABE4050E078C287A03CF632119
D7530A54098957F95> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQE+LibertineMathMI /Encoding get
dup 85 /u1D6FC put
pop
%ADOEndSubsetFont
/XXDFQE+LibertineMathMI*1 
[18{/.notdef}rp /uni2113 14{/.notdef}rp /u1D43F 15{/.notdef}rp /u1D44F /.notdef /u1D451 
6{/.notdef}rp /u1D458 9{/.notdef}rp /u1D462 /u1D463 15{/.notdef}rp /u1D6FC 63{/.notdef}rp 
/comma 106{/.notdef}rp]
XXDFQE+LibertineMathMI nf
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.0082 263.435 mo
(U)sh
60.5426 266.065 mo
60.5426 257.298 li
@
%ADOBeginSubsetFont: GAAAAA+LinLibertineO-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GAAAAA+LinLibertineO-Identity-H 2 GetGlyphDirectory
49 <001C60D8A8C9B79EE332E43A2145079745F3E0E5D00BAC8A9E202E14CB14
06FD677AD1CE0FB6C0EB12F08A488D5ECA9935E74045388F6BAB67A59416BC52
03C29A816C952531554078993265CCE411D4FA664D37E1A3704A5813F5440948
170B914C65D7AB369432EA48B3002733C7F221D0AFA1B6C26F176F1C0B97C63E
25FD08D126F49C974EA670028E7F362F884141AD1E2BD11B4846D8F85E0E6827
3B6ADFDDA4EEC9C0E8378677C02E2E015B1E00C1AA4D9432D8A75B1189BC6D68
2E> |
52 <001C60D8A8C9B756EDDCFE5FA8BC64FB91575AD408591078D9DCF7683DF2
BD63DAFB104284499B66E3FD0EE87CB776003AB1AC7EFAED67C8A4B4502096A4
95736F511DA72909E444F04BB3CD675BF033B5F4F1DED54F1723D7C5D0539FCB
949387518E4EC3E9A990C068BA7329D1E14413A5B7D6251BC8097B46A4717D48
43BBF21390480B78239CD4DD1919C34A9C669F2ECF67CA0353AAAB1C0041208E
47373243F99992850F9FACD6B3F571DDDBB85557758F874B6FFB8DBA131628AA
5CBA3C7392262892F2A82B7F7F4D6AC595FBC39D282B39190F5CD33820C2B2DD
36A096D9BC18BFF25CE8E661720F2BD9D8FFA81FE0512CF98F92F9E91911724F
98A445BE54EB4D5F4056BA423E99AECEF82BB3A527A910296C25A90D75C5861C
8D6142075B90E466C353F0BCC358704948168E81881842811CE4773D885ECE19
0EA198AB887CA29D58F855FC7C5242E3ADCCA7462FB79129419644DB4A0186FF
14B5A33AFA> |
!
end
end end
%ADOEndSubsetFont
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 263.435 mo
(\000U\000I\000F)sh
75.8056 263.435 mo
(\000T\000B\000N\000Q\000M\000J\000O\000H)sh
104.376 263.435 mo
(\000D\000P\000O\000T\000U\000B\000O\000U)sh
131.24 263.435 mo
(\000J\000O\0001\0004\000")
[1.94388 5.68115 3.88068 3.47897 0 ]xsh
%ADOBeginSubsetFont: HBAAAA+LibertineMathMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQE+LibertineMathMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D436 <1C60D8A8C9B7D3A6039CAB76B6A33875E7D67A73481A79B2DD143C8
71EF09C1CE70B9152E81507A16BB5492FBC364E5038FD016359DA46536B41749
44C126FE8E68920D7143833383748F327784E48D4F2B5E9069CC2E8E8F2BD8B9
1904CC32B04A745987B325B63A1B6DC30A70178FCA9DB742987F2761C9B75BF5
A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQE+LibertineMathMI /Encoding get
dup 24 /u1D436 put
pop
%ADOEndSubsetFont
/XXDFQE+LibertineMathMI*1 
[18{/.notdef}rp /uni2113 5{/.notdef}rp /u1D436 8{/.notdef}rp /u1D43F 15{/.notdef}rp /u1D44F 
/.notdef /u1D451 6{/.notdef}rp /u1D458 9{/.notdef}rp /u1D462 /u1D463 15{/.notdef}rp 
/u1D6FC 63{/.notdef}rp /comma 106{/.notdef}rp]
XXDFQE+LibertineMathMI nf
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
9.75699 272.202 mo
(\030)sh
60.5426 274.832 mo
60.5426 266.065 li
@
%ADOBeginSubsetFont: GAAAAA+LinLibertineO-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GAAAAA+LinLibertineO-Identity-H 3 GetGlyphDirectory
45 <001C60D8A8C9B78B91ADCDFE651D774FC096B3CE413744C433DF68282B45
D0751466B83C9A30331431B6E357DD52CC6955AF01AD499D34530EB4268FBE1B
34E9D5D06FA7A0190E8A91CC90700268963B49F9C2C65F7C0F2B447D3D8214AB
F19F091A30B39D5E71A142F60BCEB0FF61DCE6F02B90B9AA9E623C3999478070
2DDCDF4944CF2BD6F5A3BE807EE504709513CE43DAF4136B93789333FCE19276
5C7F2EB9745E800204576B3174B2A245E0DF6C69A8F5F038F0DE7106FCF93306
6FD6B939B3AD26E4676F9E47CB5643C808C315AF97B3D984E71E3C931CB3F185
7AC8813A3DC6468FB142848A94> |
46 <001C60D8A8C9B6BAE577E979693CB34EE221A5F6640C24FD1BDB89D0657C
9D94527B932F407767F7FA03A90BD8349B10DAE492D04158CC0D594896179544
C9324A8F7787B24F9556832E4BEB504A1391BC5F0D9ED7A28686302AF7E8C0C6
C5866BED4FF2668FC9CC537CC9507A5A79CDB169D9A32B6B66C19873EA1A37A0
B0B68305F300EC1C6A61203E5246884E6C3634EA7EE139AEE0CA1BC338FF2E4E
816BD42CC1C941FB54AAC1A17539721F9DCAC9162ACC8CEC5E1BFEC6947AC223
8DFFCB5595BD4F86ED4C2BEA3137058FCD237ACC2E84FC86D51E190F7F6F165C
5DA8DDB416294BC1E55BA1EA5D4D0580CD37CAE83F27E0933448A1903AFAA12E
BDF103A0591850D060F8E4DFFD05EC184A339A025667FBC8B840FA6EAFECC545
DD52E99FF29999435CE9F617C830CB998AD78871> |
35 <001C60D8A8C9B7CF7CB251CDB4F1A55FCF286EF7312672A3DF23376CE0E2
05F6C92B237ABE01B2AC1B28445EC724DBCC290D38F0D8C3A82DE1011DE9E4AB
F1C40C89527C4E35E6FA432F5C3AA96B82FA3D19B044859FE2571FAFEA8016C7
C86062DE0A88A8A6C3799E8AA51C170BA473CF7B09A239ACF6DF270011F3710E
B36C820CE0693349CD5570CDA4F84710992965DC9E03C9200B8048D35F10330F
3C6467794A1655817F363B8E0D4F4E5F359B537731BCFD3B30D8FC9A33380C2D
744227E6D83D08E2BBE9D58E2DC207437B5A8A6B5E3B27C928E10BC8E7360AF7
B4E10C1046551491EA68033296567391DBC66ED48B46FF6CD73000> |
!
end
end end
%ADOEndSubsetFont
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 272.202 mo
(\000U\000I\000F)sh
75.8056 272.202 mo
(\000U\000P\000U\000B\000M)sh
90.9194 272.202 mo
(\000O\000V\000N\000C)sh
107.891 272.202 mo
(\000F\000S\000P\000G\000C\000M\000P\000D\000L\000T\000P\000G\000-\000\016\000.\0004\000"\000#)
[3.20642 4.46165 3.61523 4.01693 3.53632 1.89377 3.66547 3.07004 3.67261 4.59079 3.61523 4.01694 
3.7874 2.4245 6.01828 3.47896 4.98538 0 ]xsh
%ADOBeginSubsetFont: HBAAAA+LibertineMathMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQE+LibertineMathMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D43B <1C60D8A8C9B654A486501AC66ED76492B1A249ACF3C057330CF1D6D
01D819E6446A311571B6937CE092BC4E41EBB9E32E4EAA01AC22EB15360F18A9
66744E8795E4956DCE336E3A7CFDA8E0F15EA3B9BB3154D0CCB0AA6773A7B2DA
52C5AE87DAC8650E8FDA7BB35E2E95473008B4864DF7822E850B1858DB701C74
7EF55485006830A6BAAC82FCED891F8F9E6C7C89A0DBF5BE10F1F8FF223CF567
973183647967F741B0D5EA78FC8A79D850C7B2A20FEEFBF6AA2F29F06FA44168
4742AB2257B2FAD002847BDA8A09391E409343E47553255D7C08D6F94BED2138
40837CE9417D76D725E31372CE5FF78914C2F464BA97FE1F12B03BDA3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQE+LibertineMathMI /Encoding get
dup 29 /u1D43B put
pop
%ADOEndSubsetFont
/XXDFQE+LibertineMathMI*1 
[18{/.notdef}rp /uni2113 5{/.notdef}rp /u1D436 4{/.notdef}rp /u1D43B 3{/.notdef}rp /u1D43F 
15{/.notdef}rp /u1D44F /.notdef /u1D451 6{/.notdef}rp /u1D458 9{/.notdef}rp /u1D462 
/u1D463 15{/.notdef}rp /u1D6FC 63{/.notdef}rp /comma 106{/.notdef}rp]
XXDFQE+LibertineMathMI nf
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.0442 280.969 mo
(\035)sh
60.5426 283.599 mo
60.5426 274.832 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 280.969 mo
(\000U\000I\000F)sh
75.8056 280.969 mo
(\000U\000P\000U\000B\000M)sh
90.9194 280.969 mo
(\000O\000V\000N\000C)sh
107.891 280.969 mo
(\000F\000S\000P\000G\000I\000F\000B\000E\000T\000J\000O\0001\0004\000"\000N\000F\000D\000I\000B\000O\000J\000T\000N)
[3.20642 4.46165 3.61523 4.01693 3.85909 3.20643 3.27814 3.62955 4.59081 1.94389 5.68115 3.88068 
3.47896 6.77866 5.6667 3.25668 3.07004 3.8591 3.27812 3.88789 1.94388 2.79752 0 ]xsh
%ADOBeginSubsetFont: PBAAAA+NewTXMI Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+NewTXMI def
/FontInfo 7 dict dup begin
/Notice (Derived from TX fonts and GNUFreeFont, GNU 3.0
Modifications are Copyright (c) 2017-2019, Michael Sharpe) def
/Weight (Regular) def
/ItalicAngle -15 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 162 /uni2605 put
def
/FontBBox {-342 -214 906 786} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 0 482 487 671 684 732 736] def
/OtherBlues [-218 -218] def
/BlueShift 0 def
/StdHW [40] def
/StdVW [82] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/uni2605 <1C60D8A8C9B6557A322C056943F8D50532F9E7B425942DC7C47ABC
5FF79B559A6933A3C35CE6E34DB17140AE748BF07A69888B1A1FA24EEA9AF845
FC5F32B3> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/XXDFQM+NewTXMI /PBAAAA+NewTXMI findfont ct_VMDictPut
/XXDFQM+NewTXMI*1 
[162{/.notdef}rp /uni2605 93{/.notdef}rp]
XXDFQM+NewTXMI nf
XXDFQM+NewTXMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
9.9082 289.826 mo
(\242)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
16.577 289.826 mo
(2f\271)
[6.1545 3.4861 0 ]xsh
%ADOBeginSubsetFont: HBAAAA+LibertineMathMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQE+LibertineMathMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D456 <1C60D8A8C9B85677F50A7E2FF3E278E8A78A284FDD5F586E90B8D8A
48B85BD9A859F61C3E7D8CB9CB9520D62E5209C8C1DA481011470B057F4BCB50
0C2549CB6915FD61EEDEC0451CE754BD7B7A4CB0B04F695DCC1643CF63774694
ECFAF2C83CF023B00018C234AC95E5FFDB8251289D36AACD5DBF2DB3DC558963
2098418D75C1AE48B205171D653E74EB3977050785A4E24> |-
/u1D45D <1C60D8A8C9B752AB3DF4C508ED12BFEAE515ADC9E71A123CFAC64AC
1F2B30FB576B9D6C2D77C030245C571A095A8B2B90DE4FCF8C6E570714C2E2E7
2568D79EC60A8900658D583AE7C3EC6A14530C3137311B167C209581E9933244
CC749E51FC59B87F08722DD4BC5E2A1AE335524F764BEDE2F87E6F4D56B34465
ADBFFFFB177EAC5835F67175E45F835C244B37BB05E868C1EDEF3AC14A5E3D50
517BFD29CC68063278D465458715654145B04F1264C5361A7D7FFC2D0D984588
8C8A45BAC6FA61E31626A50384E4BAD161E802C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQE+LibertineMathMI /Encoding get
dup 56 /u1D456 put
dup 63 /u1D45D put
pop
%ADOEndSubsetFont
/XXDFQE+LibertineMathMI*1 
[18{/.notdef}rp /uni2113 5{/.notdef}rp /u1D436 4{/.notdef}rp /u1D43B 3{/.notdef}rp /u1D43F 
15{/.notdef}rp /u1D44F /.notdef /u1D451 4{/.notdef}rp /u1D456 /.notdef /u1D458 
4{/.notdef}rp /u1D45D 4{/.notdef}rp /u1D462 /u1D463 15{/.notdef}rp /u1D6FC 63{/.notdef}rp 
/comma 106{/.notdef}rp]
XXDFQE+LibertineMathMI nf
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
28.6122 289.826 mo
(81)
[2.09456 0 ]xsh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
34.573 289.826 mo
(\272)sh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
37.105 289.826 mo
(\225)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
40.309 289.826 mo
(\271)sh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
42.841 289.826 mo
(?1)
[3.63676 0 ]xsh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
50.3442 289.826 mo
(\272g)
[2.91941 0 ]xsh
60.5426 292.456 mo
60.5426 283.599 li
@
%ADOBeginSubsetFont: GAAAAA+LinLibertineO-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GAAAAA+LinLibertineO-Identity-H 1 GetGlyphDirectory
2646 <001C60D8A8C9B7F51B6699E1A7352D6AE3586A9674814247C941EB6B9B
57CB6873A0C9465FDF328F5FEC335F2640C79BFAFA1E4A70CA868EFF78CE414C
A0AA76CAD082EBE01EAD056F689E484DCF6D8509239E9066C20CE4E93CAD75A4
9F170FDB5953DE981D16F2D00C9B5D907332ACEA42EE2814D10CC4C8B2A17B2B
7E55530EB7DDF34587CEB4B07B478D1FD31FAB7DA3ED415BA206718E77FC9F4B
20E6F4C2E42167989CE76CB86C1A6EA254D942B63C9F54E28FEA8265DEBB0E91
424C2B1EA59FCA29E4FB8893071ADC03D749A00FC07C85686C7EF274F521907E
2BDD3135AAE397063C3CC9EEFD5CCF60E8EFCD484715CC899D5FF2CE3CCDCADD
16CEB172C096495FEB44D5B02DD8CB811FF8AB2FEAC94A334037AA07965F0A8C
F22EF278A49074C1E9D7E452E0E56DB0317A76271B38F35E871F1ADF93E354FC
64DB4DE5C4F71B9C8C2F70F33A057DD6416911A352BCB7C0220A899BF47F2C8E
68AC2A64A2CFF2E865CEC4528F77CB2B355DFB5930DD3AD34C76> |
!
end
end end
%ADOEndSubsetFont
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 289.736 mo
(\000V\000T\000F)sh
74.5433 289.736 mo
(\000E\000U\000P\000E\000J\000T\000U\000J\000O\000H\000V\000J\000T\000I\000S\000F\000Q\000S\000F\000T\000F\000O\000U\000B\000U\000J\000P\000O\000T\000G\000S\000P\000N\000E\000J\012V\000F\000S\000F\000O\000U\000Q\000F\000S\000T\000Q\000F\000D\000U\000J\000W\000F\000T)
[5.42286 2.26666 5.40852 3.62958 1.94388 2.79752 2.26666 1.94389 3.88789 3.58656 3.80897 1.94389 
2.79751 5.65238 2.61812 3.20643 3.72282 2.61102 3.20642 2.79752 3.20642 3.88789 2.26666 3.27812 
2.26666 1.94388 3.61523 3.88789 4.58357 2.22365 2.61812 3.61523 7.45277 3.62956 1.94391 4.17474 
3.20644 2.61812 3.20644 3.88788 4.05272 3.77307 3.20644 2.66835 2.79752 3.77307 3.25667 3.07004 
2.26668 1.94389 3.51476 3.20642 0 ]xsh
%ADOBeginSubsetFont: QBAAAA+txexs Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /QBAAAA+txexs def
/FontInfo 7 dict dup begin
/Notice (Version 3.0, GPL) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /tildewide put
def
/FontBBox {-5 -2960 2900 1444} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-587 -586 888 893] def
/BlueScale 0.2 def
/StdHW [0] def
/StdVW [0] def
/StemSnapH [0] def
/StemSnapV [0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/tildewide <1C60D8A8C9B64FADB44DD73E2B3573D5E4FBDB739FE9363704CC
D85421F6DC7C49CB6CDF3E6EF0EE172FFDD46BB617E074B96AE0C47B95880A69
81AEF77AB810EEDCE557CC9C86DB403C0276AAC0A825A899DCB3856B24F3128A
5D327CF83C2BFEEDDF52> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/XXDFQN+txexs /QBAAAA+txexs findfont ct_VMDictPut
/XXDFQN+txexs*1 
[101{/.notdef}rp /tildewide 154{/.notdef}rp]
XXDFQN+txexs nf
XXDFQN+txexs*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.6146 297.788 mo
(e)sh
%ADOBeginSubsetFont: MBAAAA+LibertineMathBMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQJ+LibertineMathBMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D47F <1C60D8A8C9B62B94E77DC0D6003604DE20227A3E929A37F246CE964
9404FF36BEA5F494622F93D30F534627F62D23BDCB1725196BA2273AD5E992EC
CF87895F28114C6946D99CA5F38FAB68EC77FC57D8BCA0A56DF327C7A8779168
B82791A2CC8EF02DDAA5379E07E71ED9EA58CF76DA40C813AE15B7D48D0421CF
904B8430173ECC350F50CD95CB7588DC35476E495B1D45E9EB1FD5C20FB9EE06
77961EBF41D41FFFC087B58B99F7720E36CE134AB074B42C2E9B00835F9BD339
F7F0BE8933C3695A57C3BC3F9CF71E2B621F657B40801C61235B2C675899F1A8
51BB5270FB92640D4F22155FEE8B9FAD839C53C0D395295FE04899135F96601B
222080176F9AE61AA8FF0051D58A4FFDDB01DE31992E0E2CA28D4DE0973A49C1
129DCEA400971840C4818AA0A3511CE45> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQJ+LibertineMathBMI /Encoding get
dup 94 /u1D47F put
pop
%ADOEndSubsetFont
/XXDFQJ+LibertineMathBMI*1 
[35{/.notdef}rp /u1D737 36{/.notdef}rp /u1D469 2{/.notdef}rp /u1D46C /.notdef /u1D46E 
8{/.notdef}rp /u1D477 7{/.notdef}rp /u1D47F 161{/.notdef}rp]
XXDFQJ+LibertineMathBMI nf
XXDFQJ+LibertineMathBMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.1162 299.162 mo
(^)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
17.9546 299.162 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
23.9354 299.162 mo
(R)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
28.6322 296.558 mo
(!)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
32.0562 296.558 mo
(\002)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
35.4658 296.558 mo
(3)sh
60.5426 301.792 mo
60.5426 292.456 li
@
%ADOBeginSubsetFont: GAAAAA+LinLibertineO-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GAAAAA+LinLibertineO-Identity-H 2 GetGlyphDirectory
37 <001C60D8A8C9B630AC42C06F0121B6448791961BC956EE75D34960037F9F
95512D8DEAD91853AA4AFE6E36B6E1A3848808A091E55077BC5E3F014BF2974D
4738E1A00501F7889116BA4887625C40F8756DD1D32C5C406FDB280D6615DBDC
00428E729844F8F2CC5F9BBADCCFB75755A16F43D02E1141164F3C934D886169
88AFC576DFF4A7E2CDD1E04ED2ED3F4D5947F3851333ABE6DF6550F204> |
36 <001C60D8A8C9B67B16951E84EFA7CA9F93B441266FEA1C916FDE65CA4572
22E64FA5FE34408BC02B7E61B86A4A0207D12CD945A0B7DC2777DC178DC9551A
5C9FA97445F9581E3312AD8BC9B390753A5AEF00390EAB6780202AEF1CB62900
21FC972C977052B1E4721EC3BB1640CE3CCA00D7B1B6137CC803441E7C18C7B3
EDCB172A81B887567FEE471EDC37ECA351D20D809B70289E901B2B8D02E58200
0118F9E89F474DC487241F79B33DE5B8E73412861C88E396A2B81B7060545D7F
4C09490BE333C2> |
!
end
end end
%ADOEndSubsetFont
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 299.162 mo
(\000U\000I\000F)sh
75.8056 299.162 mo
(\000P\000V\000U\000Q\000V\000U)sh
97.0883 299.162 mo
(\000S\000F\000Q\000S\000F\000T\000F\000O\000U\000B\000U\000J\000P\000O\000T\000G\000S\000P\000N\000U\000I\000F\000%\000$\000#\000"\000M\000B\000Z\000F\000S)
[2.61811 3.20644 3.72282 2.61101 3.20643 2.79752 3.20642 3.88789 2.26666 3.27811 2.26666 1.94389 
3.61523 3.88789 4.58356 2.22366 2.6181 3.61523 7.45279 2.26666 3.8591 4.99969 5.02838 4.63382 
4.21777 6.77866 1.89375 3.27812 3.64392 3.20642 0 ]xsh
%ADOBeginSubsetFont: MBAAAA+LibertineMathBMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQJ+LibertineMathBMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D46F <1C60D8A8C9B600E04CD419A49E663AFE13B063B39BA516518FA82DD
0817FF69BD973A182E4B28D9E982C95557BD5D60860652816C47EBF84739C8F2
B88770356CE7F5F8D1E00C41A8E538BFC1E8599860A67279BC69E4A7DD8E5978
25219C7EB6F9D9E124B89B07B221895994511B1D3C0E85335142AA42EBF5DB2B
E485BDD1302DD3D87309AFD2EE11E25619CE534A35C877A9E615082F0A387ED7
EF320DA1DD719DB16DFFBB2A1DA19C870A7B881CA3CCF149C46D985CE1B4B323
71DDD33044E32052A4EAF48BB30DFC32C7E41BE71028C6C61209BB17C1B133BD
992156B9F21ADC89B473852FFD77E36BED6C5C903AAE19561CDA19A984D69EB4
3380F519A6CCD2198E4DF864F43B100DF990318A36ECA7A0C2A179E6AF61E1E8
34E8EB01938D2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQJ+LibertineMathBMI /Encoding get
dup 78 /u1D46F put
pop
%ADOEndSubsetFont
/XXDFQJ+LibertineMathBMI*1 
[35{/.notdef}rp /u1D737 36{/.notdef}rp /u1D469 2{/.notdef}rp /u1D46C /.notdef /u1D46E 
/u1D46F 7{/.notdef}rp /u1D477 7{/.notdef}rp /u1D47F 161{/.notdef}rp]
XXDFQJ+LibertineMathBMI nf
XXDFQJ+LibertineMathBMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.3314 308.215 mo
(N)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
18.4746 308.215 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
24.4554 308.215 mo
(R)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
29.1522 305.611 mo
(!)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
32.5762 305.611 mo
(\002)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
36.1898 305.611 mo
(!)sh
60.5426 310.846 mo
60.5426 301.792 li
@
%ADOBeginSubsetFont: GAAAAA+LinLibertineO-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GAAAAA+LinLibertineO-Identity-H 2 GetGlyphDirectory
41 <001C60D8A8C9B60F082FF066052C1D148E7DE59596040EA09D7CE5D9BDE0
B269A0258B6353CE99BB62838D283B7E9FF9559FED061D85147207FD5540775C
C41AECF3CFCCD5EA2146AFDBBEFF0C6DC0B2104227A1094A6A541F924CD00BBA
2AB5D9CF41A1CE2693C1A44910B7EC41F4FA01E71F6B73D912B8B488868A2D1A
0270827C884BDF050F1983D994BB30C7DB8B9D5BEA3F173D9EAB6BAE30500E2D
D2889D4052D47BEFC2C6B82F438B0F9EC82072F620D114AC5787F57AA60A56BB
1D908613A85656382E6F7DC86FEA4D8EFDBC9BD6E2905334912A96902276DC15
FB1C1C4062990EF0E9401D48B621A392ADD470E86350157349ED46D1AE847D8B
DDF89F54BBC8C3A1E4EEFAF2> |
2386 <001C60D8A8C9B7D545014113F5B5DA8E43D8905DBA59CCD4C2332787C5
7FBF098008076165E242DF45B50E4A65E87E901DA49AD71CF71CB87D07CDA286
A73E30D7783A880C1B1B6DB133D88056BFB967BCDAA93F8AC131D4242215D55D
E3943C3D8D281A7F0233C6A0190A6C939E4C08CDA199EF8A876819621ED33695
B2F8301247CD795193C66A02AEE32A7A3956C7AD0530349979A1A769A0BA2654
F7F6A1B0F347C674A613CC5D989A4568A54457257C0998F025F14E43D008AD27
46029C2406C4C8F033E6F49D8C27015AF8A85671E796BDCB8DC0C213F672E3E2
B971B9E940EE2170B9036208F2940AABBDDB3D5E437BC5F83E28E25A065467B3
0F02D3E0FD8AA86039A9C6618A93E4F46806457751E28B5369D8A0BD5C371EB1
7D5289C0086F83EF8E5A5F0AE8D5514FA2> |
!
end
end end
%ADOEndSubsetFont
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 308.215 mo
(\000\)\000B\000N\000N\000J\000O\000H)sh
95.7397 308.215 mo
(\000E\000J\000T\000U\000B\000O\000D\000F)sh
121.613 308.215 mo
(\000B\011R\000F\000O\000U\000J\000P\000O)sh
149.897 308.215 mo
(\000X\000F\000J\000H\000I\000U\000N\000B\000U\000S\000J\000Y)
[5.30803 3.20644 1.94388 3.58656 3.8591 4.05272 5.66672 3.27812 2.26666 2.66835 1.94389 0 
]xsh
%ADOBeginSubsetFont: MBAAAA+LibertineMathBMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQJ+LibertineMathBMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D474 <1C60D8A8C9B6BFFDD12D5714B9A6348F17C52E6782A27A7C8F13AD9
8278A4158845EF6FB94300A9C4E2AED3E39C18F348038992FC6B3BC742B791AA
D8F525898CEE09E0BDF94AD359E92EAC45329B7904A2DE53C12DED16838B025E
8E676ACEA606730508426EE73FECBF28CC154D66B1DF1ED88CBA5305A6293F4D
509277DE26A84D5457EC7B942F8EDB606DDF983588E8A7AEE89FB71361FE1440
EA48A5D5850783D873C65B6C8BDCC71BCFD8120485AEACA5EDC341E3947B11AE
FA622DE521971F3985D40D63EF15349693B5FE1F6EA4223D985ED2C970CB9B57
0385B3A00A0208DECFCF62C87916C7A4942B263A58AC8CA8CDA1CCA30197611D
3E356909A81CD8401CDE004EF40BA442ADB07029C03E2B1CF317D0FB237E8152
C3FC977E6A2A2A654885232A79479E9FEC99D99201790F416248A689A046798B
7C3D597C6FA1C5ABB485ED4FDFE59B93EA2861E00D73EC286> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQJ+LibertineMathBMI /Encoding get
dup 83 /u1D474 put
pop
%ADOEndSubsetFont
/XXDFQJ+LibertineMathBMI*1 
[35{/.notdef}rp /u1D737 36{/.notdef}rp /u1D469 2{/.notdef}rp /u1D46C /.notdef /u1D46E 
/u1D46F 4{/.notdef}rp /u1D474 2{/.notdef}rp /u1D477 7{/.notdef}rp /u1D47F 161{/.notdef}rp]
XXDFQJ+LibertineMathBMI nf
XXDFQJ+LibertineMathBMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.2594 317.566 mo
(S)sh
%ADOBeginSubsetFont: IBAAAA+LibertineMathMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQF+LibertineMathMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D460 <1C60D8A8C9B70B6BCC9431B6909B572540082CCF7D49B99BA9CD2AB
E47FECC753F6BD0A3DCD07A6FB0924C089B429ED9620A1E3E38C3D1C8F05BCCE
AA98DDB96785A860C791D41CAD661CC8FD347C0BC9C91A88D064D980049D3183
73601EEA44CEC1163D63971B7DE394F8C7E2A432C0F31A78EFE7E31AB396F3C9
96EFDE0235692E5D79D350D43611B6C2E40AD7DFD991AE7638450305696A0A18
04EEA83C7E2B7B9A70C68BEF53C5B1B2188F61F7985A06D75> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQF+LibertineMathMI7 /Encoding get
dup 66 /u1D460 put
pop
%ADOEndSubsetFont
/XXDFQF+LibertineMathMI7*1 
[18{/.notdef}rp /uni2113 14{/.notdef}rp /u1D43F 17{/.notdef}rp /u1D451 6{/.notdef}rp /u1D458 
7{/.notdef}rp /u1D460 /.notdef /u1D462 /u1D463 79{/.notdef}rp /comma 106{/.notdef}rp]
XXDFQF+LibertineMathMI7 nf
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
16.6474 314.962 mo
(B)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
21.9306 317.566 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
27.9114 317.566 mo
(R)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
32.609 314.962 mo
(!)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
36.033 314.962 mo
(\002jBj)
[4.27635 1.8327 5.056 0 ]xsh
60.5426 320.196 mo
60.5426 310.846 li
@
%ADOBeginSubsetFont: GAAAAA+LinLibertineO-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GAAAAA+LinLibertineO-Identity-H 3 GetGlyphDirectory
54 <001C60D8A8C9B648F6706CE6546D87FAFF90B68C7D96E36929EE816DB921
C95B580F2ECFAE67928D2B56BC67A722F6D3D6675012ADE24005D3DF37B9A82E
BCB5B800AE81CBF41BB4CDC36571C88ADBC550CC0B9E5B3D8669A0A70C4D96F2
A72C837E515B2B81F7FC1FD437C0C90C5941097D868D303C3B4947D6B9D8EA1F
A0AF2E45B7E049CD263613F32220E4272103156986D17B98695BC45A0E185B16
D61D248F36066FDC8FC245F57493B14010E1DEB03D246275858089423EC77B42
822712AFF618F5DF9A099C41CF7159F74C57473A9E24F528C639FC> |
39 <001C60D8A8C9B756EDD472A6CDE264A9BD76202DF2745FD9B4CC9EF89CDA
9A6861A179C6DF61FDCB7106A2CE6431E542F30A8705D7788E00ECA30FD7D28E
7F3945C77A06CF5D82D9EBEA243FF433E0C213C1D63FC1575CA81531D8BDF304
0282A685414B8C0BECF8029F34013EA659055EB5DEC312CB9A293BCC615AFFEE
E7D7F17214C1AFA4514DDD1DC97C4017521D18E0D3396C26ED8E81A395D5FB4E
1AA561C20D738CBDB2C4E381E0B0CCE1EAAB86EE01580964522484FCBBB9CCEC
E6F5D732A2844AE594057EBD8F482C218FCE4A603F84F8A90A96935779EAED07
6930B5C169BEA6C1F12C2F3994AA8A0B42435A0027A6A144193ED3524959BDF2
8D7F676302FB9FC70EF37392D69CABCEB7525988D0727F38C88CD7E551FA79A5
1367FC7174B3A804> |
38 <001C60D8A8C9B7EE7C1920D5218B62BFB1881AF44B6F070FE3CDD0AC0A9D
DFB5C808AD8795DAB82DECC08267982165EFF48710A7AD6B05FE67136916AB87
2AF320FC74DCF53E09942EB9FB27705EE53EB4C645B62C99642A601F85CADBB4
331C1383FC91BA4728F4A6D9C89940AC7E683266A053BD3BBE46075F57431555
9531EDB37DFB05268A80C6B3E25750BEA40DCB82E0F1DAD274D30FE253170160
2885E19960E0BCF2A4EBCB3BD53659ABD834F34B216E9E0C826665A849F5BA65
A0944A76A5D8EB7E4395BC59213DDFCCFD20E0EFD73221431BC4ACBDF39D4AE9
9244D05B9A542F8D251EAF120CBFD31C92D7ED9F384474E10DEC9C96CF330196
B5B3D36046F35D3536B4A45964601A74AED5B7CED4B8D027E6861A1AD5F2D1E2
34569D990992AB135398E78B812ABE4846E41D93E8CB5B129F8BDF2863BF91B5
516432789D3B7C1F38A8835C6F508B1C57FDCFA00344ACEDCEF6360580E70051
E45D19B254160C092BDB4C3765A5B957AE3DA4D65D6CB3856242> |
!
end
end end
%ADOEndSubsetFont
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 317.566 mo
(\000T\000D\000B\000M\000J\000O\000H)sh
86.9312 317.566 mo
(\000N\000B\000T\000L)sh
104.139 317.566 mo
(\000J\000O\0006\000#\000\016\000'\000&\000&\000-)
[1.94389 5.68117 4.74139 4.21777 2.4245 3.47897 3.99548 3.99548 0 ]xsh
XXDFQJ+LibertineMathBMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.2594 326.916 mo
(S)sh
%ADOBeginSubsetFont: IBAAAA+LibertineMathMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQF+LibertineMathMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D452 <1C60D8A8C9B760FDCDF83C56BE01966D5EA34E5C834A1F19998525E
75713A38A39E9655C91A638A1A14665BD37B7360025EC4EE4A31479E64577E09
121256EF0D62E2026188BF2BB0A51C1DA5A5E74B4C0918D3186A798594B7F99E
360B94AA15A1D7923C9181041677F27663D4D71E15FF039793A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQF+LibertineMathMI7 /Encoding get
dup 52 /u1D452 put
pop
%ADOEndSubsetFont
/XXDFQF+LibertineMathMI7*1 
[18{/.notdef}rp /uni2113 14{/.notdef}rp /u1D43F 17{/.notdef}rp /u1D451 /u1D452 5{/.notdef}rp 
/u1D458 7{/.notdef}rp /u1D460 /.notdef /u1D462 /u1D463 79{/.notdef}rp /comma 
106{/.notdef}rp]
XXDFQF+LibertineMathMI7 nf
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
16.6762 324.312 mo
(4)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
22.2098 326.916 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
28.1906 326.916 mo
(R)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
32.8882 324.312 mo
(!)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
36.3122 324.312 mo
(\002jBj)
[4.27636 1.8327 5.056 0 ]xsh
60.5426 329.547 mo
60.5426 320.196 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 326.916 mo
(\000F\000N\000C)sh
77.1614 326.916 mo
(\000F\000E\000E\000J\000O\000H\000F\000O\000I\000B\000O\000D\000F\000N\000F\000O\000U\000N\000B\000T\000L\000J\000O\0006\000#\000\016\000'\000&\000&\000-)
[3.25667 3.62958 3.62958 1.94389 3.88789 5.37984 3.20644 3.88788 3.85911 3.27811 3.88789 3.07005 
3.20643 5.66671 3.20644 3.88789 4.05994 5.66672 3.27812 2.79752 5.46587 1.94389 5.68117 4.74139 
4.21777 2.4245 3.47896 3.99548 3.99547 0 ]xsh
XXDFQJ+LibertineMathBMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.2594 340.157 mo
(S)sh
%ADOBeginSubsetFont: RBAAAA+LibertineMathBRM Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /RBAAAA+LibertineMathBRM def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) Philip Poll
Modifications Copyright (c) 2017--2019, Michael Sharpe) def
/Weight (Bold) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /u1D6AB put
def
/FontBBox {0 -263 978 786} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/StdHW [41] def
/StdVW [110] def
/StemSnapH [34 41 46 51 69] def
/StemSnapV [110 115 122] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/u1D6AB <1C60D8A8C9B629F1BF9F1B3754CF87BE7D61CB080FD6EE9220A39B0
22026C9C7432719068D9859072D130E1CD45710DCB19B312A2CC006B9CF123DD
1492B9515D470C2> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/XXDFQO+LibertineMathBRM /RBAAAA+LibertineMathBRM findfont ct_VMDictPut
/XXDFQO+LibertineMathBRM*1 
[/.notdef /u1D6AB 254{/.notdef}rp]
XXDFQO+LibertineMathBRM nf
XXDFQO+LibertineMathBRM*1 [5.81816 0 0 -5.81816 0 0 ]msf
16.9386 341.682 mo
(\001)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
23.557 340.157 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
29.5378 340.157 mo
(R)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
33.973 337.553 mo
(D)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
37.653 337.553 mo
(\002)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
41.2666 337.553 mo
(!)sh
60.5426 347.08 mo
60.5426 329.547 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 335.683 mo
(\000D\000B\000V\000T\000B\000M\000J\000U\000Z)sh
92.5047 335.683 mo
(\000N\000B\000T\000L)sh
109.713 335.683 mo
(\000D\000P\000S\000S)sh
121.685 335.683 mo
(\000F\000T\000Q)sh
131.454 335.683 mo
(\000P\000O\000E\000J\000O\000H)sh
153.799 335.683 mo
(\000U\000P\000U\000I\000F\000J\000O\000E\000J\000D\000F\000T\000P\000G\000U\000I\000F\000U\000P\000Q\000\016)
[2.26666 5.40852 2.26666 3.8591 4.99971 1.94388 3.88789 3.62958 1.94388 3.07005 3.20642 4.59081 
3.61523 4.01692 2.26666 3.85912 4.99971 2.26666 3.61523 3.72282 0 ]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
225.235 335.683 mo
(D)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 344.451 mo
(\000R\000V\000F\000S\000J\000F\000T)sh
87.7132 344.451 mo
(\000J\000O\0001\0004\000")
[1.94389 5.68116 3.88066 3.47897 0 ]xsh
.40168 lw
10.1874 351.683 mo
15.8186 351.683 li
@
XXDFQJ+LibertineMathBMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.1162 357.691 mo
(^)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
16.2842 353.327 mo
(\271)sh
%ADOBeginSubsetFont: IBAAAA+LibertineMathMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQF+LibertineMathMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/uni210E <1C60D8A8C9B7E89794C43ED145AB0D3AD093292C6DCC8509D10972
85610FC1565EF83BC9996AC9FFA47059B61BF05FCA1ED5927E6865936C266FDE
E470BC0652190D9341133FEC7B47DC5A2ED2F74D85A08C8BCA94718E972AB824
796598A73E7028A4A5FE82E8CF6DCA7BBBE165B0E24B13FAA95E107526CEDAB7
85BE3FDE42D39E305EABF5D1BDE06C960D66F5979052358C91283E074DED62CD
CEAA6F108F3D92A1E80FC7F3436C5F29EE41E9D95239B480D06808BCF6A7FEF9
DBC9894BFDBFBA36295877CC4B6DE54A2B33F244EFB7AE54C346C6BD3FBAE034
5F520CBF439A5EC4C3EE42C9FFD8C0181AB23DB5AE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQF+LibertineMathMI7 /Encoding get
dup 17 /uni210E put
pop
%ADOEndSubsetFont
/XXDFQF+LibertineMathMI7*1 
[17{/.notdef}rp /uni210E /uni2113 14{/.notdef}rp /u1D43F 17{/.notdef}rp /u1D451 /u1D452 
5{/.notdef}rp /u1D458 7{/.notdef}rp /u1D460 /.notdef /u1D462 /u1D463 79{/.notdef}rp 
/comma 106{/.notdef}rp]
XXDFQF+LibertineMathMI7 nf
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
18.2506 353.327 mo
(\021)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
21.7442 353.327 mo
(\272)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
15.5858 360.179 mo
(:)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
26.6818 357.691 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
32.6626 357.691 mo
(R)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
37.0978 354.869 mo
(D)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
40.7778 354.869 mo
(\002)sh
%ADOBeginSubsetFont: OBAAAA+LibertineMathMI5 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQL+LibertineMathMI5 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D451 <1C60D8A8C9B7D1035F34A70C818E5C7E1CBBD9DFDBE50AB66580777
DFC9896F51F832B36D2FA4278472F3AE7732FA95ED60353881D0E3AEF3CA1C40
16964AED1B97F96AD0AEB7C5E22A79CB836816D84CD0174D2A1DFAFD73759819
9C31BE84A47E5FFD56F8825D612BF4AA85411FBB16141FB38B1DA90F73C63E3B
D7AC911FFD96D6FDA7984BC1696656B7DAC5261A280555564132AE6AF6AA0BE4
003AA0C3B8C0B078D60CB79A78AD113F9B376D458CB12E6B7428336B16683290
CDCFD7985FDBA256C2873E1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQL+LibertineMathMI5 /Encoding get
dup 51 /u1D451 put
pop
%ADOEndSubsetFont
/XXDFQL+LibertineMathMI5*1 
[18{/.notdef}rp /uni2113 32{/.notdef}rp /u1D451 16{/.notdef}rp /u1D462 187{/.notdef}rp]
XXDFQL+LibertineMathMI5 nf
XXDFQL+LibertineMathMI5*1 [4.3836 0 0 -4.3836 0 0 ]msf
45.7898 352.577 mo
(3)sh
.32584 lw
45.4346 353.374 mo
49.4674 353.374 li
@
%ADOBeginSubsetFont: OBAAAA+LibertineMathMI5 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQL+LibertineMathMI5 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D43B <1C60D8A8C9B6D814192E5102BDA1A1C08F92E36A10E11E835B7E613
302145C2E47B50F052C1D18D5FAC0C3D346505F83CCE51BE7308A05FF9AE9ED6
02CAB44AC468928F0D895EF515A282654BC7CC786A3525DC483A6E4D485D0180
A905600284E06111A469FB2EABAB4C3D8B7C907D793552ECF53C74C9B0BE1F0A
E7EA528E0559DBD021FB778ACA26F471F2B648D90A39865296650D1E51DB1B2F
A722E0EFEE8B70EC4304C030DCC2AF518DDA4087D88A135CEEC534B0273A2D90
4101FD38BE01CD5E5367390464AB95B3BE06010978E691C9CBA3D8EB895F6D51
18AED27FB3849CAC943A0036DC29F500055D20F673B2D3C5742A644CAA5DA039
66EB10E74F52CCF1791CBA1DD697697D425BB24C71CCD83F35CDC3E56FD3AD19
35161B8B90836E496> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQL+LibertineMathMI5 /Encoding get
dup 29 /u1D43B put
pop
%ADOEndSubsetFont
/XXDFQL+LibertineMathMI5*1 
[18{/.notdef}rp /uni2113 10{/.notdef}rp /u1D43B 21{/.notdef}rp /u1D451 16{/.notdef}rp /u1D462 
187{/.notdef}rp]
XXDFQL+LibertineMathMI5 nf
XXDFQL+LibertineMathMI5*1 [4.3836 0 0 -4.3836 0 0 ]msf
45.3466 356.876 mo
(\035)sh
.3188 lw
60.5426 364.615 mo
60.5426 347.08 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 353.218 mo
(\000U\000I\000F)sh
75.8056 353.218 mo
(\000P\000V\000U\000Q\000V\000U)sh
97.0883 353.218 mo
(\000S\000F\000Q\000S\000F\000T\000F\000O\000U\000B\000U\000J\000P\000O\000T\000X\000J\000U\000I\000U\000P\000Q\000\016)
[2.61811 3.20644 3.72282 2.61101 3.20643 2.79752 3.20642 3.88789 2.26666 3.27811 2.26666 1.94389 
3.61523 3.88789 4.58356 5.35829 1.94388 2.26666 5.65239 2.26666 3.61523 3.72282 0 ]xsh
%ADOBeginSubsetFont: HBAAAA+LibertineMathMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQE+LibertineMathMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/uni210E <1C60D8A8C9B7B4A149FBEA70996262A8A235CDD811B5EDCF16E04C
C9E94CFEA58984C6AC529E61BB7F9850D2432113230CEB6654B045CE9609786B
A93ED8A7DEEC8A34C63358F38352FEC47087DAA1AFB57FF0CEA86690435C7C7A
3B84A4CF7C80593E777FE9969B0F9605A67A9CDBB29A4B5B0048B05E949BA7B3
F18CE9A16D664577CA77EAF114412850E215033E10B282BE4D3FD6A75CCB68CE
2AE91020917D287E4E12F23DA4AF16F968C4EC9C536D2E32007C3652CFBAD6A1
B09077B11FB03EA07B2EB34085500EF621000AC4C76A378B038F30AE2C02AFA9
A3675B7CD042CA842C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQE+LibertineMathMI /Encoding get
dup 17 /uni210E put
pop
%ADOEndSubsetFont
/XXDFQE+LibertineMathMI*1 
[17{/.notdef}rp /uni210E /uni2113 5{/.notdef}rp /u1D436 4{/.notdef}rp /u1D43B 3{/.notdef}rp 
/u1D43F 15{/.notdef}rp /u1D44F /.notdef /u1D451 4{/.notdef}rp /u1D456 /.notdef 
/u1D458 4{/.notdef}rp /u1D45D 4{/.notdef}rp /u1D462 /u1D463 15{/.notdef}rp /u1D6FC 
63{/.notdef}rp /comma 106{/.notdef}rp]
XXDFQE+LibertineMathMI nf
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
171.014 353.218 mo
(D)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
176.979 353.218 mo
(\000E\000P\000N\000J\000O\000B\000O\000U)sh
206.941 353.218 mo
(\000R\000V\000F\000S\000J\000F\000T)sh
64.6874 361.985 mo
(\000V\000O\000E\000F\000S)sh
83.6747 361.985 mo
(\000U\000I\000F)sh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
94.5202 361.985 mo
(:)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
98.5474 361.985 mo
(\000\016\000U\000I)sh
108.891 361.985 mo
(\000C\000F\000I\000B\000W\000J\000P\000S\000G\000P\000S\000I\000F\000B\000E)
[3.608 3.20644 3.85909 3.27813 3.56499 1.94389 3.61523 4.46164 2.22366 3.61523 4.46164 3.8591 
3.20642 3.27812 0 ]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
162.173 361.985 mo
(\021)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
167.94 361.985 mo
(\000J\000O\0001\0004\000")
[1.94389 5.68117 3.88066 3.47896 0 ]xsh
%ADOBeginSubsetFont: QBAAAA+txexs AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQN+txexs dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hatwide <1C60D8A8C9B64FADB5F4AE176F2643ADEB08F7FF01553C094DC40B
52AFEA89A8DA27BAA454E3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQN+txexs /Encoding get
dup 98 /hatwide put
pop
%ADOEndSubsetFont
/XXDFQN+txexs*1 
[98{/.notdef}rp /hatwide 2{/.notdef}rp /tildewide 154{/.notdef}rp]
XXDFQN+txexs nf
XXDFQN+txexs*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.6146 373.851 mo
(b)sh
XXDFQJ+LibertineMathBMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.1162 375.226 mo
(^)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
15.5858 376.796 mo
(:)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
21.5962 375.226 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
27.577 375.226 mo
(R)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
32.2746 372.622 mo
(!)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
35.6986 372.622 mo
(\002)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
39.1082 372.622 mo
(3)sh
60.5426 382.149 mo
60.5426 364.615 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 370.751 mo
(\000U\000I\000F)sh
75.8056 370.751 mo
(\000P\000V\000U\000Q\000V\000U)sh
97.0883 370.751 mo
(\000S\000F\000Q\000S\000F\000T\000F\000O\000U\000B\000U\000J\000P\000O\000T\000P\000G\000-\000\016\000.\0004\000"\000#\000V\000O\000E\000F\000S\000U\000I\000F)
[2.61811 3.20644 3.72282 2.61101 3.20643 2.79752 3.20642 3.88789 2.26666 3.27811 2.26666 1.94389 
3.61523 3.88789 4.58356 3.61525 4.01692 3.78741 2.4245 6.01826 3.47897 4.98537 6.01105 3.80898 
3.88789 3.62956 3.20644 4.46164 2.26666 3.8591 0 ]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
208.364 370.751 mo
(:)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
212.392 370.751 mo
(\000\016\000U\000I)sh
64.6874 379.519 mo
(\000C\000F\000I\000B\000W\000J\000P\000S)
[3.6009 3.20643 3.8591 3.27812 3.565 1.94388 3.61524 0 ]xsh
%ADOBeginSubsetFont: MBAAAA+LibertineMathBMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQJ+LibertineMathBMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D738 <1C60D8A8C9B795A0C401E4CD3C8D134B3816ED1EEA7300DE5189818
B43920E0C8854429D32EF7C9B0545E5E7314B340C7DC95291CE2A2A748208993
45661411A5E19545E9BFE8025902B36DBE472EE157115FEFC40CD3DBAFA5A510
9FB70FAF9D7F5A6AD91077963A2133183CC0358742CC7B90BB1509ED146D89D2
B62406EA43DB51E910D122580835C3CCAA42C06D4B59939321F8DB3E13242374
D30E5B5035838D92E3D954F0AC786114465716C844DCEE865710EF9CE82A4958
73A728E886BE36180761CF50030F127234E986CF81B43CD9FCAFA356648FD1D0
678CBE9A0058544FBA9C683B36FEB69> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQJ+LibertineMathBMI /Encoding get
dup 36 /u1D738 put
pop
%ADOEndSubsetFont
/XXDFQJ+LibertineMathBMI*1 
[35{/.notdef}rp /u1D737 /u1D738 35{/.notdef}rp /u1D469 2{/.notdef}rp /u1D46C /.notdef 
/u1D46E /u1D46F 4{/.notdef}rp /u1D474 2{/.notdef}rp /u1D477 7{/.notdef}rp /u1D47F 
161{/.notdef}rp]
XXDFQJ+LibertineMathBMI nf
XXDFQJ+LibertineMathBMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
9.72099 392.759 mo
($)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
14.3786 390.156 mo
(\022)sh
%ADOBeginSubsetFont: OAAAAA+txsys AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQC+txsys dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/plus <1C60D8A8C9B7E7C1D3779F071E0378602D1A65F5B64F3FC671993C295
0DC77508D558D53332EEF64C90EDA57B3E596330858F9CCEF0675> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQC+txsys /Encoding get
dup 184 /plus put
pop
%ADOEndSubsetFont
/XXDFQC+txsys*1 
[2{/.notdef}rp /multiply 47{/.notdef}rp /element 15{/.notdef}rp /B 16{/.notdef}rp /S 
/.notdef /U /V 15{/.notdef}rp /braceleft /braceright 2{/.notdef}rp /bar 
77{/.notdef}rp /plus /parenleft /parenright 69{/.notdef}rp]
XXDFQC+txsys nf
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
16.8194 390.156 mo
(\270)sh
XXDFQI+MinLibReg*1 [5.81816 0 0 -5.81816 0 0 ]msf
20.101 390.156 mo
(1)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
25.341 392.759 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
31.321 392.759 mo
(R)sh
XXDFQI+MinLibReg*1 [5.81816 0 0 -5.81816 0 0 ]msf
36.1058 390.156 mo
(1)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
38.8114 390.156 mo
(\002)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
42.221 390.156 mo
(3)sh
60.5426 399.683 mo
60.5426 382.149 li
@
%ADOBeginSubsetFont: GAAAAA+LinLibertineO-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GAAAAA+LinLibertineO-Identity-H 3 GetGlyphDirectory
91 <001C60D8A8C9B713D44022B0D8069739CCA2588FE85A41FFB1343A701118
F958E972B831552115AC042E938A58F962C7FA25169CD0BA54B887EFDD23C8B0
A4A9C9017DC00032D490CC709BE74C4193198CAD4BBAEDF6F70118EBE1457EDE
6EF6EDEFBBEE3B3E9ED90547798C1E6EA54370BE7722C51B97DFF1FDA2AA807D
EFBF1EB7552BB6DBEA3965D84387183E4BF7DAAE571F3E268E676D32899F1574
7F34810D712F7ADD43D213E97A3BF617517935CDB9DCB39CBB637A48C2036269
93964E217294716474079AF080250928BE1BB8196759BA43B6B6E0DF88F4BC60
2C96A6881B5C1BD51D492496136146B16C23F0EEE47731C4D13A3DCEF5F4A9EE
48171B> |
12 <001C60D8A8C9B795A0B1527D9EF3CCDF6A315593F9457AFC0C49B0234A5A
6DC38DB6F1FD70EE820759C2FAB4259A38A04595F288154FC9A0AA7903CC16AF
7DF55F8DD3CEBEC161DE2F62A35A772E4FB645819338619A4827E3B85892> |
18 <001C60D8A8C9B74A3E8D9B6E4FBB9283EA31AC3F7A3E4DE092461636BD67
B3B6038D3EB05C0E14879376D2CFAB48D181D067E3A3B8163005D61DD976A74D
37468350833696846FB1FA7A10DB534CB33F4042590A532253B2B62669C2FE6A
3CBAC4837EA58B2A0FAE3E4FE6994087B72A12F5ACF1251C3EA07376A892A43B
B120ECD7DF283E56E4DD70BA0503A30E8EB909C0936FA5FB421C5D647D443CF7
9045B42C7C6489771DF849CDB5D6F58FA850B15054FF52C54BB9DF51E50CBA93
35E95CC7> |
!
end
end end
%ADOEndSubsetFont
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 388.286 mo
(\000O\000P\000O\000\016\000V\000T\000F\000S\000\016\000Q)sh
97.1745 388.286 mo
(\000F\000S\000T\000P\000O\000B\000M\000J\000[\000F)sh
126.764 388.286 mo
(\000E\000C\000F\000I\000B\000W\000J\000P\000S\000T\000F\000U\000F\000N\000C\000F\000E\000E\000J\000O\000H\000B\000U\000U\000I\000F\000\011)
[5.42284 3.60803 3.20642 3.8591 3.27812 3.56499 1.94389 3.61525 4.46162 2.79752 3.20644 4.05994 
3.20642 5.66672 3.60802 3.25667 3.62958 3.62958 1.94388 3.88788 5.37985 3.27812 4.05994 2.26668 
3.8591 4.99969 0 ]xsh
XXDFQE+LibertineMathMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
224.575 388.286 mo
(\022)sh
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
227.588 388.286 mo
(\000\014\000\022\000\012\000\016\000U\000I)sh
64.6874 397.053 mo
(\000U\000J\000N\000F)sh
79.5571 397.053 mo
(\000T\000U\000F\000Q)sh
XXDFQJ+LibertineMathBMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.1162 406.389 mo
(^)sh
%ADOBeginSubsetFont: LBAAAA+MinLibReg AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQI+MinLibReg dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/E <1C60D8A8C9B7EE7C1920D5218B62BFB1881AF44B6F070FE3CDD0AC0A9DDF
B5C808AD8795DAB82DECC08267982165EFF48710A7AD6B05FE0712D047F23496
C2223A32BDD07E3E4C37B2D7F70413F324E0D134F6A33413BCD090C12B9A6C2D
F413CFF883BDF60D44BA51B4B8D5A6E686E53431AD5A446CA3CA1A44F832E384
B3C4E638539721D6B0753D179FCEA5DF5B5FF1883BBA87C31A50AA6858940FD4
346FFECF6D4FB9634EDA45A84F8AF7F466A85CAF9A368C6225E8F5B801FA5721
72063359E5A77DC908E6FBD6EF8BE5CBB5F0164BDFB5893C0267AC4B770AAD2A
EF7CC90F0A4E5B9B0DAB84A43019F9AE3953DE8B3997CDA597BEC7478FEF6EF4
D0FD9A121F93BFC43BF9E707E943DFD9537F5103299A35E3898A524080625AEA
B488A22E25777D6A3C92A43782C41CA596E0B53D1DBF14C6E507CC0362031E8C
F1DF261E742B8B2F8FBEB9BB26795E268EFDB3E3BBE3CE58E857> |-
/M <1C60D8A8C9B6BAE577E979693CB34EE49594A21E09AED32D9F31DF107181
4FE13BEC1FDAD26AC80E6C974FA5316CE50F421125A6483C64B2DAD60A7D4249
49B05DF69C51D8BFC5DB76A1FA05700624AFD0E7B34D4DE72514CBC9926485FD
D58A5C9DA75F85270ECA0CE3FD10C98CC72A00526E467A9F6C0018B00EB8AF09
12356D3251B7B352F73E1C38BE6D5D4F3FD340FAD49AA92CD2159205D9CBB027
70BDCFC92EC81719EF4E2F2442D05CA3B463E98EE79BBD26266486BD428AE612
F1D1A907AC4FB2524A144C7D166360C34B67E3866C37A9D07A40567F254DF278
AEAA9617F9197B8C8790F5ED736B2D68EC8E91B3275E005BEBC5A53E4A651CCD
4CC51972077D90FC211B3EFBF9> |-
/P <1C60D8A8C9B79EE332E43A2145079745F3E0E5D00BAC8A9E202E14CB1406
FD677AD1CE0FB6C0EB12F08A488D5ECA9935E74045388F6BAB67A59416BC5203
C29A816C952531554078993265CCE42572FB415BFC20DB72F90DB71E878381A5
2DA0262B979E4959CDB50D65A57308828896715309DC12E4C89A457D33AB7CF3
74EEEDE05D931964B08FDE204B5A1A336E5CB4DD5B72EE64EFEF72AD28D661BF
1CF14A914330EEBBB44846181CEC19AEC252762755B3AEDA4F2575> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQI+MinLibReg /Encoding get
dup 69 /E put
dup 77 /M put
dup 80 /P put
pop
%ADOEndSubsetFont
/XXDFQI+MinLibReg*1 
[48{/.notdef}rp /zero /one 19{/.notdef}rp /E 7{/.notdef}rp /M 2{/.notdef}rp 
/P 175{/.notdef}rp]
XXDFQI+MinLibReg nf
XXDFQI+MinLibReg*1 [5.81816 0 0 -5.81816 0 0 ]msf
15.8186 403.785 mo
(EMP)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
29.6226 406.389 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
35.6034 406.389 mo
(R)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
40.301 403.785 mo
(!)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
43.725 403.785 mo
(\002)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
47.1338 403.785 mo
(3)sh
60.5426 409.019 mo
60.5426 399.683 li
@
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 406.389 mo
(\000U\000I\000F)sh
75.8056 406.389 mo
(\000P\000V\000U\000Q\000V\000U)sh
97.0883 406.389 mo
(\000S\000F\000Q\000S\000F\000T\000F\000O\000U\000B\000U\000J\000P\000O\000T\000B\000M\000P\000O\000H\000&\000.\0001)
[2.61811 3.20644 3.72282 2.61101 3.20643 2.79752 3.20642 3.88789 2.26666 3.27811 2.26666 1.94389 
3.61523 3.88789 4.58356 3.27812 1.89377 3.61523 3.88789 5.37982 3.99548 6.01828 0 ]xsh
XXDFQJ+LibertineMathBMI*1 [7.17312 0 0 -7.17312 0 0 ]msf
10.1162 415.725 mo
(^)sh
%ADOBeginSubsetFont: LBAAAA+MinLibReg AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQI+MinLibReg dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B84325560C5412E249E77EF87CF25E787B074EE47C862018E8
5198D8CF59D2174AFF30C847BF7596225678A09DC0F9A40D95C574C67405C20E
DD217B1296BD42977BF62A0C4543B63215C915464E44997DA20BBA343463D410
1AC2D0290325561D175D017BB1C3607955A207BE562EA01F28561B57359B6D57
3C895BD51301943132E5E08419357EB4B86D6BB223460DFCF995B55AEEA3F150
D06346E7641E7B346A9D9C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQI+MinLibReg /Encoding get
dup 73 /I put
pop
%ADOEndSubsetFont
/XXDFQI+MinLibReg*1 
[48{/.notdef}rp /zero /one 19{/.notdef}rp /E 3{/.notdef}rp /I 3{/.notdef}rp 
/M 2{/.notdef}rp /P 175{/.notdef}rp]
XXDFQI+MinLibReg nf
XXDFQI+MinLibReg*1 [5.81816 0 0 -5.81816 0 0 ]msf
15.8186 413.121 mo
(IMP)sh
XXDFQC+txsys*1 [7.17312 0 0 -7.17312 0 0 ]msf
28.1098 415.725 mo
(2)sh
XXDFQH+txsyb*1 [7.17312 0 0 -7.17312 0 0 ]msf
34.0906 415.725 mo
(R)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
38.7882 413.121 mo
(!)sh
XXDFQC+txsys*1 [5.81816 0 0 -5.81816 0 0 ]msf
42.2122 413.121 mo
(\002)sh
XXDFQF+LibertineMathMI7*1 [5.81816 0 0 -5.81816 0 0 ]msf
45.6218 413.121 mo
(3)sh
60.5426 418.355 mo
60.5426 409.019 li
@
%ADOBeginSubsetFont: GAAAAA+LinLibertineO-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GAAAAA+LinLibertineO-Identity-H 1 GetGlyphDirectory
42 <001C60D8A8C9B84325560C5412E249E77EF87CF25E787B074EE47C862018
E85198D8CF59D2174AFF301B447CE8A8D2569B45A10A0403438F6FCEB0DD5118
AB379174C31D1C50956249F03457992B4F561CFF227C8BFD427F44118309DE9B
048918A6E7D6C501C7FDF0809DED4A5B5EE897ABA4A1F7C3865B1A40798454B4
DB202DCA10AC2EE6D8FC84B52399FED4AB98A007721D> |
!
end
end end
%ADOEndSubsetFont
XXDFPZ+LinLibertineO-Identity-H [7.17312 0 0 -7.17312 0 0 ]msf
64.6874 415.725 mo
(\000U\000I\000F)sh
75.8056 415.725 mo
(\000P\000V\000U\000Q\000V\000U)sh
97.0883 415.725 mo
(\000S\000F\000Q\000S\000F\000T\000F\000O\000U\000B\000U\000J\000P\000O\000T\000B\000M\000P\000O\000H\000*\000.\0001)
[2.61811 3.20644 3.72282 2.61101 3.20643 2.79752 3.20642 3.88789 2.26666 3.27811 2.26666 1.94389 
3.61523 3.88789 4.58356 3.27812 1.89377 3.61523 3.88789 5.37982 2.1304 6.01828 0 ]xsh
.57384 lw
6.20259 419.879 mo
251.887 419.879 li
@
6.20259 422.047 mo
251.887 422.047 li
@
.797 lw
268.566 -159.335 mo
508.813 -159.335 li
@
%ADOBeginSubsetFont: IAAAAA+LinLibertineOB-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LinLibertineOB-Identity-H 1 GetGlyphDirectory
34 <001C60D8A8C9B619181CBD95A0C3252F105DC88EEB90469CBDA281040E0C
98E1C34D4C5A15089563838538C3914A9A3E95323CD96A83928BF13571041C1D
FD3B401F7ACADF7D585532A0624A09EEE4D5B5455C8F80FA878562E43FB6B153
54DDDB00FED969CA8211822E5E827383CBEF7D9AFCB3F722247600B28B01A70C
C9F1CECFA010C8B535CAD80515D6817E12C4AC9C2718C1AC7A165413FACD2209
DA89F0B888EF801C16D4A83088B1A6324BA49C028A27F312B2EFBB9153F08F3D
0E274E70ECDB581AF367F1016A649359A887F3E324056AF2AA30D4C406156796
CC6E4054336742C2B8262A38BEBE27C8B6045D33814D5E6307CB9F3219EC> |
!
end
end end
%ADOEndSubsetFont
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
273.216 -150.685 mo
(\000"\000M\000H\000P\000S\000J\000U\000I\000N)sh
318.209 -150.685 mo
(\000\022\000\033)
[4.6088 0 ]xsh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
327.364 -150.685 mo
(\0001\000S\000P\000C\0004\000Q\000B\000S\000T\000F\000N\000V\000M\000U\000J\000\016\000I\000F\000B\000E\000T\000F\000M\000G\000\016\000B\011R\000F\000O\000U\000J\000P\000O)
[4.85083 3.26376 4.51904 4.42038 4.34872 4.65353 4.09766 3.33545 3.49689 6.2406 7.0834 4.7612 
2.36719 2.83334 2.42987 3.03061 4.82388 4.00803 4.09766 6.77856 3.49689 4.00806 2.36719 2.77954 
3.03064 4.09766 5.50534 4.00803 4.85986 2.83334 2.42984 4.51904 0 ]xsh
268.566 -146.16 mo
508.813 -146.16 li
@
%ADOBeginSubsetFont: IAAAAA+LinLibertineOB-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LinLibertineOB-Identity-H 3 GetGlyphDirectory
42 <001C60D8A8C9B72C0F8FF3914AD41EDFA7C50195AD12BB04DFFD5E2DC845
1821BD8EDAC51533AA396CEF77A31E1D8BB3CEB9FBEC74E4EF0614B26AC4316C
0DF52E1930AE9B734EA8477D95B23A34DCE8B5DEDB9EEA3B3EA6F2C66A12ED33
B72A0160CC9F98194B656A3559A141F7A89B7025CC2E844D> |
48 <001C60D8A8C9B60F08275C3C12F3FCA6B816C3B85E9AF9A7260C766B5445
467F920692E2C777AEC7E95103511E26469773B5F79BA80627F10D54A942DB26
10F390BA76E3EE2DAA4F10CDB8477B47D3847556BE00D318D9BEEC8D9C5D240F
2EBFCAECE6B1662A422E5FFA6313E14B63FBD6784ECAAADF4B20AF3F4E1A3B87
951A2E49062F73785905995CFE79345446E7D539375D7E1BC692DE9BA1D877B3
7EA28CBEA51139B88FB49A7CB5BA8A03E774BDEC23D9AAFCBBF8CB2B54A5F4CC
C6AB4BEDE84A9A239B7AB4B3847A> |
71 <001C60D8A8C9B734780D68F1281A477544ADB5BB22B5841B0F8BA0BA3FBC
7D79EE516A98EEF73FA9D90F06BB7FF6BF41AD25C1D0519468737F9E6C181FB9
746D819E90E81FA5BAD37DE18B1FD34CCBA2A4C2518755953BBFDF9743F3AD4A
9B6B1ADD02B8E1232BA9A5F111011C5BB3B0AC067717A2F2D4078FFC5B25EE5A
3A8E38879F212F12121355E0949BB38D41891D9F313F48073986372CE3F238F7
A68E8C9F0E2A> |
!
end
end end
%ADOEndSubsetFont
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
278.529 -135.387 mo
(\000*\000O\000Q\000V\000U)sh
308.566 -135.387 mo
(\000\033)sh
%ADOBeginSubsetFont: GAAAAA+LinLibertineO-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GAAAAA+LinLibertineO-Identity-H 1 GetGlyphDirectory
2647 <001C60D8A8C9B7EB081C198E88F0A076F2E5698C7C7FC508F55E8DBB22
5790A87986092D399DE03899AF442E199FEAB2659E408FEBD1DD77CE4F55E5B4
59D412815F66F3A89CB1B0E904EE55248E0CD42CE7BAAFC62050B3534295C88F
86410257E6A7F753FAABB267ADF588E5FC98CA28E60E15CCC4FD33C597998E4C
30F6EC4892D873BAC16F97AD61B49805599BE33035D021B59E0247D9A23AA00E
C688F1155F7EF89F96ED712BD08841FCE545A59AAB41F297EFE4846260364D80
D4471A1010FAFE450DC732BB85C8E1881A325F163FD8168EBF50D70EFE0B39AF
BBAF1FB9BF0FF98B6D154CFEEE3EADAA726C216AC8D8F5DA6EA17D8C42B5A816
9793AD1412E591C07C87E5ACA08CEA50C12BCE192026F1071A2769417A7EC1D7
CF842F36EACB9A6ACB056EF0D7DD6C0B20A8C1C020C2D597B40D67EF785A296F
7CF74A5539A6E319FE1793D983A35CC16144FCB007DA8C> |
!
end
end end
%ADOEndSubsetFont
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
311.964 -135.387 mo
(\0005\000F\000O\000T\000P\000S)
[4.79706 4.00803 4.85986 3.49689 4.51904 0 ]xsh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
339.124 -135.387 mo
(^)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
348.922 -135.387 mo
(2)sh
XXDFQH+txsyb*1 [8.9664 0 0 -8.9664 0 0 ]msf
356.398 -135.387 mo
(R)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
362.269 -138.642 mo
(!)sh
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
366.549 -138.642 mo
(\002)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
370.811 -138.642 mo
(3)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
378.049 -135.387 mo
(\000G\000P\000S)sh
390.915 -135.387 mo
(\000S\000F\000Q\000S\000F\000T\000F\000O\000U\000B\000U\000J\000P\000O\000T\000P\000G)
[3.27264 4.00803 4.65353 3.27264 3.99902 3.49689 4.00803 4.85986 2.83331 4.09766 2.83334 2.42987 
4.51904 4.85983 5.73849 4.51907 0 ]xsh
311.964 -124.428 mo
(\000C\000F\000I\000B\000W\000J\000P\000S\000\016\000T\000Q\000F\000D\000J\012W\000D\000T\000F\000R\000V\000F\000O\000D\000F\000T)
[4.51001 4.00806 4.82385 4.09766 4.45624 2.42987 4.51904 3.33545 3.03061 3.49692 4.71631 4.07086 
3.83755 2.42984 5.02118 6.07916 3.49689 4.07083 4.51016 4.7612 4.00803 4.85986 3.83759 4.00803 
0 ]xsh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
278.529 -112.951 mo
(\0000\000V\000U\000Q\000V\000U)sh
308.566 -112.951 mo
(\000\033)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
311.964 -112.951 mo
(\000'\000J\000O\000B\000M)sh
332.309 -112.951 mo
(\000P\000V\000U\000Q\000V\000U)sh
358.912 -112.951 mo
(\000S\000F\000Q\000S\000F\000T\000F\000O\000U\000B\000U\000J\000P\000O\000T)
[3.27264 4.00803 4.65353 3.26376 4.00803 3.49692 4.00803 4.85983 2.83334 4.09766 2.83334 2.42984 
4.51904 4.85986 0 ]xsh
%ADOBeginSubsetFont: LBAAAA+MinLibReg AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQI+MinLibReg dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B62AC6AD5BB614E98CC0B2EBFD2AA4CC8AC02AA3E43F64875C
93A6048ABC96306262DAAF491BD2A57DABACCA65F6A7ECB1B6249C0C8E0620D5
94CBD49F72E440C35FA1986C16AA33342790BB75D47A8CF8E13BB5BA0AD3E130
D83AFA65DFBD4871EFF12AE5D866938A242C4981A66D8355F65619AB9FD13A84
C7CE882A07D4FF29864A24C9FF01066BD39FF24716FD1D1F900944FF50990F66
3AE00660C3789D80EB430029F345B6D9D289C79DA541425DC501841B778954E6
28ECE8B7583592DF05C06421E4704B4F27B4264D80C868B8B85E12A4C80742> |-
/S <1C60D8A8C9B756EDDCFE5FA8BC64FB917CD90D11D54449E792C4A079A7C3
ADA074BE91DDF0B4315358205B04BD01380F3130B3A36F72D70214AD0284CF56
17A9EDFC217086E1D5EFEA3E9D5E00317EDD9F1A4FA55537A63ACA72660A92F2
D6D0F8547BD69BB7A24541AA8910E8BB0FF509A680D52DAECEF8EDB38FC16896
F93F8524B2F61672C06982CCBF124CE8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQI+MinLibReg /Encoding get
dup 65 /A put
dup 83 /S put
pop
%ADOEndSubsetFont
/XXDFQI+MinLibReg*1 
[48{/.notdef}rp /zero /one 15{/.notdef}rp /A 3{/.notdef}rp /E 3{/.notdef}rp 
/I 3{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S 172{/.notdef}rp]
XXDFQI+MinLibReg nf
XXDFQI+MinLibReg*1 [8.9664 0 0 -8.9664 0 0 ]msf
417.786 -112.951 mo
(PSA)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
433.665 -112.951 mo
(\271)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
436.92 -112.951 mo
(^)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
444.048 -112.951 mo
(\2722)
[6.09708 0 ]xsh
XXDFQH+txsyb*1 [8.9664 0 0 -8.9664 0 0 ]msf
457.628 -112.951 mo
(R)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
463.5 -116.206 mo
(!)sh
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
467.78 -116.206 mo
(\002)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
472.041 -116.206 mo
(3)sh
XXDFQB+LinLibertineOB-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
270.973 -101.993 mo
(\000\022)sh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
278.529 -101.993 mo
(\000G\000P\000S)sh
290.741 -101.993 mo
(\000F\000B\000D\000I)sh
%ADOBeginSubsetFont: KAAAAA+LinLibertineOI-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KAAAAA+LinLibertineOI-Identity-H 1 GetGlyphDirectory
69 <001C60D8A8C9B752AB3DE30F164C1D3001D8F27EA34AE25F670BE8EAA89A
A6851A93B1D4FE73FB38D510572F240B89D25A4C3582753FE0D5E307CD57B74B
4A014BC0F57DE629F9A5B8BE630FD092398E7406B5014739CA4F3864D75773C5
5CA4C907CF7F31D859F5D56C96E6068BE6C64FB7592F3EE4C83D34F6B29D0B7E
0C5A43CBC3C054FCEC6E29CA8F3E5D7013E009F24B8DD5C904AC621F91603B52
EF9FD49A999253B6814FC1C5B66138C95DC238E10C06152BA08AB8DF9A145364
45C4489DB4D93AA8> |
!
end
end end
%ADOEndSubsetFont
XXDFQA+LinLibertineOI-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
311.543 -101.993 mo
(\000I\000F\000B\000E)sh
XXDFQE+LibertineMathMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
330.372 -101.993 mo
(\021)sh
XXDFQD+txmiaX*1 [8.9664 0 0 -8.9664 0 0 ]msf
337.83 -101.993 mo
(=)sh
XXDFQI+MinLibReg*1 [8.9664 0 0 -8.9664 0 0 ]msf
345.629 -101.993 mo
(1)sh
XXDFQA+LinLibertineOI-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
352.04 -101.993 mo
(\000U\000P)
[2.75275 0 ]xsh
XXDFQE+LibertineMathMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
360.863 -101.993 mo
(\035)sh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
370.125 -101.993 mo
(\000E\000P)
[5.03018 0 ]xsh
.3985 lw
283.211 10.5645 mo
283.211 -98.7045 li
@
%ADOBeginSubsetFont: IAAAAA+LinLibertineOB-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LinLibertineOB-Identity-H 2 GetGlyphDirectory
19 <001C60D8A8C9B7B9B9AD522353F56D6BB648F0CCC02CF085526B2DD050C1
7A511CD81504E3B097ECE33B98836A7C4B1EAD1B406A2A690446286A984BBC18
B645BE0CABD5754D42B05B5FEE768C5F6890998C54D66D5738D447DD6788658B
22A77074BE7D5D9679DBF32A04C9759B6367DB77AA94674E3EE3B404EA67F966
395D3D1B6B00435365CB9D05FE99F9876CF6A8FE2BAD6994485BF8DA537CDD8E
646C4E94E108D1F5311FA327390E958475CDD4A076FAF0D692A6CD7316500063
A95E5923790F0B27D34978EF30B0DE953373E47A72400E94423A86F1989751A8
3E97FDA4B1D8F1CF6BF01E60F9D1DBECD8C70980CEEDFB032D7EEE7A29FC84EE
2C8F744D90A9728D272AE489ED2AB2AE222FDD50FD0D7ED5D7277732F234D742
B10DEFB67E555E0302D4B04ED144206690EE203A035E29CAA8DB3E49FA69D977
DB0D8910A43C72092D6C17C9F69A4CE5C972B139B5B1A10B591983> |
20 <001C60D8A8C9B7B9B9A7049E9649E7E8A125792EB2F756006B0BD6270EDB
5BC9B29584A164945947B9F2147D660812A57075936E0FBAA7DD08BB2F3EF076
584844156348B7B7E0B2495692FC16008E21A2587E9DC36F08F181F66E499DAD
99A6E122B1166C3497EE71065DD45AF034EC6BFA3C58C9107BCEE93870F91FEE
90FB62361DD99D6E4E16574F848C471630960597DC75B95BEC5508A5EFAD0EBF
FAA2DDB04ED6196DF4FF27D77FB9DD45695DFFD9F22EB3F12874E5D1697043AC
6ABFF5A11971CB81D02978CCC5C7394792FE3F2C14AE13B36C04E12195D6992F
38CA85FD88AF2E15A8E826537A5C86B8F3F3ABCB6C1D181E3FEFC1073657AA3E
1E204DCB429DA6BE07011A3123C850DCB8BE5B7E73E31B943F7B4861244827AE
717CB4E6B091F741FD2F05DBF52D495133F7B744A8498B0C2FADCA499C5BBFEE
67BB2D445F8FAEBDA7AF12158308FF450562B5F152C83656292BE82952> |
!
end
end end
%ADOEndSubsetFont
XXDFQB+LinLibertineOB-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
271.372 -91.0335 mo
(\000\023)sh
%ADOBeginSubsetFont: MBAAAA+LibertineMathBMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQJ+LibertineMathBMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D472 <1C60D8A8C9B649C73B89AA52EDF975163F54F72CC63CFB90D2BDA73
3E5BF9EE6B00D549A7AAA1AE5ED19E36292717903E5DE040E9C0DEB27F12C065
7F1C15683E19CAE5817AA243C70382939D178525CACB635BD2AF1D08E87115C3
475D4E79E9122A299486A4B602A2D58B7EAF231CF3B16A91A74436108FA0B5E4
643C351077ECF3642C35069D5EF5225027BA0C4727D11DC5374B8C93EF9A4315
555CE63ACCD2094F88C6B36E98819F8BFB2FD21B1F32DC14D3D3174FE7B0F76A
5D054A30A196C5C51067DA59DC1EF36AF87467FF45A2C1C6C2818B21CE9C5491
9785FABFF47D11990B55090164FD1E7050583A28CA984FFF220755956E87078F
CF8DBE90B4A7521CDF2DFE08451763049CC42FAA95372669C55F07E8BBD35BF5
A312493> |-
/u1D478 <1C60D8A8C9B644CFEFA868E51DB915223DF273A83EDC843579CD16D
EE86B99C37A07C00496214B56FD482CC58A5F5A5CE0A1451DF596A8D43E78BD6
873F10179242D761D405AEFC1D6E79458783B7A223E95C7B3847562C739BFAE7
EBDA4CA14AF1C5861648B8EFDC6B8A6BE0201D801B2448C01ABC8AAF9300B3EF
C4A16AE7258C370872051AA128105BE8AA09B635ED44C29C320C96A0CF1A47EB
879597CB80014B98E1229E9C382C8497AC6A96F2F97597AA5E6C0D55ECF37013
A> |-
/u1D47D <1C60D8A8C9B7B202C964AA4FF29AB5630B8947565D716353B98DCAF
FCB58121D01FFAED5B8309316772DF4499F334C2ADB4E68328D838343A5F13FB
FA0889267A0B0E9CE9D353382E014EE6A6AEAD01A3C7E2C43575710916264316
D8B3EEF7D133559CEB4AEC8D352E3FF56E5539086AB6D28A6D7B09CC60886BFC
357913C9DA1EF91FAFBCD488B853C917EFFA5D987F997048219180B6D19F7507
502F71B32F560BE8C920D4F9A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQJ+LibertineMathBMI /Encoding get
dup 81 /u1D472 put
dup 87 /u1D478 put
dup 92 /u1D47D put
pop
%ADOEndSubsetFont
/XXDFQJ+LibertineMathBMI*1 
[35{/.notdef}rp /u1D737 /u1D738 35{/.notdef}rp /u1D469 2{/.notdef}rp /u1D46C /.notdef 
/u1D46E /u1D46F 2{/.notdef}rp /u1D472 /.notdef /u1D474 2{/.notdef}rp /u1D477 
/u1D478 4{/.notdef}rp /u1D47D /.notdef /u1D47F 161{/.notdef}rp]
XXDFQJ+LibertineMathBMI nf
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
292.377 -91.0335 mo
(W)sh
%ADOBeginSubsetFont: IBAAAA+LibertineMathMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQF+LibertineMathMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D43E <1C60D8A8C9B65B4399DA516BF09AF555F195618AB89A43F6DC6133F
AA26007644640731007D231B2EECFDDB34A91763F8D4AA648894CC5E549E0BA7
DF8BA32D658DB1A34FE0C89A95D320DBACC0104A93E702BB68703B0FE223C627
994C413978347539C0629125112C581024EB4FD8FBCAF0A751D0404C929B18D9
E5B78B68EF9E140BC0C50C050045EC55DEBC2C69D93AD0725083D9FACB679BED
856E866D418FA8143CB1CC9DDAC9D7DA1E4E57BE26F9D8685DCA8A69692D4BD1
4927974CC39C74C6EDEC607D5D485F49157B14DC53DA2093F72E123C8C354794
0FFBA7D93145420886D7132C5D6A0747A18E1FA17A5972F3DCC3C7D4610488EB
C8DCD59A51E70AD6E83A59A76082AB40BAE5A6347455CDECC590BE23021B26E9
09D1524269590AF888FE1E3BDF33F941E55C2613B79FD0B239DDE01B6EDB9840
B7ACF49ABA5A5F8B7> |-
/u1D444 <1C60D8A8C9B611AF7F776B6DD632458484AF76C33774B82C6764700
1BABCC840DD93A0843BD7B305902A794CAF8ADA77ED13C688ABE5D010793B25D
DF681EF0732BF77E3619D514A83011E11C9CF242857E9CCB76F2DE9FB4B95C40
AD75429974A72968E99C3D0EC3C49A3CC38F048921383047813763C3D116C6F8
16D0963890494FEEF4BA491FFA84426AF02668F8F4D7A76912B1788BDE2D2893
CDA9100BC413090D5575208E490FC34941C25C1E8EF44EE093593294826DDC81
E864C054B6E224C1A4F07F4708DAE930EA4ADD7D6259C9A215C2D9E3767> |-
/u1D449 <1C60D8A8C9B67031A3D71482A28821AF99512E3EF1CD5C72B4C2F87
634C9D18E3ECE55F32783FA93DC7229C6909DF86CF232BB70D8BF86520435619
0E0F026E0F95704580A74ABDD6066EBF8F97D5DBF19754617290939E46E57F36
AC7CE6BF189F1168822179C42C3118911D34CB632FB7485129A254C816D9AE8F
DE96C257EC7C638F39883A6B29D24D4672853451D27AF1C8DEF1BC561835FBD0
FDC16F603559169A1E7B2BDEB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQF+LibertineMathMI7 /Encoding get
dup 32 /u1D43E put
dup 38 /u1D444 put
dup 43 /u1D449 put
pop
%ADOEndSubsetFont
/XXDFQF+LibertineMathMI7*1 
[17{/.notdef}rp /uni210E /uni2113 13{/.notdef}rp /u1D43E /u1D43F 4{/.notdef}rp /u1D444 
4{/.notdef}rp /u1D449 7{/.notdef}rp /u1D451 /u1D452 5{/.notdef}rp /u1D458 7{/.notdef}rp 
/u1D460 /.notdef /u1D462 /u1D463 79{/.notdef}rp /comma 106{/.notdef}rp]
XXDFQF+LibertineMathMI7 nf
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
298.685 -88.6835 mo
(\021)sh
%ADOBeginSubsetFont: OAAAAA+txsys AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQC+txsys dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/arrowleft <1C60D8A8C9B5062467BFCC6EA99F9AB2BB45944BD709ED1AB0E7
046796F88DE85E52B2420B8659F9EF3111E9DBEE0088C245> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQC+txsys /Encoding get
dup 32 /arrowleft put
pop
%ADOEndSubsetFont
/XXDFQC+txsys*1 
[2{/.notdef}rp /multiply 29{/.notdef}rp /arrowleft 17{/.notdef}rp /element 15{/.notdef}rp /B 
16{/.notdef}rp /S /.notdef /U /V 15{/.notdef}rp /braceleft /braceright 
2{/.notdef}rp /bar 77{/.notdef}rp /plus /parenleft /parenright 69{/.notdef}rp]
XXDFQC+txsys nf
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
306.041 -91.0335 mo
( )sh
%ADOBeginSubsetFont: HBAAAA+LibertineMathMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQE+LibertineMathMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D453 <1C60D8A8C9B830DBD0C7C39F8F6C8C3C56F2934D29D679E9CBBB5A6
5594F75D4B8410B34802FA0CF7619518876F39AADEEA58C21E4C726F3F7C8B86
BF0C6D7470FAA5FB619741281BE2A79C8C5DD5D0FC9E2A6BAB146DE3F6E789C9
F04A86BBC4018BA0BFC055B3EE74464DA6581CF29904DFC509BA723D6BBD355B
88DD8D5DDDE9B34E73CAAF1C0384C7629C0720E7335FD1C193527B7E2744D07A
D905E2B9FDEE60A0E60F851325D1A71069B224CF144E53E65EBBB4E9DAAFB772
46C4CB8D19D63F27943673B7142B9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQE+LibertineMathMI /Encoding get
dup 53 /u1D453 put
pop
%ADOEndSubsetFont
/XXDFQE+LibertineMathMI*1 
[17{/.notdef}rp /uni210E /uni2113 5{/.notdef}rp /u1D436 4{/.notdef}rp /u1D43B 3{/.notdef}rp 
/u1D43F 15{/.notdef}rp /u1D44F /.notdef /u1D451 /.notdef /u1D453 2{/.notdef}rp 
/u1D456 /.notdef /u1D458 4{/.notdef}rp /u1D45D 4{/.notdef}rp /u1D462 /u1D463 
15{/.notdef}rp /u1D6FC 63{/.notdef}rp /comma 106{/.notdef}rp]
XXDFQE+LibertineMathMI nf
XXDFQE+LibertineMathMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
318.161 -91.0335 mo
(5)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
320.686 -89.4215 mo
(&)sh
%ADOBeginSubsetFont: OBAAAA+LibertineMathMI5 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQL+LibertineMathMI5 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/uni210E <1C60D8A8C9B64D09A511C4CE9B7CF3A1E965E4E2B4F1EDA7FFA725
A2C62BA8A5A9DA2F43A3940262BAFAD96E14BCDBAD963C5AE7944DFB61564384
B2E28A8A1E1EEE509DAB14BD12F046194426488EDE85AF7D08214CD041A493F9
EED49E9E9CD0AEA736174B91C3084FC805A79F6CB57D7366F90B088AD989CF3F
6B130921D984C22969C99759E48EF784F393F34D599C600F73DD033F020B27FD
E60C8EAD43719B975462EAA2BEE3621FF62C9FA2844443E4CD2FA54F9425A39B
A0EA01EB8790AA18CD2E61248406BDCD24CC9A46> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQL+LibertineMathMI5 /Encoding get
dup 17 /uni210E put
pop
%ADOEndSubsetFont
/XXDFQL+LibertineMathMI5*1 
[17{/.notdef}rp /uni210E /uni2113 10{/.notdef}rp /u1D43B 21{/.notdef}rp /u1D451 16{/.notdef}rp 
/u1D462 187{/.notdef}rp]
XXDFQL+LibertineMathMI5 nf
XXDFQL+LibertineMathMI5*1 [5.4795 0 0 -5.4795 0 0 ]msf
326.163 -88.2315 mo
(\021)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
331.388 -91.0335 mo
(\271)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
334.643 -91.0335 mo
(^)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
341.771 -91.0335 mo
(\272)sh
%ADOBeginSubsetFont: GAAAAA+LinLibertineO-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GAAAAA+LinLibertineO-Identity-H 1 GetGlyphDirectory
51 <001C60D8A8C9B7F000D1B3D3D222E3D912DCD0D59C5A9D46770F70D40E29
471503C153D7A394D940E66E9549EC540BA0A64098727848E7FEADDF175D504C
7C412FB15D7ED01CF4AFD71BD97925E48D9FC4B8418A4E2F695185828A891837
D26B40FE688E5600F7F13BDE6F9663D0B6A32560D0B782A226E51F2595FA69C3
FFDB2D7E39A11692D50D067D3224AEF00BA5EF8844A93C2112D970031C19392C
56909B870727F23FC998D6DD3D459C362DAF54E0ED0A4A029A9ED7F622C6DDA1
F0189D0D62FCCBD581DDF97405750FB118791B3FF666AA166CC0BFEA05AEFEFD
113F5A3C3D6CE6AE1C5CFDB1D888E86A55F9A4282ADF8B59268783E4B4EC8303
7339BED0D15C6A3E5A0274B140909C5EB4CEBFCFFECA9C64C4F4C8B2D010DF52
2B01B1164F8076E330A201DDEB17C3450BC9A8D78D> |
!
end
end end
%ADOEndSubsetFont
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
345.205 -91.0335 mo
(\000\015)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
349.599 -91.0335 mo
(Q)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
356.1 -89.0695 mo
(\021)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
363.456 -91.0335 mo
( )sh
XXDFQE+LibertineMathMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
375.576 -91.0335 mo
(5)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
378.246 -89.4215 mo
( )sh
XXDFQL+LibertineMathMI5*1 [5.4795 0 0 -5.4795 0 0 ]msf
382.967 -88.2315 mo
(\021)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
388.192 -91.0335 mo
(\271)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
391.447 -91.0335 mo
(^)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
398.575 -91.0335 mo
(\272)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
402.009 -91.0335 mo
(\000\015)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
406.224 -91.0335 mo
(\\)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
411.653 -89.0695 mo
(\021)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
419.009 -91.0335 mo
( )sh
XXDFQE+LibertineMathMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
431.129 -91.0335 mo
(5)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
433.472 -89.4215 mo
(+)sh
XXDFQL+LibertineMathMI5*1 [5.4795 0 0 -5.4795 0 0 ]msf
437.64 -88.2315 mo
(\021)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
442.865 -91.0335 mo
(\271)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
446.12 -91.0335 mo
(^)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
453.248 -91.0335 mo
(\272)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
456.683 -91.0335 mo
(\000\034)sh
XXDFQB+LinLibertineOB-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
271.372 -78.4865 mo
(\000\024)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
292.377 -78.4865 mo
(\0003\000B\000O\000E\000P\000N\000M\000Z)sh
331.954 -78.4865 mo
(\000T\000F\000M\000F)sh
345.897 -78.4865 mo
(\000D\000U)
[3.84659 0 ]xsh
XXDFQE+LibertineMathMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
354.281 -78.4865 mo
(D)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
361.736 -78.4865 mo
(\000E\000P\000U\000\016\000Q\000S)sh
384.582 -78.4865 mo
(\000P\000E\000V\000D\000U\000Q\000B\000J\000S\000T\000G\000S\000P\000N)
[4.57281 4.53696 4.7612 3.83759 5.07492 4.65353 4.09766 2.42987 3.33545 5.73846 2.77957 3.27264 
4.51904 0 ]xsh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
447.688 -78.4865 mo
(Q)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
454.189 -76.5226 mo
(\021)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
461.296 -78.4865 mo
(\000B\000T)
[4.09766 0 ]xsh
.5021 lw
471.132 -85.9966 mo
478.139 -85.9966 li
@
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
471.311 -78.4865 mo
(Q)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
477.812 -76.5226 mo
(\021)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
482.677 -78.4865 mo
(\000\015)sh
296.528 -67.5275 mo
(\000X\000I\000F\000S)sh
315.33 -67.5275 mo
(\000F)sh
XXDFQE+LibertineMathMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
321.033 -67.5275 mo
(D)sh
XXDFQD+txmiaX*1 [8.9664 0 0 -8.9664 0 0 ]msf
328.738 -67.5275 mo
(=)sh
XXDFQE+LibertineMathMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
336.313 -67.5275 mo
(U)sh
%ADOBeginSubsetFont: LBAAAA+MinLibReg AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQI+MinLibReg dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/l <1C60D8A8C9B8622A135B30995216F83333B2A1996C171BA0EFEC59E039CE
821B867F4712CA3E29233C238EC39BD0D5F76B377D6644D28F39B51CE58CCD97
2A5AEB28BAFC4BF0330A9D9D63B7C8E114EE2B8CF9D0311DAC7B2AE8A7A5C75A
CE84AB1F3D309F8CBC190DB7F1C43C65AD003A85CFE2C35F6CF92849BC60EAFA
B221764152> |-
/n <1C60D8A8C9B79D2DD62EBC5183BCF32960FC8957A2AF8ED2B404E8A596C5
72F687EF218C489EB0E187D75F6EB246958DBC4BCEAFC1865F592A69ED5EDFD6
8DCC6A853C7F7BF332A266E9315003D3D265B930B452834BA862B03B1DC01276
465D364E760C9F185B1DE2BDCD863C493A6E16CF53DBF1420A376858E0CB3008
D035A7D51E5FD55F65561F8BE2C8E8B966FF8BFB8BA83BF60464F5A82EC99FD5
8AD69CFFD53300F5B1EBC44FE684EE143C937FD5AAE6BD9D41F71282E003E50D
0327A456AE398D7F50478D66667153A3F665E58EAEABE35EC2C82588C058C03B
0A568DA8BEDCA14E263589E43F64BF181F6B01934BC982D0582D5386FF4A69B1
23C01AF7349611CD1A06D6F8AAA93C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQI+MinLibReg /Encoding get
dup 108 /l put
dup 110 /n put
pop
%ADOEndSubsetFont
/XXDFQI+MinLibReg*1 
[48{/.notdef}rp /zero /one 15{/.notdef}rp /A 3{/.notdef}rp /E 3{/.notdef}rp 
/I 3{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S 24{/.notdef}rp 
/l /.notdef /n 145{/.notdef}rp]
XXDFQI+MinLibReg nf
XXDFQI+MinLibReg*1 [8.9664 0 0 -8.9664 0 0 ]msf
343.254 -67.5275 mo
(ln)
[2.36719 0 ]xsh
XXDFQE+LibertineMathMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
351.841 -67.5275 mo
(!)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
356.813 -67.5275 mo
(\000\034)sh
%ADOBeginSubsetFont: IAAAAA+LinLibertineOB-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LinLibertineOB-Identity-H 1 GetGlyphDirectory
21 <001C60D8A8C9B7B9B9AF88E37EB658E6A03931A2B9762D13CB243C82543A
7A1FEB88543E77398111447B4EB121034C0AF35A907C1B778A186F0D31D7108E
2580FB52E635BB38B717676DBD21623F76D19DA909F6626884D04E554548DF5A
9AB8871451C0827572E46B8C3289D7C9F6AB710856E4C594EE64AB2F2C18637A
C8ADBDFF3EAD1682F2B119B9B38933FAC20569B8630248013E758633188FDB23
96EF8C800268AEF81994E768309D99618C82C8023527202DA3B5BC02DC790B37
25906CFC> |
!
end
end end
%ADOEndSubsetFont
XXDFQB+LinLibertineOB-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
271.372 -56.5686 mo
(\000\025)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
292.377 -56.5686 mo
(\000$\000B\000M\000D\000V\000M\000B\000U\000F)sh
328.78 -64.2125 mo
336.617 -64.2125 li
@
%ADOBeginSubsetFont: HBAAAA+LibertineMathMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQE+LibertineMathMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D440 <1C60D8A8C9B6D9EA30CA38A14C1510EACE9B93E2F602E49EB76B05B
7EE465106B61BC55D9ED6FE897DB3BBEBBF5F4581FA740AFE50B9F71EE05F3DA
A365764715DA1F1834BA284102A4DCC3B3498ECD432A81E5AB75B615A5962E23
7E73FEA149616374C3B95F12D4CA82A7DC0EEC41CD2BDB1C168236EE581E1CE8
DCAFC8407A939A6D8855FE2C173854F1210195F64EDE149DD356F93DF2DE8B99
858BDD9389AF625D19869E767482B63D861BCD0D188B4B4B11F00606C6D6EA4F
773C141E4982D85CE645A52ABF9E7FD6FE74EED9B550935ABCB8477E55A9371D
87A6AC547C123FC410AC97451D5B2932908BDDE3AF7F3560BAC295AEE15B97E2
198EA891148AC067450169C96A1AA3DC33772C6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQE+LibertineMathMI /Encoding get
dup 34 /u1D440 put
pop
%ADOEndSubsetFont
/XXDFQE+LibertineMathMI*1 
[17{/.notdef}rp /uni210E /uni2113 5{/.notdef}rp /u1D436 4{/.notdef}rp /u1D43B 3{/.notdef}rp 
/u1D43F /u1D440 14{/.notdef}rp /u1D44F /.notdef /u1D451 /.notdef /u1D453 
2{/.notdef}rp /u1D456 /.notdef /u1D458 4{/.notdef}rp /u1D45D 4{/.notdef}rp /u1D462 
/u1D463 15{/.notdef}rp /u1D6FC 63{/.notdef}rp /comma 106{/.notdef}rp]
XXDFQE+LibertineMathMI nf
XXDFQE+LibertineMathMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
328.691 -56.5686 mo
(")sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
338.859 -56.5686 mo
(\000U\000I\000S)sh
349.78 -56.5686 mo
(\000P\000V\000H\000I)sh
370.599 -56.5686 mo
(\000&\000R\000\017\000\011)sh
%ADOBeginSubsetFont: IAAAAA+LinLibertineOB-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LinLibertineOB-Identity-H 1 GetGlyphDirectory
1756 <001C60D8A8C9B6AF046F888222CD14F275BBF69A5FBC0EB9AD919C6DCD
A0FC446D650D36D2D17D904C8ED2119653A990291181D1365E04EDFD50AB3DB2
A25F8322300DF55D396A2E1572F33BC6BB391BC24F2932682B99CC4674EF3602
72C3F83A45F85AD1C786C2E8C7BB4B2FB4E08B570562DD6C982D93923F36C47F
85EC26FBE5EC880038CF7E5091FA2441BA48AB97D49190B87224FC97B1005BF7
821C6790A6DCAE21363DDDF4C5CA05641487FC1984371CA1631BA6791B4F4B53
0DD928E7ACC5127ADBB1B4D0AC343DBC8B13877298C28325CC1BF94D19F01D95
3EBE3B3DB7F3B2F6026CBCA57D0AA915DFB46EFB8EE533ED28EC15FB780D637E
8D44A5226F434CA1276EB4A3EB58360433223A9087A2BCD0CD0F2585EF73647A
5353B39DAF507B0DC2AC8713366812E33A4337943201C6E8EB26CA51884A897C
2FDDB1FA0E7C06CDB62CA2457BF9E9A9B95D3DA3E0973F26CC030191663F7F5E
82C687C1C0D31E24D01B32C7906640DF7378763226B33EC662AC1E6454AD33C1
6E66223DF21D5692C5D6CE5DE3AAFAE2FF64F5D95CA95D9ED6613A11C84C8E44> |
!
end
end end
%ADOEndSubsetFont
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
384.757 -56.5686 mo
(\006\334)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
392.164 -56.5686 mo
(\000\012\000X\000J\000U\000I)
[4.9046 6.69785 2.42984 2.83334 0 ]xsh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
416.104 -56.5686 mo
(W)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
422.412 -54.2196 mo
(\021)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
429.519 -56.5686 mo
(\000B\000O\000E)sh
445.255 -64.0786 mo
452.262 -64.0786 li
@
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
445.434 -56.5686 mo
(Q)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
451.935 -54.6046 mo
(\021)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
456.8 -56.5686 mo
(\000\034)sh
%ADOBeginSubsetFont: IAAAAA+LinLibertineOB-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LinLibertineOB-Identity-H 1 GetGlyphDirectory
22 <001C60D8A8C9B7B9B9A7063A0370A7E74A34502D9BB95204C59A1A4F5ED3
2332380BF47755AB14E886D6F3354EF8CC12BB224B7EA6FCBCAEE9A9C9012F58
B1B1AAD8D06AA108D44B1A9542B5E8F4843CFC07FA0E72C1404B26583C1E7E7D
397069BC5C6D28ABDE5C1AAFA42285E7C32CE3904E0ECC067A3C7D26F3ECA626
725B2507363E625733CCF5172DD91371BEB39CC9CA94E1FAA0425CCE13691FF5
41086A9EE8414220635F9B5B1FFAB2887E9EF4870C21BF5255B9363B2F04E517
AB89BB7EFA5CF96D3E7F940AD7561FB4865EFC704D141A58A70B699A0F78AC5A
9203C2F5D283CE7524441A4D4C5DC967A3C66C746A5E4C0D8D13F9365CD5AEF3
F048F15468A92F6BA3F5E4F89B693575> |
!
end
end end
%ADOEndSubsetFont
XXDFQB+LinLibertineOB-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
271.372 -43.8255 mo
(\000\026)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
292.377 -43.8255 mo
(\0004\000F\000M\000F)sh
307.162 -43.8255 mo
(\000D\000U\000U\000I\000F\000U\000P\000Q\000\016)
[3.83759 5.07492 2.83334 4.82385 6.24963 2.83334 4.51904 4.65353 0 ]xsh
XXDFQE+LibertineMathMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
344.489 -43.8255 mo
(D)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
351.945 -43.8255 mo
(\000R\000V\000F\000S\000J\000F\000T)sh
380.736 -43.8255 mo
(\000V\000O\000E\000F\000S)sh
404.479 -51.4686 mo
412.316 -51.4686 li
@
XXDFQE+LibertineMathMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
404.389 -43.8255 mo
(")sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
414.557 -43.8255 mo
(\000B\000T)
[4.09766 0 ]xsh
424.393 -51.5316 mo
431.028 -51.5316 li
@
%ADOBeginSubsetFont: MBAAAA+LibertineMathBMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQJ+LibertineMathBMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D47E <1C60D8A8C9B699414DDEFEF9F066F90090545852373FA580595A577
159BFAF542EB7A40695CF4BCE7FB8A195E3C72AA767261F094BFF7083DE96A15
4CB1036B24A76E471FB2F7080508269E91D4CE4277A5C6FE93F4375BA369BDDA
7F3BAA6820BDC7E762B87CE567E4B86D8D7C2495BC33C3784B876F52F7D709DB
860BD8CC9732B061DB354724EC10DAF393C69E6FF13C2449FD0CE6F96362449E
C5E1EA8318B62B785478C2562AF8AE376978B6E53D8A7F69914BD0CC14DC7D14
3011353168E85CBAE6F30E3F2940FD73A293147325B2E01FB0C044D670741AB6
9A87F394B47ADFBA74AAAF42F33FACABA496A7BCE435EBFF455A4EE4F1A3569B
7BC3B108DF751EC312B82ABB83E73CE6BFCE0DFA65753BEBD7964CEA68D26E2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQJ+LibertineMathBMI /Encoding get
dup 93 /u1D47E put
pop
%ADOEndSubsetFont
/XXDFQJ+LibertineMathBMI*1 
[35{/.notdef}rp /u1D737 /u1D738 35{/.notdef}rp /u1D469 2{/.notdef}rp /u1D46C /.notdef 
/u1D46E /u1D46F 2{/.notdef}rp /u1D472 /.notdef /u1D474 2{/.notdef}rp /u1D477 
/u1D478 4{/.notdef}rp /u1D47D /u1D47E /u1D47F 161{/.notdef}rp]
XXDFQJ+LibertineMathBMI nf
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
424.393 -43.8255 mo
(W)sh
%ADOBeginSubsetFont: IBAAAA+LibertineMathMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQF+LibertineMathMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u1D43B <1C60D8A8C9B60287BE985D93D40AF66C73F21519A0B509EE3114B1B
94C2C3EA41774EECC6E0DE25CFAE58A831E4DA9254A2DA7D14B9BC37F9E24285
269DC3E8F1A5D45DCD92A2AB6058030344B353363F2395D393DE07F4BBFAEF6B
92E4E9B5F25AA475A9FE76AC20728E79A72FBBE553DF422FC28148EA10B7AF93
DC14AA375F04C9F5C05DC60530EAF16FC81E090B6C28290C4C5CA693D4B4A131
ED3D2725FAB7AB0FF6132B10D6D3CEC08AA6A945AA6DDA8D50E928680396B0AF
E566683A8BAB227BB72D47D0A40D25744C271245D67C7FA264D15628A2B067A3
895167B2AF595673FE157682038B3903833EC8BD494BAB264AA063ACDAE66B7E
A48824CB93DAFE71F9AEB617B14FF9DF8D7867D832F0BD23B22249362D1D2446
6BC6073B1CDDA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQF+LibertineMathMI7 /Encoding get
dup 29 /u1D43B put
pop
%ADOEndSubsetFont
/XXDFQF+LibertineMathMI7*1 
[17{/.notdef}rp /uni210E /uni2113 10{/.notdef}rp /u1D43B 2{/.notdef}rp /u1D43E /u1D43F 
4{/.notdef}rp /u1D444 4{/.notdef}rp /u1D449 7{/.notdef}rp /u1D451 /u1D452 5{/.notdef}rp 
/u1D458 7{/.notdef}rp /u1D460 /.notdef /u1D462 /u1D463 79{/.notdef}rp /comma 
106{/.notdef}rp]
XXDFQF+LibertineMathMI7 nf
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
430.701 -41.4755 mo
(\021)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
435.567 -43.8255 mo
(\000\034)sh
%ADOBeginSubsetFont: IAAAAA+LinLibertineOB-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LinLibertineOB-Identity-H 5 GetGlyphDirectory
23 <001C60D8A8C9B7B9B9A703D110A0FC12D8F1E4168FEC52EF2C680F3664B3
8281FD524EDA1EA94908FC96FFB1B0BD4FC5EA997C3620559B312B0F574D25E6
7185ADC80C1E0B4DF1AA297CB0365DBC5131CA28E6681B6C4CAE6BB294CDC93F
25D5062E9542323CA0873567A21A600B6F13E0C7750DDE05675F17F23E4B6978
2BD5E7BEB1FC745D6F0F1905AEC0393FC511C043821D14F5FD27202BB8D6000B
6056CD6C2546CFD6997A57826C4FB2C78135295BB767799A78BFDE788B75AB4C
60C7288FBF8A6E2F69731B2A8DE2F4F015843824FF3FCD1372AD82B4A459F8B6
2456C1C675A918C4085CD161E5ADD02AB2CBB35F0FFFE9F33AB213DD99D48933
46E13824> |
24 <001C60D8A8C9B7B9B9B2E67C1BD54E7F6861480A78AB2E2A6A58FAE4DFEF
5FC517E81145875C7C6B09339DEA00AC46FAC187EF90433BE168605E23DCFF2A
6EE3AD10B13D1078A292A504C3005DC3C61558BEA4318AA6A7C5CE4DE98DD09F
A9EEAE7FB67837CA47271928CD67A40B4F5C656971AC31D63CD817DC45A7B847> |
25 <001C60D8A8C9B7B9B9A70203C9CC5769463FCB90CF3CF3B9DF411C6FB7D9
100238DA1F537A1214DC39CC61982AF7EE28455DC3D35C06A550D89B131C41D3
306E1F5286A0B252CE364B7BE9404EA4128CFAE731622E3CC4B17EC9B6286633
9205D0BA6E97ADF3108890F2A7A1D08947C18AA9F8E72B4C8C4C6563B6F82137
439ACEA23BEB90DBE5E69BDF56A4D171B09E9B747194D9EA438C1061D7843119
8D5CE11C4CEF7680487358D7CC370FC31F00A27E0715AD0C541CB5C15C6D645A
130A75EF3F57B41083B4145AA9F888B0CBFDF127C9BB6DFF2664EFDB0089> |
26 <001C60D8A8C9B7B9B9A7056C5C3A5993F54789451139DB41AAD668B3DDAE
4A208EA12A4D1246A0FB9FF07A211661E9A36F0B76BBEC1A7459B0530C8C9A12
F7ADC7AA48C9722DDD60B1107ABDB8B8CC03203FA2A3AD4DB86BCC2649BAFB43
D9301A975320E887865359A5F5AFEB83415721D996F35296445D3C4058076532
D978784450923C44D1951E255FEF1C73692784F4747BDB04F618C60A961E7E45
CBC869BB850680F915088C603A6D9FDB2A4E24D3566341544683543CFAAE43F4
3BF34709FEAC0BD1AEFE161274B0D62B88235CB67DC9C24572F19DFD18A4573F
C24AE828E31F027E4A7CD5FB2E5786D4581AF6EB3538C53A768329B37FAEB416
4ED257BF> |
17 <001C60D8A8C9B7B9B9A7049E99AD73666B99B8BA65AFC44A4A638AA45365
193CA4F17D0192C4C91B478D42F440C563920EA26DB4EC7D7995DC98711C2965
FCAB10AF89931BB684793BCD1AF43EE96919C7C032EAF76561454E4E3116C9FE
9EF10B1DBEACE9375C13F84806126212B0F70C25146F6A72868BAFC67AF856E3
537DDDE2841718F6B48FDF9F04A63658C4EDE6D07F7770D2C8E25D5F> |
!
end
end end
%ADOEndSubsetFont
XXDFQB+LinLibertineOB-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
271.372 -29.8035 mo
(\000\027)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
292.377 -29.8035 mo
(\000$\000B\000M\000D\000V\000M\000B\000U\000F)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
328.691 -29.8035 mo
(^)sh
%ADOBeginSubsetFont: OAAAAA+txsys AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQC+txsys dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/bracketleft <1C60D8A8C9B81F2C36D726FF2907009F65D16F7A24E255AF08
EF9F4FD4620C37C77D1FC618B363A735B8A472014E2E4293D675A5F111> |-
/bracketright <1C60D8A8C9B81F2C36D726FF2907009F718E74075B9DDCA0F
0A5DE81B379502322FF95AC7DA702D742A1A701240055A5EF9916FBD4E8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQC+txsys /Encoding get
dup 187 /bracketleft put
dup 188 /bracketright put
pop
%ADOEndSubsetFont
/XXDFQC+txsys*1 
[2{/.notdef}rp /multiply 29{/.notdef}rp /arrowleft 17{/.notdef}rp /element 15{/.notdef}rp /B 
16{/.notdef}rp /S /.notdef /U /V 15{/.notdef}rp /braceleft /braceright 
2{/.notdef}rp /bar 77{/.notdef}rp /plus /parenleft /parenright /bracketleft /bracketright 
67{/.notdef}rp]
XXDFQC+txsys nf
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
336.401 -34.3955 mo
(\271)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
338.859 -34.3955 mo
(\021)sh
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
343.226 -34.3955 mo
(\272)sh
XXDFQI+MinLibReg*1 [7.2727 0 0 -7.2727 0 0 ]msf
335.819 -26.4815 mo
(1)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
348.97 -29.8035 mo
(\000U\000I\000S)sh
359.891 -29.8035 mo
(\000P\000V\000H\000I)sh
380.71 -29.8035 mo
(\000&\000R\000\017\000\011)sh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
394.868 -29.8035 mo
(\006\334)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
402.275 -29.8035 mo
(\000\012\000\034)
[2.67203 0 ]xsh
XXDFQB+LinLibertineOB-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
271.372 -15.7256 mo
(\000\030)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
292.377 -15.7256 mo
(\0004\000F\000U)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
305.719 -15.7256 mo
(^)sh
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
313.429 -20.3186 mo
(\271)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
315.887 -20.3186 mo
(\021)sh
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
320.254 -20.3186 mo
(\272)sh
XXDFQI+MinLibReg*1 [7.2727 0 0 -7.2727 0 0 ]msf
312.847 -12.4046 mo
(0)sh
XXDFQD+txmiaX*1 [8.9664 0 0 -8.9664 0 0 ]msf
326.247 -15.7256 mo
(=)sh
%ADOBeginSubsetFont: SBAAAA+LMSans9-Regular Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /SBAAAA+LMSans9-Regular def
/FontInfo 7 dict dup begin
/Notice (Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).) def
/Weight (Normal) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 116 /t put
def
/FontBBox {-433 -313 1466 1155} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 444 461 654 676 694 716] def
/BlueScale 0.04546 def
/BlueFuzz 0 def
/StdHW [65] def
/StdVW [96] def
/StemSnapH [43 59 62 63 65 68 69 70 71 76 86 96] def
/StemSnapV [60 64 74 77 80 82 83 84 86 87 93 96] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/a <1C60D8A8C9B08A95DCFF4B6D9A02AF26D2AC0C3167AF56FAD1CF34022502
54ED0AB3F333BDA66E9E3BE3174574D0F65AD4D96C8661684492A95873D190C2
2768B93DC3A9000A108293DAEFCCE38BC1CFDB7866D9144E5908CB7C085656BB
213722DAD85B97F5E4E6F02F5F6BD4B2905D4F39B56E2FD04C7A51F8> |-
/c <1C60D8A8C9B08A95AE6E164BF06D3E68849DD5CAE47A43195AADFB8DA627
2AFFFA90A20B4AD8D15C07AF813B66F1C86766C557D06E208DADE0BC0C64CDA3
CF4763730AA941472C79B7954A0EF0AD36963F2677C78331738FF809> |-
/e <1C60D8A8C9B08A95AE6E164BF06D3E6BF0BD1F6CDC1399C0E251EBA883AB
A978F5F3B67C8C688921313CEAF4F3FA9E2AD18FA4E4755BBDA3C0ED76F29B82
5C44B1F2FF09F478ACC07994A714DF2BCC4335AD79B974C79C467CE4AF00F280
9284BBC0EAC8CF0D25EB7F00BA984991AD9BCB> |-
/m <1C60D8A8C9B08A94708B5552FF3D31F27272BB8B232E7E9985868C203489
F64B5039251577FBC3D253B6ED7C80FFC5A3B17DAEA69AD384B3A71E96CC63A2
7227DCFB5FEED2122544938B6EA223ECF44AB5863A60341BED928E677A6456FA
98D0C0EB8B6541D5AD1DCD21E694A0EB> |-
/n <1C60D8A8C9B08A95D389FF3B6F40F629112D8618E525874D8BA741050E1B
5804CD85EBF5A1A6559CFE3B665701B1EBFDBCC593015A09DFBA6F352399B269
D61859C918A33C71BD1FA3CF> |-
/o <1C60D8A8C9B08A95D419B460E029BC5E2B28EC2D04EC3E48F313F8D98C32
940F9391A280C509858ECFC4363CEF3ECDFD6B599C81150B0186E6FE891923CC
2D34A931F6B4A8AF9A05D9D206A2E6DAA62BFB0423F9D0D5DE9DC9FA7A01E8> |-
/t <1C60D8A8C9B08A958C6C343E33A4270C8FB63E980FB9527647D0D53F99FE
683D524156936E20DFFA6F6C0D09F57CDABD8C59F83EF2514B52C12CE1FA252B
D1CE80C9E7D82D6C1CD2ABC4A54920022873DFA7BCB581BC307768> |-
/.notdef <1C60D8A8C9B8524C50> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/XXDFQP+LMSans9-Regular /SBAAAA+LMSans9-Regular findfont ct_VMDictPut
/XXDFQP+LMSans9-Regular*1 
[97{/.notdef}rp /a /.notdef /c /.notdef /e 7{/.notdef}rp /m 
/n /o 4{/.notdef}rp /t 139{/.notdef}rp]
XXDFQP+LMSans9-Regular nf
XXDFQP+LMSans9-Regular*1 [8.9664 0 0 -8.9664 0 0 ]msf
334.045 -15.7256 mo
(mean)
[7.32022 4.09589 4.42764 0 ]xsh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
355.097 -15.7256 mo
(\271)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
358.441 -15.7256 mo
(\\)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
363.87 -13.7616 mo
(\021)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
368.736 -15.7256 mo
(\272)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
372.17 -15.7256 mo
(\000\034)sh
XXDFQB+LinLibertineOB-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
271.372 -1.58655 mo
(\000\031)sh
XXDFQI+MinLibReg*1 [8.9664 0 0 -8.9664 0 0 ]msf
292.377 -1.58655 mo
(PSA)sh
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
308.39 -4.84155 mo
(\271)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
310.848 -4.84155 mo
(\021)sh
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
315.215 -4.84155 mo
(\272)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
319.165 -1.58655 mo
(\271)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
322.42 -1.58655 mo
(^)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
329.548 -1.58655 mo
(\272 \273)
[5.91776 12.2122 0 ]xsh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
350.848 -1.58655 mo
(^)sh
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
358.559 -6.17955 mo
(\271)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
361.017 -6.17955 mo
(\021)sh
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
365.384 -6.17955 mo
(\272)sh
XXDFQI+MinLibReg*1 [7.2727 0 0 -7.2727 0 0 ]msf
357.977 1.73445 mo
(1)sh
%ADOBeginSubsetFont: HBAAAA+LibertineMathMI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQE+LibertineMathMI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B88EAFE27C08487AEF355FD43805358408451289FA7DA
B5EF7FEF47EF8A9B1F5AE56> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQE+LibertineMathMI /Encoding get
dup 148 /period put
pop
%ADOEndSubsetFont
/XXDFQE+LibertineMathMI*1 
[17{/.notdef}rp /uni210E /uni2113 5{/.notdef}rp /u1D436 4{/.notdef}rp /u1D43B 3{/.notdef}rp 
/u1D43F /u1D440 14{/.notdef}rp /u1D44F /.notdef /u1D451 /.notdef /u1D453 
2{/.notdef}rp /u1D456 /.notdef /u1D458 4{/.notdef}rp /u1D45D 4{/.notdef}rp /u1D462 
/u1D463 15{/.notdef}rp /u1D6FC 62{/.notdef}rp /period /comma 106{/.notdef}rp]
XXDFQE+LibertineMathMI nf
XXDFQE+LibertineMathMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
368.617 -1.58655 mo
(\225)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
372.084 -1.58655 mo
(^)sh
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
379.794 -6.17955 mo
(\271)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
382.252 -6.17955 mo
(\021)sh
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
386.619 -6.17955 mo
(\272)sh
XXDFQI+MinLibReg*1 [7.2727 0 0 -7.2727 0 0 ]msf
379.212 1.73445 mo
(0)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
390.121 -1.58655 mo
(\274)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
393.645 -1.58655 mo
(\000\015\000X\000I\000J\000D\000I\000D\000P\000O\000D\000B\000U\000F\000O\000B\000U\000F\000T\000B\000M\000P\000O\000H)
[4.2052 6.69785 4.82385 2.42987 3.83755 7.06549 3.83755 4.51904 4.85986 3.83755 4.09766 2.83331 
4.00806 4.85986 4.09766 2.83331 4.00806 5.73846 4.09766 2.36719 4.51904 4.85986 0 ]xsh
296.86 9.37245 mo
(\000U\000I\000F)sh
310.766 9.37245 mo
(\000S\000P\000X\000B\000Y\000J\000T\000\034)
[3.27264 4.45627 8.93042 4.09766 4.39359 2.42984 3.49689 0 ]xsh
XXDFQB+LinLibertineOB-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
270.973 19.2325 mo
(\000\032)sh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
278.529 19.2325 mo
(\000F\000O\000E)sh
XXDFQB+LinLibertineOB-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
267.901 31.9165 mo
(\000\022\000\021)
[3.07254 0 ]xsh
XXDFQI+MinLibReg*1 [8.9664 0 0 -8.9664 0 0 ]msf
278.529 31.9165 mo
(PSA)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
294.408 31.9165 mo
(\271)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
297.663 31.9165 mo
(^)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
304.791 31.9165 mo
(\272 )
[5.91776 0 ]xsh
XXDFQP+LMSans9-Regular*1 [8.9664 0 0 -8.9664 0 0 ]msf
322.388 31.9165 mo
(concat)
[4.09589 4.60782 4.76025 4.09589 4.42764 0 ]xsh
%ADOBeginSubsetFont: QBAAAA+txexs AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQN+txexs dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenrightbig <1C60D8A8C9B8476F0367CD8F2B9BD7EEA0BC66858C3C5862
A3F893CF0E89F5B7E7BB792A22C4880FA619BC5C9F177E3651A6E2A78866E6A1
3A3643412C12699DD5AE> |-
/parenleftbig <1C60D8A8C9B8476F49591E60E0B3B667740F586564DFEBBCB
52C0215A959E917A906A46675947F172F54AE10DEE288C3A9C879F1AB0316F8C
1B9A4FD736D14> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQN+txexs /Encoding get
dup 1 /parenrightbig put
dup 32 /parenleftbig put
pop
%ADOEndSubsetFont
/XXDFQN+txexs*1 
[/.notdef /parenrightbig 30{/.notdef}rp /parenleftbig 65{/.notdef}rp /hatwide 2{/.notdef}rp /tildewide 
154{/.notdef}rp]
XXDFQN+txexs nf
XXDFQN+txexs*1 [8.9664 0 0 -8.9664 0 0 ]msf
348.42 25.0815 mo
( )sh
XXDFQI+MinLibReg*1 [8.9664 0 0 -8.9664 0 0 ]msf
351.226 31.9165 mo
(PSA)sh
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
367.239 28.6615 mo
(\271)sh
XXDFQI+MinLibReg*1 [7.2727 0 0 -7.2727 0 0 ]msf
370.025 28.6615 mo
(1)sh
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
373.407 28.6615 mo
(\272)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
377.357 31.9165 mo
(\271)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
380.612 31.9165 mo
(^)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
387.74 31.9165 mo
(\272)sh
XXDFQE+LibertineMathMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
390.905 31.9165 mo
(\225\224\224\224\225)
[3.69415 2.26852 2.26852 1.86502 0 ]xsh
XXDFQI+MinLibReg*1 [8.9664 0 0 -8.9664 0 0 ]msf
404.555 31.9165 mo
(PSA)sh
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
420.568 28.6615 mo
(\271)sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
423.208 28.6615 mo
(\035)sh
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
429.291 28.6615 mo
(\272)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
433.241 31.9165 mo
(\271)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
436.496 31.9165 mo
(^)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
443.624 31.9165 mo
(\272)sh
XXDFQN+txexs*1 [8.9664 0 0 -8.9664 0 0 ]msf
447.238 25.0815 mo
(\001)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
450.313 31.9165 mo
(])sh
XXDFQF+LibertineMathMI7*1 [7.2727 0 0 -7.2727 0 0 ]msf
458.91 33.5275 mo
(!)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
463.689 31.9165 mo
(\000\034)sh
XXDFQB+LinLibertineOB-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
267.901 43.8714 mo
(\000\022\000\022)
[3.07254 0 ]xsh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
278.529 43.8714 mo
(\000S\000F\000U\000V\000S\000O)
[3.76587 4.38455 3.20999 5.36197 3.83755 0 ]xsh
XXDFQI+MinLibReg*1 [8.9664 0 0 -8.9664 0 0 ]msf
306.854 43.8714 mo
(PSA)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
322.733 43.8714 mo
(\271)sh
XXDFQJ+LibertineMathBMI*1 [8.9664 0 0 -8.9664 0 0 ]msf
325.988 43.8714 mo
(^)sh
XXDFQC+txsys*1 [8.9664 0 0 -8.9664 0 0 ]msf
333.116 43.8714 mo
(\272)sh
.797 lw
268.566 49.5504 mo
508.813 49.5504 li
@
%ADOBeginSubsetFont: IAAAAA+LinLibertineOB-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LinLibertineOB-Identity-H 13 GetGlyphDirectory
35 <001C60D8A8C9B643FE970CDB34B0357389A8E99F0E5C8BAE2675F56291C8
6384B7C685D6747D3BA04458766858373B83D52433639247EE069072EE51104B
9D35B254DF63E42F35600BE23CFEB4E42D32005ED3E94B1509E62A6B6514B1EF
FB7ABD5604D6476A289A903DA05BA23AC9F04A078B019BFB79C08A38879F2566
D5C6E1E1E97F9ACF6184FDE3D29A59FA242BA1B87FE4887FFF194F5680A10D37
16AC88EEB427AFF87363232A0F23C57AC4A852AB412E208868025E5CE9A260CA
FA3A7D6596FFA8876DCCB5230F94F03F5E76A3E9AE2804D56F1D0255C1AF885F
C6B374138BCFD70C100D9F5DAF80B40656B0D4DE7F758FDA76EAD2C912AF9F77
DA5A90C111FB> |
11 <001C60D8A8C9B76A0D36D61C435185A2C60BB998AEDF97A525A423FC6440
394F651289D3C2C724E92C633B9954DF13C478E21308A3B48A1AEEFF815202AF
D798123B755B3C30CBB133514EE524522B49440C0055D6DE976AA25BBC4D7129
B1C87B7B5D24D1858F1D4060A329E30656B61C08035DE88EE3E04FC5AA0DCBA8
9F281EA8E3211610E219DD6538C5E222074C1D44> |
82 <001C60D8A8C9B7FE5AD1E14D255DF87A872E2329438D690AED8D45669038
B472E9E7C510D6C736200138275940EF99641C82D2BEC64620B3455471CDA549
889FC9F97795F501B41780D5D89C0337C475CF8599E4343D14CAA90A862F53E1
77E925DF1F8504808ECF45733E01D42CE7250A49DFEE7F54FC92C889583279C1
4BB1F41DD4010D9B6E837A6A92630D4E613BA708BF36984F1ACA9BAB5F24BE0C
C69A548B44FC0F28F7872F3CAFA8A92F0DDC20FB20C431CE5FF2D4844FC20FD7
48CC55E3C28B8C12733554D47D5F5BD87B238FC7B8DA7807C74067DB0CBC1B52
1B909CF80172596BF89108F204E33C46FF0D99E25D4FAF91E46232CC26F47C15
3E0C15D98AD656682EFB> |
51 <001C60D8A8C9B601B675DF8EF7C5F577F57A24DE2D708C2F810425F06ACA
FEC1D431DA774CDFA23B0321982FD51361394759454F1C1BD5088EECF3BEF474
681AD0012CA1AB81F15CDAB1BC2CA0A6011A03300D629416045D822D870E2F1A
4A6F181C4A48E9AC5D865FCCDE6CB9D5CC70B44016D1ED0755D6944BB466273C
2FDF32243598B0440D2467FD0228D86CBD4A7D55B400997540BB50A0B7932D17
81C6B2EEC6B6BBFA471BFDCE4D5DC00AE9D6BF2B705422AD86D7146520732EC5
79BEBD1246137C72D8235384C578A5B01A850F185FF7CFAE3AFE3B8D5A9A8B8F
4B34A76C3A80290EBAEA71ED3C1860EE1F74A960A6267D9853D25BF160E9AFE9
4E26955334D9B5D06316483F868B2A9614D6DD3D1E9196E9121099ABAE0105C1
B6958EFB0284D06DF655295E927D373D69B9E9FA7ECCA91A643C40DD7F0AC384
8992451657B5E5B526681321030653A6BFBE1D9A7F68845B5190970CD55E57FD
5A42A43189FE97> |
36 <001C60D8A8C9B6374B4C1A150282C6FD4021F8F77D614FC793AEA453689F
6EFD1F753EDC7533163E2171CEF1F72DCB555EF891BF70C9176A2F9964CDA820
38658AC071DF371D93431B1AEE4AD6D74B454E17273F8C3BCA40D86F3D810D39
59292D3CB2DAC6B0854C659CBA34A5369419AA021D4FFE7B3E7D034A189CB30D
6202D79743D923432ED3F4000C37A2F695FF5C81692B27268EE77CED3E0461BF
AA599D75B4F04E0A03D0A26DE7BB> |
45 <001C60D8A8C9B7FA130B84A2BC97897CE1A8BB70EA01DC5A123651F527CA
5A06A161B02B9E4C88456DC97BAACB1F5B695CC0C480E0172D1D0A4A51C0F2FD
95D3CDBD4652CB61B44BB5D94C56A5C4CD16D217425088A09C86D9D91E80F00F
AFBC36BD986FA42BADEE85A624868385BA723DBA085B06645921BFC1D3940708
8E2D8BE87074DA5F175CB919AD68DC9C108295C02B93B84634CCC575F92F9926
E5D9151F39903917EA0D2E4C04D56666F610FA08C80B705176B0ED4059D44287
83D9CAB86522FAB8C8E6987257D6B32521A0F32680C6C557330C01CA> |
37 <001C60D8A8C9B6133267792AF370FDA77D89A45619C5D8581709661C2715
EFBFAB6042061065AC061F26EAF0DA21FCBE580E5F61DA34CCBCC8BC2A3FF0ED
114CC2483CF8918C4BDD2841BDB4F397E2F7C095FDB00A69EE2D6BBEEDF68427
809160506D59B435BA68659043A2EB142ADBD4CA40E6E359CB7FF655E586DC76
4E342A9FED99FEE36353BB6AB16DE72ED79C6924826CF4635B68C517CDCDBBD7
2194DE63E182F13D144C0F86F23264FFE040BFD9FD822DCB5746513E5FE2A1E5
EAE8EB> |
46 <001C60D8A8C9B5859C6477B19466B096FA89131066C3F24CE7A58DD5BCDE
6186E418910852361CFB531AB53FEE7627478289605F4BC39640D8791BC75792
47E22F0D89B60EB6CF37E347A68E6968347A77A1472B6090411D0F637827D6C1
2B4E74600A880553741B782057DF5FD8EE68CFA0C443214B552F10527D170BBB
3CE16B380D8A89B99D434931D09DD64F1246E4040C8E36A9F397474A1258C23E
C6471208582954687C5A78E419A41FE21F8488A158FE6CACE11E34C8558DE23A
BC35ADDB04DC4A0DCF0734C0FF23B5B0F2CAB38272F900FE8A165050708F1BB7
DCF7AFDC14B4BDAB7849179FB7BA06B0053608278156E0DB9995B6D4AC83F118
F44C0783263ED67524008EE047B768763FD4C3979D5783AFFB18A81D9291031E
5C4C43FD254F064BC923A12990> |
87 <001C60D8A8C9B78AC349BEF3FD4E8F0A06E22081A00515BF5C60B583FC1D
AE16C831CC00E2C503EA3E73C343D59DB437CD78727FFE703102EA64ABFA558C
2778CD161731221590131FAD96889C4C5C4134DBF91FBC2AB999C1813B753A99
9457D0E0575043BD2DC2BC0448A769180EBDEAD794C09A458AB7E9FC7DCE9BDB
4DCE9C0BE73100CEAEDBFCEA3B4100148B513DC0763CA18157D47D39C5AECAB4
A3FCA4E4BF7A7D2D65183B919A6F3EA530478EA72A4B55C83D72915209EC2784
F4175AF8E0ED18DBB20E74426F608E0585A89F618DE092A728A8AC68F870E6C7
8D53A7340405C26AF45D2D3D2200B1461A02B58D33BBB64B827AB9382994C43F
8A07540020731BDC> |
40 <001C60D8A8C9B611AF0507C81A989F65242A09CA7D7704D1517AA4C9585E
19E87E6C95B7584B425F266A3841879B25C79158B010BCB9D96001AD75006EE4
F7A77DFDDE845D0B65EC0D0142CACEE264D9E4E82E47D579B70E373C919122AC
1E94DA57560EA093C3F9414F8891FB95426B51799A835564F1384D8925B08BA4
2E9BF39C197F8EFD427E78F27109AE00DBFF1AE9751B8ABA0B2712BC6C2EA022
053DA4C96F5229EA0B6FE84E50BA757F0822D64747A43D8F3DB4C73D5A2136C4
07FBA4F47234B83846CEBF9410B69B748477DC61EA1B943F7B7FCCAC2998944E
9A503FB869D718> |
47 <001C60D8A8C9B619181CBD95AF2D1B32DBE7B6EBE9F587EDD36796D70A84
4ABF52D92184607DB03A0502CE9401A582EA20A59CCBFB9557EEA2580008A472
A216C044533CBC84F275D82D68123E91D183C805AFF73C3F0B37DDF71D78B786
AB6F80C877230DFC159042D7578069A3CA206D0C7ECEC76A23F6C45AC4102D7D
9F8AEF2481C59D5C3736CFD981863D71895A347783F9041F69ECC073B1A52DAC
DC5AC9807EEF0ED5CE5AE7B22952B241278615D3AD6A0220752FC63AACD688EF
7F15EB2E24D45A923C892A4E24A758821AAB76404D3A1D1E5F1E71417BB0730B
7A80E90C2B9AF12699BB4F1EEE74BD6E4EFD35E6F7DC77D59FCC0E2FF344D594
FBAB79BFE17D83528FA7683C7345E31581264DA5DCB8AB0733BE08D3D1E70E24
B1650C8A75D6FC8544BD7611DE0BBB7BD53136652B9C3163AAAD33E2BC7B8136
332BDCCB58> |
49 <001C60D8A8C9B7D545095BDC4211B398CB7CC2F249BEC4C4CEAE61A7F0AC
E150A68E92C9C1EB4CE9E59C07B2F4DB4DFD4AE038DBA8E92EEFFC18BD3C8097
A45AD3BEAD26134C1D3A6485B54AEC3DB8E8E04E673FEF105723AB409B785DE4
F39DBF9B10A60D6C5916749319B7D1ED754EFEE970B5B0433A5B4A9264986F25
D6147ACB365DCB96A3C496852DA8994994DF2C5B6A602ED8EBC7F7DF30D9B20B
3B5AAACFBCF8C98C575B631870F3711A56D63771BDC856F8CB091E8D83F1764F
7EC3CC508E344FB77009ED9910CA8A24CA11F97F8515F1363FF87FAA9E1D98DF
AC8CDB73AEB302EEE886E2278150EF4BFB9A388CE53EB5C2348211FFA120C7B4
7DFF4495B520DC0D13E76D5475F2B1DD51B430D1559A3E96C22C13AE> |
41 <001C60D8A8C9B6A4263F1C2F026BBD5DFA6E104E0B60A8F3BCAF21638249
E663DA3D3F06753A3BA5E37E4E6C8A8832B692C9511EE8F0DDF793D6B55A1BB0
684D4407428BEE2E5F0772EC40B10E9E746A8B6F2451CA58E600DD25D6751F34
205A06240CF8A98BED77515ABFCA5FB579B897918E9399C33811920EF0259B65
13EFE05B919FABD4050DF0E6C1F8094FBAEAFF3DA83CAFDFF1A030FF9BDBE6A1
D8C4530E7D65CC24A49B0DC4079C6032D79BAF33A5AA169F7BC5E5379E63BF91
3D9889BFA5E2CA6E79DC3C34948EB77321FF5FBEF0ACEFD40D1A1B6470F375FF
263F843D465F92> |
!
end
end end
%ADOEndSubsetFont
XXDFQB+LinLibertineOB-Identity-H [10.9091 0 0 -10.9091 0 0 ]msf
268.566 108.251 mo
(\000"\000\017\000\025)sh
295.817 108.251 mo
(\000#\000B\000T\000F\000M\000J\000O\000F\000T\000\013)sh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
268.566 121.949 mo
(\0004\000F\000R\000V\000F\000O\000U\000J\000B\000M\0003\000F\000D\000P\000N\000N\000F\000O\000E\000B\000U\000J\000P\000O\000\017)
[4.51904 4.44733 5.13776 5.36197 4.38455 5.52328 3.20999 2.88721 4.53699 4.68939 6.41995 4.44736 
4.08862 4.94043 8.11459 8.11459 4.38455 5.52328 5.03018 4.53696 3.20999 2.88724 4.94043 5.52328 
0 ]xsh
%ADOBeginSubsetFont: GAAAAA+LinLibertineO-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GAAAAA+LinLibertineO-Identity-H 12 GetGlyphDirectory
60 <001C60D8A8C9B806F536850CC93CA780BE9C2175AF61314453CB02871DAD
5A231196382795315770CA8D3543AEA53EA940064CFB61388A275C814837D548
C49A6823A6> |
20 <001C60D8A8C9B74A3E856A181C751C4977C45D75B4D5A840F761A55C673E
4449FFB9D72CC8A25A9B1FD2E690EA977BAFEC08D4F18D8FDCA97028EFDCBFFF
FF8374F39FA59C113DBC794934F1DBBCE3E957D24DC621C0007DF4CEA5AFCC0C
A6EB7966964968F86E45A3E68D468B4EF991EBA5CB6F95E548B40C64E69768E5
3221294EB1DC0627B4A55B7E404883FAD18EABEDCB1697F1BA59839759A16712
D1A73BF53C98BBFA72F3FC44CD1DEED5290A94D75A7FCCC2CD3916EA20A72A02
9A34586B743D71E1713FB62D33048327467EA3C5D50EF83867D11F96488FC672
68DE1841456F902AA14D5514F9A5F86F4808398A7141F4FB2589FF14866005DE
56B3B782F6A484137358DA336E198F2854430A7C07D36D7ADA49EEFB49C66A84
BD4E894E1C7A> |
62 <001C60D8A8C9B806F536847E1B0436679D933DABBBF1C6F3C8D936D4C8EC
92B624896EDF5178C398A7E286D424889483F8CD5956219ADA17335ED21BBC73
B3A1A83C78> |
1757 <001C60D8A8C9B85EE3A53F333B8A8F23BB48F6C9D0B7E3354A07558108
A7EA73B0F258A96F68DD3EE7E5833C08031D853BAA8E05AB3237CE3ADC233C12
79FB952DFBC8DF805D3F7C1E44DFC1C3086113> |
21 <001C60D8A8C9B74A3E8D9B6E40768FEBA3E97CE10ABA9C8678023262E9BC
ACCBA4EA8FE7142B542F6DBA2A70F0D828D1A64C62E8D7CBFFD0B565615A2CFD
C922C6B5C83351D865400CA72FB9435420350D97F4A2EDA19D46816492D8BDB0
BDE6860DCB1AF981B735FA2F2D7316E20FB69D4798599C2AFE83C7E5FCEAE09F
389E3A88BEF3AAEF81656739242ED696CC915C01F0A5320A18607262773E125C
066AABE49FECF0A8C839208C6731B69BC3639E55C63FA1ACE62A768268D2B54E
F03BE34A3B8B2E7959215CF5D1819DD7C95CEF7FBE1E51E0DC5FE7765900D3DA
BF661D> |
23 <001C60D8A8C9B74A3E8458FAF875E7E40A01840F552188C7EE2CF83D3BD0
9BE523F890BAB215AA6B1DEBE0B9D75059A9C00E212EE02735A31B466CB0DD51
185FFC6F4F7AA5944482ABECE5F941C20325E4D5CAD2D87C177ACD70D10EEC67
F031C3418AE538E28A7B0820306C75A339DB1D63AC2C94215E1272120199B9B3
EB7AE0785E48988C0900877D799A9CADE49A6660591CC6374BB82B20E35CAECD
DE589B2E64AB28C3ED77521CFDE50BE16EEA811B7D39B23031A277814A7DD210
B30991AD16E81AAFE8D04DE0E326CCB4F141B7C17FA895> |
40 <001C60D8A8C9B620B785E4885A0B78D2B6E02F7AB50BBC4D79BC342E6491
B183B8B020F538722C0AC21D39848613691F3E09BB9E38DE6F0CAA15A5349EF2
3DE9B2375FC6FBF93C30AC724638EBEA70EC6A1B8CB4E35228A012925EBB4F72
21BD50E7A2E9D4BFC972C13008011053DD3B2E48E55CD29EB202B3CF859226CB
763216DD5484A8CAD6849F0251A73EA96628F06C8F2F223239FD9AB00FA3DC66
D3FC6BE73FEF9B5DC53FE03DDB39B75090F9C4A981C56CD71D0F6F6CC18DB6C9
06C6EB46189E204EC0B7F014130EE5E9A0649B562FB51E1382C8A99AF4CE49BF
BA65A707FDF3167B87F1A508F681D41DD4DEAB25912B8C5192409A> |
47 <001C60D8A8C9B62E09AE150BAE1C0966FCA5B5854B94E7A3E47D7C12DE5F
1B66E98AC3796AC5C9C37AB266CD1E01EA37C2C76E610E759D2052BDB3D0CBD7
136628BC0823F4BC82827E555204D4E98DF95DA389735C10E6CC3826D90C16EA
22641ABFA322C5126B056C2EBC6738BD5E7F10AA8473A24B970747E595B2349B
FDC512396F7CAB1CB27F78411E0D896310BE53831EDA648787BD516F9CBAAF1F
B5FBB48AE92BA61C7FD03197F36C421CAB5AC08782DA3E20DE0E89D1B6176C19
D3BA049DE20FD47A765BB54982CB9DF6FEB547BB0D10E363E933C2847293F2CE
48148BFCFD12558C2F3DE4FFE3EB8B9F> |
24 <001C60D8A8C9B74A3E973E78F642DAD98F5CE12EE7A12510DA1768A18134
B6E71B8CAEF238EDA8DE0A17C7699AFBE0777E4B86D2A5BB99A7A290C985135A
629B5BFC059F5041653574F0452B106EFA07A638E5A4A4197D420ACD0C1EAD94
C349D05C2CD85919AC56E70D0612BDB9B36FB591B976787EE8AB7FDC8355C260
30ABE275B97C9068E97EB5FAAD5D7D9F0251584BCA8DCFE93F17221F> |
75 <001C60D8A8C9B85AB9ED68AC9E86885DB5266D6CB3A52F5EAF3CB21B04EA
D7E97EE981AAE002B4933C6DBFAF6F0F43653BC7132563FA0C658C20BF6F0D32
300FE236A7B1486D637D186B41CF7B0E07094FB22C24A86AF4351630A6255D7B
6CA2F8171B357EBC6D421F4E5A29B744FC5DED83459574595DCB1BEDEEE638AE
F813BA4732C429A99531D48EB18CABE7BE3A84D756CFCDADA6EE3E665BD6FA2D
ABF523BC2763ADDDCDBBBD6BA256> |
25 <001C60D8A8C9B74A3E856A1813A481F14D195C5C3E6D7AD02F9FED0CA477
DD5605C59C04BDE2B73815AFA4B5B8AEE20DE2D56FF42BD796962FC3F5366AB7
E7D136BD6D02A08EC511DB2E0CDBAAD691121032CF3B74FB5CAD766CCD0004A9
73C8E8E6F7F1283D0C4F700EB544F0779E353D47740080C1239F9E182E9293AD
AF84607628E106C160502DC598258725829B07DD1D196F75E2B48F4E92CD613B
0987A6DFE24171660E4C40886751432C1017BF9ABFD265B2D0968A68166CE21A
BFCA510E1425C7BD821B7876AA3445690DA6A893B26D8CB478A38254F3A81B> |
27 <001C60D8A8C9B87EB6FFACF2F24A0CBF0AF39F6E4442B655AC6E75470431
58E58DADB04C16E794F3FC0C4C6730755AA183348A53941053A7E38DF4D4AC2D
EFDC2594BA70B1> |
!
end
end end
%ADOEndSubsetFont
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
389.406 121.949 mo
(\000\011\000\022\000\012)sh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
400.703 121.949 mo
(\0004\000"\0004\0003\000F)sh
427.234 121.949 mo
(\000D)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
433.115 121.949 mo
(\000<)sh
436.307 121.949 mo
(\000\024)sh
440.476 121.949 mo
(\000>\000T\000F\000S\000W\000F\000T\000B\000T\000B\000T\000U\000S\000P\000O\000H)
[4.96741 3.49689 4.00803 3.46994 4.39343 4.00806 5.27222 4.09766 5.28125 5.88202 3.49689 2.83331 
3.27264 4.51904 4.85986 0 ]xsh
268.566 132.908 mo
(\000C\000B\000T\000F\000M\000J\000O\000F)sh
300.396 132.908 mo
(\000N\000P\000E\000F\000M\000\015\000J\000O\000U\000S\000P\000E\000V\000D\000J\000O\000H\000T\000F\000M\000G\000\016\000B\011R\000F\000O\000U\000J\000P\000O\000U\000P\000D\000B\000Q\000U\000V\000S\000F\000U\000S\000B\000O\000T\000J\000U\000J\000P\000O\000S\000F\000\016)
[7.0834 4.58185 4.53696 4.00806 2.36719 4.1246 2.42987 4.85986 2.83331 3.27264 4.57281 4.53699 
4.7612 3.83755 2.42987 4.85986 6.63519 3.49689 4.00803 2.36719 2.77957 3.03061 4.09766 5.50534 
4.00806 4.85986 2.83331 2.42987 4.51904 7.01184 2.83331 6.66202 3.83755 4.09766 4.65356 2.83331 
4.7612 3.27267 6.15097 2.83334 3.33545 4.09766 4.85983 3.49692 2.42984 2.83334 2.42984 4.51907 
7.01184 3.27264 4.00803 0 ]xsh
268.566 143.867 mo
(\000M\000B\000U\000J\000P\000O\000T\000I\000J\000Q)sh
307.175 143.867 mo
(\000C\000F\000U\000X\000F\000F\000O\000J\000U\000F\000N\000T\000\017\000\011\000\023\000\012)
[4.51001 4.00803 2.83334 6.63504 4.0618 4.00803 6.95795 2.42987 2.83331 4.00806 7.08337 3.49692 
4.07971 2.67203 4.16934 0 ]xsh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
375.74 143.867 mo
(\000*\000$\000-\0003\000F)sh
401.401 143.867 mo
(\000D)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
407.593 143.867 mo
(\000<)sh
410.785 143.867 mo
(\000\022)sh
414.954 143.867 mo
(\000>\000D\000B\000Q\000U\000V\000S\000F\000T\000V\000T\000F\000S\000T\006\335\000M\000B\000U\000F\000O\000U\000J\000O\000\016)
[5.29013 3.83759 4.09766 4.65353 2.83331 4.76123 3.27264 4.00803 5.58609 4.7612 3.49689 4.00806 
3.33542 3.49692 4.51013 2.36719 4.09766 2.83334 4.00803 4.85986 4.9314 2.42987 4.85986 0 
]xsh
268.566 154.826 mo
(\000U\000F\000O\000U\000J\000P\000O\000T)sh
300.782 154.826 mo
(\000C\000Z\000D\000M\000V\000T\000U\000F\000S\000J\000O\000H\000T\000F\000R\000V\000F\000O\000U\000J\000B\000M\000S\000F\000Q\000S\000F\000T\000F\000O\000U\000B\000U\000J\000P\000O\000T\000\017\000*\000U\000D\000P\000O\000T\000U\000S\000V\000D\000U\000T\000B\000O)
[4.42038 6.99377 3.83759 2.36719 4.76123 3.49689 2.83331 4.00806 3.33545 2.42984 4.85986 6.85928 
3.49689 4.07083 4.51016 4.76123 4.00803 4.85983 2.83334 2.42987 4.09763 4.75232 3.27267 4.00803 
4.65353 3.26376 4.00803 3.49692 4.008 4.85986 2.83334 4.09766 2.83334 2.42984 4.51904 4.85986 
3.49689 4.33981 2.66299 5.20944 3.83752 4.51907 4.85983 3.49689 2.83337 3.33542 4.7612 3.83759 
2.83331 5.88202 4.09766 0 ]xsh
268.566 165.785 mo
(\000J\000O\000U\000F\000O\000U\000\016\000D\000P\000O\000U\000S\000B\000T\000U)sh
325.045 165.785 mo
(\000U\000B\000T\000L)sh
341.875 165.785 mo
(\000B\000O\000E)sh
357.189 165.785 mo
(\000B\000T\000F\000R\000V\000F\000O\000D\000F\000\016\000B\000V\000H\000N\000F\000O\000U\000F\000E\000D\000P\000O\000U\000S\000B\000T\000U\000J\000W\000F\000U\000B\000T\000L\000J\000O)
[5.90881 3.49689 4.07083 4.51016 4.7612 4.00806 4.85986 3.83755 4.00803 3.03064 4.09766 4.7612 
4.48318 7.0834 4.00803 4.85986 2.83331 4.07086 6.35718 3.83755 4.51904 4.85986 2.83334 3.33545 
4.09763 3.49692 2.83331 2.42987 4.39343 5.8103 2.83334 4.09766 3.49689 6.41095 2.42984 0 
]xsh
268.566 176.744 mo
(\000B\000T\000F\000M\000G\000\016\000T\000V\000Q\000F\000S\000W\000J\000T\000F\000E\000M\000F\000B\000S\000O\000J\000O\000H\000N\000B\000O\000O\000F\000S\000G\000P\000S\0004\0003\000\017\000\011\000\024\000\012)
[5.81921 3.49689 4.00803 2.36722 2.77954 3.03064 3.49689 4.7612 4.71634 4.00803 3.46994 4.45627 
2.42984 3.49692 4.07083 6.26743 2.36719 4.00803 4.09766 3.33545 4.85986 2.42984 4.85986 6.20477 
7.08337 4.09766 4.85986 4.85986 4.00803 5.06589 2.77957 4.51907 5.05701 4.34869 5.26331 3.70309 
2.67203 4.16934 0 ]xsh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
430.293 176.744 mo
(\000%\000V\000P\0003\000F)sh
458.035 176.744 mo
(\000D)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
463.859 176.744 mo
(\000<)sh
467.051 176.744 mo
(\000\026)sh
471.221 176.744 mo
(\000>\000Q\000S\000P\000Q\000P\000T\000F\000T)
[4.91364 4.65353 3.27264 4.51904 4.70731 4.51904 3.49689 4.00806 0 ]xsh
268.566 187.703 mo
(\000N\000P\000E\000F\000M\000\016\000M\000F\000W\000F\000M\000B\000O\000E\000T\000F\000N\000B\000O\000U\000J\000D\000\016\000M\000F\000W\000F\000M\000D\000P\000O\000U\000S\000B\000T\000U\000J\000W\000F\000F\000O\000I\000B\000O\000D\000F\000N\000F\000O\000U\000U\000P\000B\000M\000M\000F\000W\000J\000\016)
[7.0834 4.58185 4.53696 4.00803 2.36722 3.03061 2.36719 3.95428 4.38455 4.00803 4.50128 4.09763 
4.85986 6.67993 3.49689 4.00803 7.0834 4.09766 4.85986 2.83331 2.42987 3.83755 3.03064 2.36719 
3.95425 4.38455 4.00806 4.51013 3.83759 4.51904 4.85986 2.83331 3.33545 4.09766 3.49689 2.83331 
2.42987 4.39346 6.14209 4.00803 4.85986 4.82388 4.09763 4.85986 3.83759 4.00803 7.0834 4.00803 
4.85986 4.97629 2.83331 6.67105 4.09763 2.36722 2.36722 3.95425 4.45624 2.42984 0 ]xsh
268.566 198.662 mo
(\000B\000U\000F)sh
281.746 198.662 mo
(\000U\000I\000F)sh
295.653 198.662 mo
(\000E\000F\000H\000S\000B\000E\000B\000U\000J\000P\000O)sh
341.633 198.662 mo
(\000J\000T\000T\000V\000F)sh
362.067 198.662 mo
(\000P\000G\000S\000F\000Q\000S\000F\000T\000F\000O\000U\000B\000U\000J\000P\000O\000T\000\017)
[4.51904 5.02118 3.27264 4.00803 4.65353 3.26376 4.00803 3.49689 4.00806 4.85986 2.83331 4.09766 
2.83331 2.42987 4.51904 4.85986 3.49689 0 ]xsh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
268.566 209.62 mo
(\000.\000V\000M\000U\000J\000\016\000#\000F\000I\000B\000W\000J\000P\000S)sh
332.442 209.62 mo
(\0004\000F\000R\000V\000F\000O\000U\000J\000B\000M\0003\000F\000D\000P\000N\000N\000F\000O\000E\000B\000U\000J\000P\000O\000\017)
[4.51904 4.44733 5.13776 5.36197 4.38455 5.52325 3.21002 2.88721 4.53699 4.4115 6.41998 4.44736 
4.08859 4.94046 8.11459 8.11456 4.38458 5.52325 5.03021 4.53696 3.20999 2.88721 4.94046 5.52328 
0 ]xsh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
452.713 209.62 mo
(\000\011\000\025\000\012)sh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
463.721 209.62 mo
(\000.\000\(\000/\000/\000\016\0004\0001\000S)sh
508.615 209.62 mo
(\000F\000E)
[4.43832 0 ]xsh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
268.566 220.579 mo
(\000<)sh
271.758 220.579 mo
(\000\027)sh
275.928 220.579 mo
(\000>\000J\000T\000B\000\(\000/\000/\000\016\000C\000B\000T\000F\000E\000.\000#\0004\0003\000N\000P\000E\000F\000M\000U\000I\000B\000U\000D\000P\000O\000T\000U\000S\000V\000D\000U\000T\000B\000N\000V\000M\000U\000J\000\016\000S\000F\000M\000B\000U\000J\000P\000O\000B\000M)
[5.24539 2.42987 5.55023 6.15988 6.14194 6.26758 6.26755 3.03064 4.42038 4.09766 3.49689 4.07083 
6.59033 7.52283 5.27222 4.34872 7.31668 7.08337 4.58185 4.53699 4.00803 4.42941 2.83334 4.82388 
4.09766 4.88666 3.83759 4.51904 4.85986 3.49689 2.83331 3.33545 4.76123 3.83752 2.83334 5.55023 
6.15988 7.0834 4.7612 2.36719 2.83334 2.42987 3.03061 3.27264 4.00806 2.36719 4.09766 2.83331 
2.42987 4.51904 4.85986 4.09766 0 ]xsh
268.566 231.538 mo
(\000J\000U\000F\000N)sh
288.489 231.538 mo
(\000H\000S\000B\000Q\000I)sh
313.46 231.538 mo
(\000P\000O\000B\000V\000Y\000J\000M\000J\000B\000S\000Z\000B\000O\000E\000U\000B\000S\000H\000F\000U\000C\000F\000I\000B\000W\000J\000P\000S\000T\000F\000R\000V\000F\000O\000D\000F\000T\000\017\000'\000J\000O\000B\000M\000M\000Z\000\015)
[4.51904 8.43747 4.09766 4.76123 4.39355 2.42987 2.36719 2.42987 4.09766 3.46994 8.19528 4.09766 
4.85986 8.11459 2.83334 4.09763 3.33545 4.48322 4.00803 6.41095 4.51001 4.00806 4.82385 4.09766 
4.45624 2.42987 4.51904 6.91306 3.49689 4.07083 4.51016 4.7612 4.00806 4.85986 3.83752 4.00806 
3.49689 5.55914 4.34869 2.42987 4.85986 4.09766 2.36719 2.36719 4.09766 0 ]xsh
268.566 242.497 mo
(\000J\000U\000J\000O\000U\000F\000H\000S\000B\000U\000F\000T\000U\000I\000F\000S\000F\000Q\000S\000F\000T\000F\000O\000U\000B\000U\000J\000P\000O\000T\000U\000I\000S\000P\000V\000H\000I\000B\000H\000B\000U\000J\000O\000H\000N\000F\000D\000I\000B\000O\000J\000T\000N\000\017\000\011\000\026\000\012)
[2.42984 5.42465 2.42984 4.85986 2.83334 4.00803 4.48318 3.33545 4.09766 2.83334 4.00803 6.09708 
2.83334 4.82388 6.59933 3.27264 4.00803 4.65353 3.26376 4.00803 3.49689 4.00806 4.85986 2.83331 
4.09766 2.83334 2.42984 4.51904 4.85986 6.0882 2.83334 4.82385 3.27267 4.51904 4.7612 4.48318 
7.41519 6.68893 4.48322 4.09766 2.83331 2.42987 4.85986 7.08337 7.08344 4.0708 3.83759 4.82385 
4.09766 4.85986 2.42987 3.49689 7.08337 4.57281 2.67206 4.16931 0 ]xsh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
268.566 253.791 mo
(\000.\000\(\000/\000/\000\016\0004\0001\000S)sh
313.469 253.791 mo
(\000F\000E)
[4.43832 0 ]xsh
%ADOBeginSubsetFont: OAAAAA+txsys AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
systemdict begin
XXDFQC+txsys dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/dagger <1C60D8A8C9B7A73DB5C5C5EE042E03A9423375092A030B42E647926
C4B6F2D2D0DA83671048C6896EFADCA10E18F402A01D393357447D15D244190A
D0CB960EAE9B41693254BD66671E00319AC121FA8680DB345936C975F7F79322
3C2174C11A6E23040B5C473FB239EF65E7CF03E96DEC9B3B47FD8EE7D690F717
EEDA41A1602893665C0877897B529D2A54B20E6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XXDFQC+txsys /Encoding get
dup 121 /dagger put
pop
%ADOEndSubsetFont
/XXDFQC+txsys*1 
[2{/.notdef}rp /multiply 29{/.notdef}rp /arrowleft 17{/.notdef}rp /element 15{/.notdef}rp /B 
16{/.notdef}rp /S /.notdef /U /V 15{/.notdef}rp /braceleft /braceright 
2{/.notdef}rp /bar 14{/.notdef}rp /dagger 62{/.notdef}rp /plus /parenleft /parenright 
/bracketleft /bracketright 67{/.notdef}rp]
XXDFQC+txsys nf
XXDFQC+txsys*1 [7.2727 0 0 -7.2727 0 0 ]msf
322.938 250.536 mo
(y)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
330.152 253.791 mo
(\000J\000T\000B\000T\000J\000N\000Q\000M\000J\012W\000F\000E\000W\000F\000S\000T\000J\000P\000O\000G\000P\000S)
[2.42987 6.57239 7.17313 3.49689 2.42987 7.0834 4.65353 2.36719 2.42987 5.02115 4.07083 7.62137 
4.39346 4.00803 3.33545 3.49689 2.42984 4.51907 7.9263 2.77957 4.51904 0 ]xsh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
429.328 253.791 mo
(\000.\000\(\000/\000/\000\016\0004\0001\000S)sh
474.231 253.791 mo
(\000F\000E)
[4.43832 0 ]xsh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
486.779 253.791 mo
(\000J\000O\000U\000I\000F)
[2.42987 7.93533 2.83334 4.82385 0 ]xsh
268.566 264.75 mo
(\000B\000H\000H\000S)sh
284.902 264.75 mo
(\000F\000H\000B\000U\000J\000P\000O)sh
313.953 264.75 mo
(\000Q\000S\000P\000D\000F\000T\000T\000\015\000X\000I\000F\000S\000F\000F\000B\000D\000I\000T\000Q\000F\000D\000J\012W\000D\000C\000F\000I\000B\000W\000J\000P\000S\000B\000H\000H\000S\000F\000H\000B\000U\000F\000T\000P\000O\000M\000Z)
[4.65353 3.27264 4.57281 3.83755 4.00803 3.49692 3.49689 3.80173 6.69781 4.82388 4.00803 3.27267 
5.83713 4.00803 4.09766 3.83755 6.65298 3.49689 4.71634 4.07083 3.83755 2.42987 5.02118 5.67566 
4.51004 4.00803 4.82388 4.09763 4.45627 2.42984 4.51904 5.16455 4.09766 4.48322 4.48322 3.27264 
4.00803 4.48318 4.09766 2.83334 4.00803 5.32599 4.51904 4.85986 2.36719 0 ]xsh
268.234 275.709 mo
(\000X\000J\000U\000I)sh
286.516 275.709 mo
(\000O\000F\000J\000H\000I\000C)sh
311.631 275.709 mo
(\000P\000S\000T)sh
324.48 275.709 mo
(\000J\000O\000W)sh
336.163 275.709 mo
(\000P\000M\000W)sh
347.434 275.709 mo
(\000F\000E\000J\000O\000U\000I\000F\000T\000B\000N\000F\000C\000F\000I\000B\000W\000J\000P\000S\000\016\000G\000P\000S\000X\000B\000S\000E\000P\000S\000C\000F\000I\000B\000W\000J\000P\000S\000\016)
[4.0618 6.0433 2.42987 6.3573 2.83334 4.82385 5.5144 3.49689 4.09766 7.0834 5.50549 4.51001 
4.00803 4.82388 4.09766 4.45624 2.42987 4.51904 3.33545 3.03061 2.77957 4.51904 3.46991 6.69788 
4.09766 3.27264 6.02539 4.51904 4.8418 4.51001 4.00806 4.82385 4.09766 4.45624 2.42987 4.51904 
3.33545 0 ]xsh
268.566 286.668 mo
(\000C\000B\000D\000L\000X\000B\000S)sh
299.58 286.668 mo
(\000E\000J\000O\000U\000F\000S\000B\000D\000U\000J\000P\000O\000T\000\017\000\011\000\027\000\012)
[7.83655 2.42987 4.85986 2.83331 4.00806 3.33545 4.09766 3.83755 2.83331 2.42987 4.51904 4.85986 
3.49689 5.29013 2.67203 4.16934 0 ]xsh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
369.078 286.668 mo
(\000.\000#\000\))sh
390.66 286.668 mo
(\0005)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
399.818 286.668 mo
(\000<)sh
403.01 286.668 mo
(\000\030)sh
407.18 286.668 mo
(\000>\000J\000T\000B\000G\000S\000B\000N\000F\000X\000P\000S\000L\000U\000I\000B\000U\000D\000P\000N\000\016)
[6.5007 2.42984 6.80554 7.41516 2.77957 3.33545 4.09766 7.08337 3.95428 6.62616 4.51904 3.33545 
7.89032 2.83334 4.82388 4.09766 6.14194 3.83755 4.51907 7.0834 0 ]xsh
268.566 297.627 mo
(\000C\000J\000O\000F\000T)sh
289.269 297.627 mo
(\0005\000S\000B\000O\000T\000G\000P\000S\000N\000F\000S\000B\000O\000E\000\(\000/\000/\000U\000F\000D\000I\000O\000J\000R\000V\000F\000T\000\015\000J\000O\000X\000I\000J\000D\000I\000N\000V\000M\000U\000J\000\016\000T\000D\000B\000M\000F\0005\000S\000B\000O\000T\000\016)
[5.18259 3.33545 4.09766 4.85986 3.49689 2.77957 4.51904 3.33545 7.0834 4.00803 4.82388 4.09763 
4.85986 6.03442 6.14197 6.26755 7.75598 2.83334 4.07083 3.83759 4.82385 4.85986 2.42987 4.51013 
4.76123 4.00803 3.49689 3.47006 2.42987 6.3573 6.69788 4.82385 2.42987 3.83755 6.31229 7.0834 
4.7612 2.36722 2.83334 2.42984 3.03061 3.49689 3.83759 4.09766 2.36719 5.50549 5.18262 3.33545 
4.09766 4.85983 3.49692 0 ]xsh
268.566 308.586 mo
(\000G\000P\000S\000N\000F\000S)sh
295.536 308.586 mo
(\000K\000P\000J\000O\000U\000M\000Z)sh
321.521 308.586 mo
(\000F\000O\000D\000P)sh
338.808 308.586 mo
(\000E\000F\000T)sh
352.76 308.586 mo
(\000C\000F\000I\000B\000W\000J\000P\000S\000\016\000B\000X\000B\000S\000F\000T\000F\000R\000V\000F\000O\000U\000J\000B\000M\000Q\000B\011R\000F\000S\000O\000T\000B\000U\000C\000P\000U\000I)
[4.51004 4.00803 4.82388 4.09766 4.45624 2.42984 4.51907 3.33545 3.03061 4.09766 6.69785 4.09766 
3.27264 5.91785 3.49692 4.0708 4.51016 4.7612 4.00806 4.85986 2.83331 2.42987 4.09766 4.28604 
4.65353 4.09766 5.50537 4.008 3.33545 4.85986 5.40674 4.09766 4.75217 4.51001 4.51904 2.83334 
0 ]xsh
268.566 319.545 mo
(\012W\000O\000F\000\016\000H\000S\000B\000J\000O\000F)sh
308.762 319.545 mo
(\000E\000B\000O\000E\000D\000P\000B\000S\000T\000F\000\016\000H\000S\000B\000J\000O\000F\000E\000M\000F\000W\000F\000M\000T\000\017\011_\000F\000D\000P\000O\000T\000U\000S\000V\000D\000U\000F\000E\000I\000Z\000Q\000F\000S\000H\000S\000B\000Q\000I)
[6.02539 4.09766 4.85986 6.03442 3.83755 4.51904 4.09766 3.33545 3.49689 4.00806 3.03061 4.48318 
3.33545 4.09766 2.42987 4.85986 4.07083 6.03442 2.36719 3.95425 4.38458 4.00803 2.36722 3.49689 
3.46103 9.39682 5.49646 3.83759 4.51904 4.85986 3.49689 2.83331 3.33545 4.76123 3.83752 2.83334 
4.07083 6.03442 4.82388 4.61771 4.71631 4.00806 3.33545 4.48318 3.33545 4.09766 4.65353 0 
]xsh
268.566 330.504 mo
(\000J\000T\000Q\000S\000J\000N\000B\000S\000J\000M\000Z\000V\000U\000J\000M\000J\000[\000F\000E\000G\000P\000S\000D\000B\000Q\000U\000V\000S\000J\000O\000H\000H\000M\000P\000C\000B\000M\000E\000F\000Q\000F\000O\000E\000F\000O\000D\000J\000F\000T\000B\000N\000P\000O\000H\000N\000V\000M\000\016)
[2.42984 5.29916 4.65356 3.33542 2.42987 7.0834 4.09766 3.33545 2.42984 2.36722 6.42886 4.7612 
2.83334 2.42984 2.36719 2.42987 3.80173 4.07083 6.34814 2.77957 4.51904 5.14661 3.83755 4.09766 
4.65356 2.83331 4.76123 3.33545 2.42984 4.85986 6.29437 4.48318 2.36719 4.51907 4.42038 4.09766 
4.17841 4.53693 4.00806 4.71634 4.00803 4.85986 4.53699 4.00803 4.85983 3.83759 2.42987 4.00803 
5.30807 4.09766 7.08337 4.51904 4.85986 6.29437 7.08337 4.76123 2.36719 0 ]xsh
268.566 341.463 mo
(\000U\000J\000Q\000M\000F)sh
287.942 341.463 mo
(\000C\000F\000I\000B\000W\000J\000P\000S\000T\000\017\000\011\000\030\000\012)
[4.51001 4.00803 4.82388 4.09766 4.45624 2.42987 4.51904 3.33545 3.49689 5.07492 2.67203 4.16934 
0 ]xsh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
341.305 341.463 mo
(\000.\000#\000\016\0004\0005\0003)sh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
378.318 341.463 mo
(\000<)sh
381.51 341.463 mo
(\000\031)sh
385.679 341.463 mo
(\000>\000J\000T\000B\0005\000S\000B\000O\000T\000G\000P\000S\000N\000F\000S\000\016\000C\000B\000T\000F\000E\000N\000F\000U\000I\000P\000E)
[6.27646 2.42984 6.59033 7.19107 5.18259 3.33545 4.09766 4.85986 3.49689 2.77957 4.51904 3.33545 
7.08337 4.00806 3.33545 3.03061 4.42041 4.09766 3.49689 4.0618 7.6304 7.08337 4.00806 2.83331 
4.82388 4.58185 0 ]xsh
268.566 352.421 mo
(\000U\000I\000B\000U)sh
286.391 352.421 mo
(\000V\000U\000J\000M\000J\000[\000F\000T)sh
315.764 352.421 mo
(\000#\000&\0003\0005)sh
339.884 352.421 mo
(\000B\000T\000J\000U\000T\000C\000B\000D\000L\000C\000P\000O\000F\000N\000P\000E\000F\000M\000\017\000*\000U\000D\000P\000O\000T\000J\000E\000F\000S\000T\000C\000F\000I\000B\000W\000J\000P\000S\000\016)
[4.09766 6.74271 2.42987 2.83331 6.74274 4.42038 4.09766 3.83759 4.59073 4.51001 4.51904 4.85986 
7.24484 7.08337 4.58185 4.53699 4.00806 2.36719 5.21844 2.66299 6.07916 3.83755 4.51904 4.85986 
3.49689 2.42987 4.53696 4.00803 3.33545 6.74274 4.51001 4.00806 4.82385 4.09766 4.45624 2.42987 
4.51904 3.33545 0 ]xsh
268.566 363.38 mo
(\000T\000Q\000F\000D\000J\012W\000D\000T\000F\000N\000B\000O\000U\000J\000D\000T\000B\000O\000E\012W\000O\000F\000\016\000H\000S\000B\000J\000O\000F\000E\000I\000F\000U\000F\000S\000P\000H\000F\000O\000F\000P\000V\000T\000E\000F\000Q\000F\000O\000E\000F\000O\000D\000J\000F\000T\000\015)
[3.49689 4.71634 4.07083 3.83755 2.42987 5.02118 6.73367 3.49689 4.00806 7.08337 4.09766 4.85986 
2.83334 2.42984 3.83755 6.40207 4.09763 4.85986 7.44214 5.02118 4.85983 4.00803 3.03064 4.48322 
3.33545 4.09763 2.42987 4.85983 4.07086 7.44214 4.82385 4.00806 2.83331 4.00806 3.27264 4.51904 
4.48318 4.00803 4.85986 4.06183 4.51904 4.7612 6.40207 4.53693 4.00806 4.71634 4.00803 4.85986 
4.53699 4.008 4.85986 3.83759 2.42987 4.008 3.49692 0 ]xsh
268.566 374.339 mo
(\000B\000T\000T\000J\000H\000O\000J\000O\000H)sh
305.695 374.339 mo
(\000T\000F\000Q\000B\000S\000B\000U\000F)sh
338.719 374.339 mo
(\000X\000F\000J\000H\000I\000U\000Q\000B\000S\000B\000N\000F\000U\000F\000S\000T\000G\000P\000S\000F\000B\000D\000I\000Q\000B\000J\000S\000X\000J\000T\000F\000D\000P\000N\000C\000J\000O\000B\000\016)
[6.63504 4.00803 2.42987 4.48322 4.82385 5.32599 4.65353 4.09766 3.33545 4.09766 7.0834 4.00803 
2.83334 4.00803 3.33545 5.98953 2.77957 4.51904 5.83713 4.00806 4.09766 3.83755 7.31653 4.65353 
4.09766 2.42987 3.46991 6.69788 2.42984 3.49692 6.5097 3.83755 4.51907 7.08337 4.42041 2.42987 
4.85983 4.09766 0 ]xsh
268.566 385.298 mo
(\000U\000J\000P\000O)sh
285.36 385.298 mo
(\000P\000G\000C\000F\000I\000B\000W\000J\000P\000S\000U\000Z\000Q\000F\000T\000\017\000.\000F\000B\000O\000X\000I\000J\000M\000F\000\015\000J\000U\000E\000J\000T\000D\000B\000S\000E\000T\000U\000I\000F\000D\000P\000N\000N\000P\000O\000M\000Z\000V\000T\000F\000E)
[4.51904 4.93155 4.51004 4.00803 4.82388 4.09763 4.45627 2.42984 4.51904 5.49634 2.83334 4.61768 
4.71634 4.00803 3.49692 4.12457 7.52286 4.00803 4.09766 4.85986 6.69785 4.82388 2.42987 2.36719 
3.92731 4.1246 2.42987 4.98532 4.53696 2.42984 3.49692 3.83755 4.09766 3.27264 4.53699 5.64886 
2.83331 4.82388 6.16 3.83759 4.51904 7.0834 7.0834 4.51904 4.85986 2.36719 6.77856 4.7612 
3.49692 4.0708 0 ]xsh
268.566 396.257 mo
(\000Q\000P\000T\000J\000U\000J\000P\000O\000B\000M\000F\000O\000D\000P\000E\000J\000O\000H\000B\000O\000E\000E\000F\000T\000J\000H\000O\000T\000B\000I\000F\000V\000S\000J\000T\000U\000J\000D\000C\000V\000D\000L\000F\000U\000J\000O\000H\000N\000F\000D\000I\000B\000O\000J\000T\000N)
[4.71634 4.51904 3.49689 2.42987 2.83331 2.42987 4.51904 4.85986 4.09766 4.58185 4.00803 4.85986 
3.83755 4.58185 4.53696 2.42987 4.85983 6.69788 4.09766 4.85983 6.75162 4.53699 4.00803 3.49689 
2.42987 4.48318 4.85986 5.71155 6.31229 4.82388 4.00803 4.7612 3.33545 2.42987 3.49689 2.83331 
2.42987 6.06125 4.42038 4.76123 3.83759 4.5907 4.00806 2.83331 2.42987 4.85986 6.69785 7.0834 
4.07083 3.83755 4.82388 4.09763 4.85986 2.42987 3.49689 0 ]xsh
268.566 407.216 mo
(\000G\000P\000S)sh
281.163 407.216 mo
(\000S\000F\000M\000B\000U\000J\000W\000F\000Q\000P\000T\000J\000U\000J\000P\000O\000F\000O\000D\000P\000E\000J\000O\000H\000\017\000'\000J\000O\000B\000M\000M\000Z\000\015\000J\000U\000B\000Q\000Q\000M\000J\000F\000T\000U\000I\000F\000.\000.\000P\000&\000N\000F\000D\000I\000B\000\016)
[3.27264 4.00803 2.36719 4.09766 2.83334 2.42984 4.38458 5.96271 4.71634 4.51904 3.49692 2.42984 
2.83334 2.42984 4.51907 6.82343 4.00806 4.85983 3.83755 4.58185 4.53699 2.42987 4.85983 4.48322 
3.94522 4.34872 2.42984 4.85986 4.09766 2.36719 2.36719 4.09766 3.92731 2.42987 4.79694 4.09766 
4.6535 4.65356 2.36719 2.42987 4.00803 5.46048 2.83331 4.82391 5.98065 7.52283 7.52286 4.51904 
6.95795 7.0834 4.0708 3.83759 4.82385 4.09766 0 ]xsh
268.566 418.175 mo
(\000O\000J\000T\000N)sh
288.202 418.175 mo
(\000U\000P\000J\000U\000T\000Q\000S\000F\000E\000J\000D\000U\000J\000P\000O\000N\000P\000E\000V\000M\000F\000\017\000\011\000\031\000\012)
[2.83331 6.29437 2.42987 2.83334 5.27222 4.65353 3.27264 4.0618 4.53699 2.42984 3.83759 2.83331 
2.42987 4.51904 6.62628 7.0834 4.58185 4.53696 4.76123 2.36719 3.92731 3.73907 2.672 4.16937 
0 ]xsh
XXDFQB+LinLibertineOB-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
389.358 418.175 mo
(\000/\000F\000Y\000U\000*\0001)
[6.63519 4.32175 5.03018 3.20999 3.29071 0 ]xsh
XXDFPZ+LinLibertineO-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
419.123 418.175 mo
(\000<)sh
422.315 418.175 mo
(\000\025)sh
426.485 418.175 mo
(\000>\000J\000T\000B\000M\000T\000P\000B\0005\000S\000B\000O\000T\000G\000P\000S\000N\000F\000S\000\016)
[4.9585 2.42987 5.27222 4.09766 2.36719 3.49689 6.29437 5.86411 5.18259 3.33545 4.09766 4.85986 
3.49689 2.77957 4.51904 3.33545 7.08337 4.00806 3.33545 0 ]xsh
268.566 429.134 mo
(\000C\000B\000T\000F)sh
284.651 429.134 mo
(\000E\000N\000P\000E\000F\000M\000U\000I\000B\000U\000E\000J\000W\000J\000E\000F\000T\000U\000I\000F\000Q\000S\000P\000C\000M\000F\000N\000J\000O\000U\000P\000U\000X\000P\000T\000V\000C\000U\000B\000T\000L\000T\000\033\000O\000F\000Y\000U\000\016\000J\000U\000F\000N)
[6.44678 7.0834 4.58185 4.53696 4.00806 4.28604 2.83331 4.82388 4.09766 4.74313 4.53699 2.42984 
4.45627 2.42984 4.53699 4.00803 5.41574 2.83334 4.82388 5.91785 4.65353 3.27264 4.51904 4.42041 
2.36719 4.00803 8.99323 2.42987 4.85986 2.83331 6.42886 2.83334 6.63504 6.42886 3.49689 4.76123 
4.42041 2.83331 4.09766 3.49689 4.59073 3.49692 4.03485 4.85983 3.95425 4.39362 2.83331 3.03064 
2.42984 2.83334 4.00803 0 ]xsh
268.566 440.093 mo
(\000Q\000S\000F\000E\000J\000D\000U\000J\000P\000O\000B\000O\000E\000Q\000V\000S\000D\000I\000B\000T\000F\000Q\000S\000F\000E\000J\000D\000U\000J\000P\000O\000\015\000X\000I\000F\000S\000F\000U\000I\000F\012W\000S\000T\000U\000U\000B\000T\000L\000F\000Y\000U\000S\000B\000D\000U\000T)
[4.65353 3.27264 4.0618 4.53699 2.42984 3.83759 2.83331 2.42987 4.51904 7.85464 4.09763 4.85986 
7.54077 4.65353 4.76123 3.27264 3.83755 4.82388 4.09766 3.49689 7.00281 4.65353 3.27264 4.0618 
4.53699 2.42984 3.83759 2.83331 2.42987 4.51904 4.85986 4.97641 6.69785 4.82388 4.00803 3.27264 
7.00281 2.83334 4.82388 7.01184 5.02115 3.33545 3.49689 5.83713 2.83334 4.09766 3.49689 7.59454 
3.95425 4.39362 2.83331 3.33545 4.09766 3.83755 2.83334 0 ]xsh
268.566 451.052 mo
(\000E\000J\012V\000F\000S)sh
288.032 451.052 mo
(\000F\000O\000U)sh
301.212 451.052 mo
(\000D\000P\000O\000U\000F)sh
321.216 451.052 mo
(\000Y\000U\000J\000O\000G\000P\000S\000N\000B\000U\000J\000P\000O\000G\000S\000P\000N\000C\000F\000I\000B\000W\000J\000P\000S\000\016\000T\000Q\000F\000D\000J\012W\000D\000T\000F\000R\000V\000F\000O\000D\000F\000T\000B\000O\000E)
[4.39359 4.32178 2.42984 4.85986 2.77957 4.51904 3.33545 7.08337 4.09766 2.83334 2.42987 4.51904 
6.3573 2.77957 3.27264 4.51904 8.56281 4.51001 4.00803 4.82388 4.09766 4.45624 2.42987 4.51904 
3.33545 3.03061 3.49689 4.71634 4.07083 3.83755 2.42987 5.02118 5.33502 3.49689 4.0708 4.51019 
4.76117 4.00806 4.85986 3.83755 4.00803 4.99435 4.09766 4.85986 0 ]xsh
268.566 462.01 mo
(\000C\000F\000I\000B\000W\000J\000P\000S\000\016\000B\000H\000O\000P\000T\000U\000J\000D\000T\000F\000R\000V\000F\000O\000D\000F\000T\000\017\011_\000F\000T\000F\000D\000P\000O\000E\000U\000B\000T\000L\000G\000P\000D\000V\000T\000F\000T\000P\000O\000M\000F\000B\000S\000O\000J\000O\000H)
[4.51001 4.00803 4.82388 4.09766 4.45624 2.42987 4.51904 3.33545 3.03061 4.09766 4.48322 4.85986 
4.51904 3.49689 2.83331 2.42987 5.96259 3.49689 4.07086 4.51013 4.76123 4.00803 4.85986 3.83755 
4.00803 3.49692 4.10666 9.39682 6.14209 3.49689 4.07086 3.83755 4.51904 4.85986 6.67105 2.83331 
4.09766 3.49689 6.72479 2.77957 4.58182 3.83759 4.76123 3.49689 4.00803 5.63095 4.51904 6.9939 
2.36722 4.00803 4.09766 3.33545 4.85986 2.42987 4.85983 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/XXDFQP+LMSans9-Regular*1 uf
/XXDFQP+LMSans9-Regular uf
/SBAAAA+LMSans9-Regular uf
/XXDFQL+LibertineMathMI5*1 uf
/XXDFQL+LibertineMathMI5 uf
/OBAAAA+LibertineMathMI5 uf
/XXDFQO+LibertineMathBRM*1 uf
/XXDFQO+LibertineMathBRM uf
/RBAAAA+LibertineMathBRM uf
/XXDFQN+txexs*1 uf
/XXDFQN+txexs uf
/QBAAAA+txexs uf
/XXDFQI+MinLibReg*1 uf
/XXDFQI+MinLibReg uf
/LBAAAA+MinLibReg uf
/XXDFQH+txsyb*1 uf
/XXDFQH+txsyb uf
/KBAAAA+txsyb uf
/XXDFPY+LinBiolinumO-Identity-H-Identity-H uf
/XXDFPY+LinBiolinumO-Identity-H /CIDFont ur
/XXDFQM+NewTXMI*1 uf
/XXDFQM+NewTXMI uf
/PBAAAA+NewTXMI uf
/XXDFQG+MinLibBol*1 uf
/XXDFQG+MinLibBol uf
/JBAAAA+MinLibBol uf
/XXDFQF+LibertineMathMI7*1 uf
/XXDFQF+LibertineMathMI7 uf
/IBAAAA+LibertineMathMI7 uf
/XXDFQD+txmiaX*1 uf
/XXDFQD+txmiaX uf
/GBAAAA+txmiaX uf
/XXDFQJ+LibertineMathBMI*1 uf
/XXDFQJ+LibertineMathBMI uf
/MBAAAA+LibertineMathBMI uf
/XXDFQE+LibertineMathMI*1 uf
/XXDFQE+LibertineMathMI uf
/HBAAAA+LibertineMathMI uf
/XXDFQK+txbsys*1 uf
/XXDFQK+txbsys uf
/NBAAAA+txbsys uf
/XXDFPZ+LinLibertineO-Identity-H-Identity-H uf
/XXDFPZ+LinLibertineO-Identity-H /CIDFont ur
/XXDFQC+txsys*1 uf
/XXDFQC+txsys uf
/OAAAAA+txsys uf
/XXDFQA+LinLibertineOI-Identity-H-Identity-H uf
/XXDFQA+LinLibertineOI-Identity-H /CIDFont ur
/XXDFQB+LinLibertineOB-Identity-H-Identity-H uf
/XXDFQB+LinLibertineOB-Identity-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
